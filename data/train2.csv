text,author
"Сегодня EA объявила об изменениях в системе DRM Spore


Увеличение лимита установок с 3 до 5.

Данные от самой EA:


Общее кол-во активированных копий: 437 138
Активированных только на 1 компьютере: 86%
Активированных на 2х компьютерах: 14%
Активированных на 3х компьютерах: 0.4%

Пяти установок одной игры должно хватить практически каждому.

Аккаунт теперь привязан не к копии, а к установке. У каждой установки будет своё имя (screen name), история достижений и т.д…

В случае отключения серверов авторизации Electronic Arts пообещали выпустить патч, убирающий DRM из игры.",kurokikaze
"Питер Симонсен с командой инженеров из Дании разработали новую технологию трехмерного изображения, Cheoptics360, позволяющую проецировать трёхмерные объекты или видео в воздухе. Демонстрационные прототипы Cheoptics напоминают голографические проекторы из фантастических фильмов.



Cheoptics360 использует четыре 3D-проектора, проецируемые изображения собираются в одно внутри прозрачной призмы-пирамиды, отображающей висящее в воздухе видео.

Прототип может показывать компьютерную анимацию и фильмы, и масштабировать их в размере от полутора до тридцати метров.



",kurokikaze
"Несколько недель назад один доктор из моей лаборатории зашёл на Амазон чтобы купить копию книги Питера Лоуренса The Making of a Fly — классический труд по биологии развития, с которым мы — и другие биологи, работающие с дрозофилами — сверяемся регулярно. Книга, вышедшая в 1992 году, уже не переиздаётся. Но на Амазоне было в продаже 17 копий: 15 использованных от $35.54 и две новых, от $1,730,045.91 (+$3.99 за доставку).


Я отправил скриншот автору книги — который был очень удивлён и заинтригован. Но думаю даже он не стал бы настаивать, что книга стоит ТАК дорого.

Сначала я подумал что это чья то шутка — какой нибудь бывший студент, которому некуда девать время. Но в продаже было сразу две копии, каждая более чем за миллион долларов. И два продавца выглядели не только вполне честными, но и достаточно известными (более 8 000 и 125 000 рейтингов за последний год соответственно). Цены выглядели случайными — похоже, они были выставлены компьютером. Но как они достигли таких значений?

К моему удивлению, когда я перезагрузил страницу на следующий день, цены ещё больше поднялись! Каждая книга стоила почти $2.8 миллиона, разница цен была меньше $5000. Теперь и я заинтересовался ситуацией, и начал внимательно следить за страницей. К концу дня более дорогая копия ещё больше поднялась в цене. Теперь она стоила $3,536,675.57. Наконец стала вырисовываться общая картина.

В тот день когда мы обнаружили многомиллионные цены, копия от bordeebook стоила в 1.270589 раз дороже копии от profnath. И теперь копия bordeebook была дороже копии profnath В 1.270589. Очевидно, как минимум один из участников выставлял цену автоматически в ответ на изменение цены у другого. Я продолжил наблюдать и вскоре понял весь процесс целиком.

Раз в день profnath устанавливал цену в 0.9983 раз от цены bordeebook. Цены оставались в таком положении несколько часов, пока bordeebook не «замечал» изменение цены profnath и не поднимал свою цену в 1.270589 раз от максимальной цены profnath. В таком порядке события продолжались в том же порядке всю следующую неделю.

Но оставались ещё два вопроса. Зачем они это делали и как долго это будет продолжаться пока кто нибудь не заметит? Пока я с удивлением наблюдал за ежедневным ростом цен, я узнал что продавцы на Amazon все больше пользуются алгоритмами установки цены (сам Амазон делает то же самое в гораздо больших масштабах), с несколькими компаниями предлагающими продавцам сервисы/алгоритмы для определения оптимальной цены. И profnath и bordeebook явно использовали автоматическую установку цен — при этом применяя алгоритмы, не имеющие встроенной проверки «на вменяемость» устанавливаемой цены. Но эти продавцы явно использовали разные стратегии.

Поведение profnath понять легко. У них скорее всего есть новая копия книги, и они хотят быть уверены в том что их цена — самая низкая, но совсем ненамного отличается от следующей ($9.98 против $10.00). Зачем bordeebok было выставлять цену выше? Так как система показывает цены всех продавцов, было похоже что им гарантировано отсутствие продаж. Но возможно это не совсем так — у них огромное количество позитивных отзывов, гораздо больше чем у остальных продавцов. А некоторые покупатели наверняка готовы заплатить несколько лишних долларов за уверенность в том что покупка действительно пройдёт успешно. Всё равно, это довольно странная и рискованная стратегия, чтобы на неё полагаться — большинство людей, скорее всего, так не действуют — и книга всё это время будет собирать пыль на полке. Естественно, кроме случая когда книги у Вас на самом деле нет...

Моё объяснение поведению bordeebook состоит в том что книги у них на самом деле нет. Вместо этого, они заметили что кто то другой выставил тот же том на продажу, и выставили его тоже — надеясь на большее количество отзывов для привлечения покупателей. Естественно, если кто то закажет книгу, им придётся её достать — поэтому им пришлось выставить свою цену больше — к примеру в 1.27059 раз больше — цены, по которой они эту книгу купят у другого продавца.

Больше всего в этой ситуации удивляет бесконечное количество возможного хаоса и проблем. Вряд ли мы наткнулись на единственный пример постоянно восходящей спирали цен — и всё что для неё потребовалось это два продавца, изменяющие свою цену в соответствии с ценой другого в пропорции, в итоге приводящей к общему увеличению цены. И хотя это может быть труднее просчитать, можно придумать другие странные сценарии, которые могут произойти если количество участвующих продавцов станет больше двух. Когда я понял что именно происходит, я и некоторые люди с которыми я говорил стали придумывать способы использовать нашу способность предсказывать установку продавцом цен с точностью до пяти знаков после запятой — особенно когда цена устанавливалась без проверок.

Однако, скоро кто то заметил проблему. Цена достигла пика 18 апреля, но уже 19 апреля цена у profnath упала до $106.23 и borderbook скоро установил предсказуемую цену в $106.23 * 1.27059 = $134.97. Но Питер Лоуренс теперь может спокойно хвастать о том что одна из самых больших и уважаемых компаний на Земле оценила его книгу в $23,698,655.93 (плюс $3.99 за доставку).

",kurokikaze
"Привет, Хабр!

Спешу поделиться хорошей новостью. Сегодня стала доступна IntelliJ IDEA 2016.3 – очередное крупное обновление нашей (и, хочется надеяться, вашей) любимой Java IDE. Читайте ниже об основных изменениях и нововведениях.



Java 8
С релиза Java 8 IntelliJ IDEA предоставляет инспекции, помогающие писать корректный и идиоматический Java 8. В IntellIJ IDEA 2016.3 эти инспекции были серьезно переработаны, расширив область применения за рамки тривиальных примеров. Теперь, если вы нажмете Alt+Enter внутри нетривиального for цикла, IDE предложит переписать его с использованием Stream API. При этом IDE будет опираться на практически все доступные API: count, sum, flatMap, map, mapToInt, collect, filter, anyMatch, findFirst, toArray и другие. Примечание: похожая инспекция доступна для Kotlin. Также IDE предложит заменить соответствующие конструкции на Map.computeIfAbsent, Collections.removeIf или ThreadLocal.withInitial там, где это имеет смысл.



Scala
Scala.js
Обновленный Scala плагин теперь предоставляет навигацию и автодополнение для js.Dynamic – на основе переменных и методов, объявленных в JavaScript библиотеках или файлах проекта.

scala.meta
Также плагин получил поддержку scala.meta. IntelliJ IDEA поддерживает “новые” макро-аннотации и предоставляет помощь при редактировании scala.meta quasiquotes.

JVM отладчик
Class-level Watches
Эта новая мощная функция отладчика позволяет добавлять Watch выражения на уровне классов. Эти выражения выглядят как поля классов, однако их значения определяются самими выражениями. Выражения указываются в контексте класса.



Memory View
Этот новый плагин позволяет исследовать объекты в памяти JVM при отладке кода. Плагин показывает количество объектов в памяти, с группировкой по имени класса. По мере того как вы перемещаетесь во время отладки по коду, колонка Diff показывает как это количество меняется. Двойной клик на классе откроет диалог с объектами. Также плагин позволяет отслеживать stacktraces создания объектов.



Интерфейс
Подсказки имен параметров методов
Опция Parameter Hints (включена по-умолчанию) показывает имена параметров методов, если в качестве аргументов используются литералы или null. Такие подсказки делают код более читаемым. Если подсказки для каких-то методов избыточны, вы можете попросить IDE не показывать их.



Семантическая подсветка
Ранее появившийся в KDevelop и некоторых других IDE, Semantic highlighting теперь доступен в IntelliJ IDEA. Эта опция добавляет в стандартную подсветку уникальные цвета для каждого параметра и локальной переменной. Эта опция выключена по умолчанию, но может быть включена в Settings → Editor → Colors & Fonts → Language Defaults → Semantic highlighting.



Иконки
Иконки файлов и папок стали плоскими. Новые иконки стали четче и менее отвлекающими.

Инструменты сборки
Delegate IDE build/run actions to Gradle
Эта новая опция позволяет делегировать такие действия IDE как Build, Build Artifacts и Run напрямую Gradle. Когда эта опция включена, IDE вместо стандартных действий вызывает соответствующие Gradle-таски. Включить эту опцию можно в Settings → Build, Execution, Deployment → Build Tools → Gradle → Runner → Delegate IDE build/run actions to Gradle.

Gradle Composite Builds.
Эта новая мощная опция позволяет заменить любую из зависимостей проекта другим проектом. Эта опция требует Gradle 3.1 или старше.

Polyglot Maven
Теперь pom.xml можно писать на Groovy, Scala, Ruby и других языках. (Примечание: подсказки при редактировании pom.xml доступны только для Groovy.)

Контроль версий
Log для Git и Mercurial
Окно Log снова переработано, в этот раз – с целью повышения эргономичности и скорости работы. Панель подробных изменений сместилась вправо, освободив больше места. Описание изменений теперь выровнены и более читаемы. Метки с тегами и названиями веток сместились вправо и отображаются более элегантно. Строка поиска сохраняется между запусками IDE. Для Git поиск по тексту, автору и пути стал гораздо быстрее.

Merge и Diff
Окно Merge теперь может разрешать конфликты автоматически там, где это возможно. В таких случаях слева будет отображаться иконка Resolve с волшебной палочкой. Также мы добавили маркеры, отражающие изменения, которые будут применены поверх базовой ревизии. Кроме этого, и Merge и Diff теперь предлагают подсветку синтаксиса и навигацию для “не-базовых” ревизий.



Также добавлено управление удаленными репозиториями. 

JavaScript
ECMAScript 6
IntelliJ IDEA позволяет автоматически конвертировать переменные объявленные var в const/let в зависимости от семантики их использования. 



Для всех вызовов require, IDE предложит автозамену на import. 



Для всех классов, объявленных с помощью функций и цепочек prototype, IDE предложит автозамену на полноценные классы. 



TypeScript
Исправлена проблема переименования наследуемых методов.

Flow
Теперь, если вы укажете Flow в качестве версии JavaScript, а также укажете путь к дистрибутиву Flow, заработают соответствующие инспекции (и в некоторых случаях автодополнения).

Серверы приложений
TomEE 7
Поддержка TomEE была обновлена до последней версии.

Liberty
Теперь IDE позволяет запускать loose applications. Для этого на закладке Deployment в окне WebSphere Run/Debug configuration вместо артефакта выберите Loose application….

React Native
Теперь запускать и отлаживать React Native приложения можно для OS X и Android прямо из IDE.



Android
Blueprint

Это новый режим в Designer, который скрывает визуальные элементы компонентов и отражает только их структуру.

Constraint Layout
Это мощный новый layout manager, который позволяет создавать сложные структуры интерфейса, используя плоскую структуру.

Instant Run
Согласно информации от команды Android Tools, обновление исправляет большое количество проблем, связанных с работой Instant Run. Теперь Instant Run должен работать более стабильно.

APK Analyzer
Эта утилита позволяет анализировать содержимое APK.

Базы данных
Редактирование нескольких ячеек
Теперь вы можете выделить несколько ячеек и редактировать их одновременно.

Пакетная отправка изменений
Теперь изменения в таблице отправляются не сразу, а по нажатию Ctrl+Enter (Cmd+Enter для OS X) – целыми пакетами. Используйте Undo, чтобы откатить неотправленное изменение.

Поиск использований
Теперь вы можете искать использование объектов базы данных в исходном коде других объектов баз данных. Например, вы можете узнать, какие процедуры, функции, отображения и триггеры используют выбранную таблицу.



Clouds
Google Cloud Tools
Google представила собственный плагин для деплоя приложений в Google Cloud. Позже этот плагин полностью заменит плагин JetBrains для работы с Google App Engine.

OpenShift Origin (V3)
Плагин для работы с OpenShift теперь поддерживает новую версию OpenShift.

Toolbox App
Не забудьте взглянуть на Toolbox App — новое десктопное приложение для удобной установки и обновления любых IDE от JetBrains.



Это вкратце все, что команда успела сделать за 4 месяца, не считая багфиксов. 

Подробности, скриншоты и видео о релизе можно найти на странице What’s New (на английском). Там же можно скачать обновление.

Как всегда, буду рад ответить на любые вопросы.",andreycheptsov
"Вчера стала доступна IntellIJ IDEA 2016.3 EAP – программа “раннего” доступа к обновлению, запланированному на эту осень. 


Для справки. Официально программа называется Early Access Program. На практике это аналог alpha-версии. Обновления появляются в среднем с недельной периодичностью. Каждый желающий может установить дистрибутив, попробовать новые функции и поделиться своим мнением и идеями в трекере.

В этом посте я расскажу о главных нововведениях, которые уже доступны в EAP-билде.

Отладчик
Class-level watches

Отслеживание значений выражений стало удобнее. Теперь выражения можно объявлять не только глобально, но и на уровне конкретных классов. Эти выражения будут отображаться аналогично полям класса. 



Выражения указываются в контексте экземпляра класса.

Отображение примитивных типов

Теперь Java Type Renderers можно объявлять и для примитивных типов, включая массивы.



Анализ содержания памяти

С помощью нового плагина JVM Debugger Memory View, во время отладки вы можете исследовать содержание памяти.

Окно инструментов Memory View отображает количество экземпляров каждого класса. Чтобы открыть окно инструментов, воспользуйтесь главным меню: View → Tool Windows → Memory View. 

Колонка Diff отображает как количество экземпляров изменилось с момента предыдущей остановки. Таким образом вы можете следить за созданием новых экземпляров.



Двойной клик на строчке класса откроет список экземпляров этого класса. Mark Object, Evaluate Expression, Add to Watches и другие операции отладки доступны применимы к любому экземпляру в этом списке.



Catch class filter

Следующее улучшение касается отладки исключений. Теперь вы можете задать границы Exception Breakpoint, указав пакеты, в которых это исключение ловится, – иначе говоря, в которых стоит try-catch выражение.



Контроль версий
Отмена коммита

Откатить последний неопубликованный коммит теперь можно одним кликом: выделите его в закладке Log и вызовите Undo Commit из контекстного меню. Действие эквивалентно команде “git reset --soft HEAD^”. Это значит, что изменения не пропадут, а перейдут в Local Changes.



Удаление веток

Теперь если вы удаляете локальную ветку, IDE предложит также удалить ветку, на которую она ссылается, либо откатить удаление.



Sign-off commit

Диалог Commit Changes теперь предоставляет опцию Sign-off commit. 

File colors

Теперь в диалогах и окнах инструментов контроля версий каждый файл подсвечивается в соответствии с настройками File Colors.



Интерфейс
Recent tests

Теперь вы можете нажать Ctrl+Shift+; (Cmd+Shift+; для OS X) и увидеть список последних тестов. Список содержит как последние успешные конфигурации тестов так и неуспешные индивидуальные тесты. Enter–запуск теста; F4–переход к коду.



Текстовый поиск

Теперь, если вы вызываете Find in Path из редактора, настройки сохраняют указанные ранее значения, а не сбрасываются как раньше.

Java
Лямбда выражения в File Structure

Попап и окно инструментов Structure теперь могут показывать лямбда выражения, если соответствующая настройка включена. Включить ее можно нажав Ctrl+L (Cmd+L для OS X).



Некоторые интеншены стали инспекциями

Основное отличие инспекций от интеншенов заключается в том, что инспекции можно применить сразу на многих файлах. Мы выбрали ряд интеншенов, для которых это имеет смысл, и сделали из них инспекции: в частности Lambda can be replaced with anonymous class и Diamond can be replaced with explicit type arguments.



Настройки инспекции unused declaration

В инспекцию Unused declaration добавлены настройки Members to report. Теперь вы можете выбрать, на какие члены класса и модификаторы испекция будет распространяться.

Иерархия мета аннотаций

Окно инструментов Type Hierarchy теперь работает и для мета-аннотаций и позволяет видеть их иерархию. Это может быть особенно полезно для Spring или, например, JUnit 5.

JavaScript and CSS
Flow

Теперь, если вы указали Flow в качестве версии JavaScript, вы начнете получать сообщения о проблемах в коде прямо в редакторе для тех файлов, которые аннотированы ""//  flow"".



Чтобы это работало, не забудьте указать путь к локально установленному Flow в Settings → Languages & Frameworks → JavaScript → Flow.

Переименование методов в TypeScript

Переименование методов в TypeScript стало безопасным: 


Если метод наследует или переопределяет метод из других классов/интерфейсов, IDE предложит переименовать базовые методы; 
Если, существуют другие методы, переопределяющие или наследующие переименовываемый метод, IDE переименует и их.




Генерация кода Angular 2

Инструмент Angular CLI теперь интегрирован в попап Generate New, доступный по Alt+Ins (Cmd+N для OS X).



PostCSS

Для PostCSS теперь есть плагин. Установив плагин, вы получите подсказки, форматирование, навигацию, инспекции, переименование и другие функции предлагаемые для обычного CSS.



Группировка генерируемых файлов

В окне инструментов Project генерируемые файлы теперь группируются вместе с исходными файлами (если они в той же директории): например, "".css"", "".css.map"" и "".sass""; "".js"", "".js.map"" и "".ts""; и т.п.

Кроме нововведений обновление конечно же содержит массу багфиксов. Пока это все. Свежие EAP билды будут появляться каждую неделю.

Если обнаружите баги, пожалуйста сообщайте о них в наш трекер.

Ссылка на скачку EAP-билд: https://confluence.jetbrains.com/display/IDEADEV/IDEA+2016.3+EAP.

Буду рад ответить на вопросы.

Программируйте с удовольствием!",andreycheptsov
 ,Ekamelev
"
Как-то очень тихо и беспомпезно, не так давно, вновь ожил сайт одной из самых сложных и глубоких roguelike игр — ADOM. В roguelike-мире время течет нелинейно, на фоне глубочайшего оттачивания и тестинга, случаются прорывы.

В частности, наконец-то можно нативно играть в ADOM на Mac (скачать). Ура-ура, это то чего мы ждали последние 5 лет, это то ради чего мы кликали по Амазоновским баннерам, что бы помочь автору. Свершилось, в общем :)

Во-вторых, Томас опять взялся за JADE — java-движок для ADOM. Собственно, как по мне, лучше бы JADE так на всегда и оставался в глубокой альфе. Потому что, без сомнения, исход мира предрешен, и Вселенная однозначно сколлапсирует как JADE-подмножество когда будет поставлен последний end и подледная точка.

Вот такие новости. До встречи лет эдак через десять — поговорим о новой версии ADOM, посмеемся над процессом разработки JADE :) Приятно что есть в мире такие точки оттолкновения.

Да… время в roguelike-мире течет нелинейно… И очень неторопливо — turn-based.",r13
" В последнее время на слуху феномен «муков» (MOOC) – массовых открытых онлайн курсов. Платформ для них создано большое множество. 

Есть мнение, что MOOC – это книги нового поколения (с видео, интерактивными задачами и социальной составляющей), которые одновременно «читают» десятки тысяч человек. Можно долго сравнивать «муки» с классическим образованием и спорить об их эффективности, но полезно воспринимать их как совершенно другой формат, очевидно со своими плюсами и минусами. 

При этом у онлайн образования есть большое концептуальное отличие от оффлайн образования – его проще измерить. А всё, что можно измерить, можно улучшить.

В этом посте я поделюсь личными соображениями о том, куда движется онлайн образование на примере MOOC-ов, в том числе по мотивам посещения Coursera Partners' Conference, прошедшей 4 недели назад в Лондоне.

Дисклеймер
Если вы считаете, что я упустил что-то важное, добавляйте в комментариях. Если вы несогласны со мной в чём-либо, это замечательно, буду рад поддержать предметную дискуссию. Ниже я описываю тренды достаточно широко, поэтому при наличии интереса могу развернуть какой-либо из них глубже в отдельном посте с техническими деталями. Отдельно отмечу, что будучи инструктором курса на Coursera, я рассматриваю онлайн образование в том числе со стороны преподавателей, а не только студентов.

Платформы
Для начала перечислю основные международные MOOC-платформы (в целях расширения кругозора):

коммерческая Coursera, всем известный пионер
некоммерческая EdX от Harvard и MIT, в том числе их движок с открытым исходным кодом Open edX, а также анонсированный (но ещё не запущенный) агрегатор edX-ов mooc.org от Google
коммерческая Udacity стартовала в конкуренции с Coursera, но пошла по пути сотрудничества с компаниями вместо университетов, создают более прикладные курсы
нацеленная на курсы с большой социальной составляющей NovoEd
Canvas Network от компании Instructure, которая известна системой управления обучением Canvas
английская FutureLearn от Open University, придерживаются подхода mobile first
европейская iversity, чья стратегия выхода – продаться Coursera
и многие другие...

2 недели назад вышло неплохое сравнение Coursera, edX и NovoEd с точки зрения преподавателя и университета. У Coursera пользователей больше, чем у всех остальных платформ вместе взятых, что зачастую оказывается решающим при выборе.

Дальше я буду рассказывать в основном про Coursera, потому что они являются пионерами по многим направлениям, тогда как остальные платформы идут по их стопам. Хотя у каждой платформы есть свои отличия и приятные особенности… 

Читателям может быть интересно также взглянуть на Open edX Public Product Roadmap. К сожалению, Coursera Product Roadmap не доступен широкой публике.

Тренды
Данные и аналитика

MOOC-платформы собирают данные о поведении и успехах студентов, но до сих пор эти данные практически никак не применяются и не интерпретируются. Дафни Коллер (со-основательница Coursera) ещё в 2012-м году рассказывала на TED, что данные вот-вот совершат революцию в образовании, «а воз и ныне там». Основная сложность – образование очень разное, и не существует понятной метрики, которую необходимо оптимизировать. На конференции Coursera представила новую панель данных для преподавателей курсов, которая намного лучше доступной ранее выгрузки сырых данных, но всё равно далека от идеала.

Научное направление Educational Data Mining ранее использовало результаты экзаменов и социологических опросов школьников / студентов / преподавателей, а поэтому было довольно скучным. Сейчас учёные буквально утопают в данных «муков». Их анализ приводит нас к лучшему пониманию того, как люди учатся. Вероятно, в будущем мы будем наблюдать процесс улучшения качества онлайн образования аналогично тому, как наблюдали процесс улучшения качества поиска в интернете последние 15 лет. Я лично верю, что в какой-то момент в каких-то областях онлайн образование станет эффективнее оффлайн образования. Но это отдельная тема для холивара…

Кстати, одно из основных предназначений проекта edX по словам создателей – развивать педагогические исследования. Анонимизированные данные студентов edX распространяются между всеми университетами-партнерами, чтобы каждый университет мог вести независимые исследования на эту тему. И они ведут. Скриншот выше из проекта аспирантки UC Berkeley для edX.

Специализации
Группы курсов, связанные общей темой и датами. Что-то среднее между классическим многолетним образованием и короткими онлайн курсами. Повышают мотивацию, так как становится понятна конечная цель обучения. Лучше монетизируются, чем единичные курсы.

 Смешанное обучение
Университеты начинают применяет свои онлайн курсы для своих же студентов в формате SPOC (small private online course). Это делали и мы. Обычно это совмещается с практическими занятиями и проектами оффлайн, тогда как видеолекции и задачи с автоматизированной проверкой студенты проходят онлайн. 

Помимо SPOC используются понятия blended learning, flipped classroom, hybrid learning, хотя зачастую ими обозначают одно и тоже. Но формально термин SPOC относится только к онлайн компоненте в смешанном обучении. Основное отличие от вебинаров – SPOC, как впрочем и MOOC, может масштабироваться (больше студентов, перезапуски каждый семестр) без дополнительных затрат времени и сил со стороны преподавателя.

Также, в прошлом году Coursera запустила программу Learning Hubs, стимулируя создание независимых оффлайн площадок для студенческих встреч и обсуждений материалов онлайн курсов.

Платформа для приложений
Возможно, это самый интересный пункт для хабрасообщества. Так как Coursera быстро увеличивает число курсов и партнёров, то их команда разработчиков просто не успевает реализовать всё, что может пригодиться преподавателям. Примеры: интерактивный конструктор интегральных схем, онлайн интерпретатор кода, визуализация процессов в клетке, задачи по биоинформатике. Поэтому Coursera планирует создать платформу для приложений, в которую разработчики смогут добавлять приложения, а преподаватели подключать их к своим курсам. 

Coursera анонсировала App Platform ещё на прошлогодней Coursera Partners' Conference, но только в марте была опубликована первая информация. Из доступного сейчас:


OAuth2-based APIs – API к платформе Coursera. Пока открыты только просмотр профиля и списка курсов пользователя, но постепенно будет добавлена и другая функциональность. Этот же API использует Coursera в своих мобильных приложений на iOS и Android.
Learning Tools Interoperability (LTI) Integration – протокол встраивания внешних образовательных плагинов в курсы Coursera. Мы используем этот протокол для интеграции Stepic с курсами на Coursera, например в недавно стартовавшем курсе Core Concepts in Data Analysis. Протокол позволяет аутентифицировать пользователей курсеровскими аккаунтами и передавать обратно их баллы за выполенные задания. Я расскажу о технических деталях (и граблях) интеграции в одном из следующих постов. LTI является независимым стандартом, поэтому также поддерживается платформами Open edX, Canvas и другими.
Catalog API – полный каталог курсов, который можно грабить и использовать в своих агрегаторах / поисковиках по курсам.
Shibboleth / SAMLv2 – способ авторизации на Coursera по университетским аккаунтам. Shibboleth широко используется в американских вузах, например, в University of California, но малоизвестен и практически бесполезен в России.


За кадром остались



Не были затронуты такие важные темы, как:

формальная сертификация
мотивация пользователей и геймификация
социальная составляющая курсов, общение с преподавателем и сообществом, peer review
мобильные устройства (пример: в Африке больше посещают мобильное приложение Coursera, но там нет форума)
локализация и переводы курсов, межкультурное взаимодействие в рамках курса
интеллектуальная собственность (кому принадлежит курс и данные пользователей, лицензирование курсов)
конфиденциальность и защита данных
монетизация и устойчивые бизнес-модели

Послесловие
Некоторые факты с конференции ещё помнит твиттер по хэштегу #coursera14.

Для интересующихся научной стороной вопроса, доступны 293-страничные труды (тяжелый pdf) конференции EMOOCs 2014, проходившей в феврале в Швейцарии. Материалы Coursera Partners' Conference на данный момент не доступны.

Если вы дочитали до этой строки, и вам до сих пор нравится, то через три дня (1-3 мая) мы с JetBrains и Edutainme проводим в Петербурге хакатон по разработке инструментов в образовании, где можно будет в окружении единомышленников покодить образование к лучшему, приходите. Я там буду все дни и смогу помочь советом, а также обсудить перспективы онлайн образования за пиццей.",vyahhi
"Привет, уважаемые участники сообщества!

В Санкт-Петербурге на днях снова выпал снег, и для летнего вдохновения расскажем о мероприятии, проходившем в июле 2014 года. А именно – летней школе по биоинформатике, организованной Институтом биоинформатики и СПбАУ РАН при поддержке СПбГУ. Про первую школу на Хабре писали тут и тут.

В этой статье речь пойдет об интересном эксперименте — учебно-научных проектах в рамках школы: начиная от идеи и заканчивая тем, что же получилось в итоге.



Пара слов об авторах
Эта статья написана совместными усилиями нескольких авторов, в том числе Тимофея Бондарева, Германа Демидова и Олега Яснева – студентов второго курса магистратуры Санкт-Петербургского Академического университета по направлению «Алгоритмическая биоинформатика». На школе они в качестве волонтеров помогали проводить практики, а Герман и Олег также курировали научные проекты.

Стоит отметить, что дальше в тексте, когда вы встретите слово «мы», речь пойдет не о ком-то отдельно, а о большом и дружном коллективе организаторов и волонтеров ⟶

Немного о самой школе
Школа проходила в загородном отеле «Райвола» под Санкт-Петербургом и длилась 6 дней, в течение которых проводились лекции и семинары на различные темы в два потока: для биологов и для информатиков/математиков. Кроме того, с докладами выступали и сами участники на мини-конференции и постерной сессии. Из 450 заявок на школу было отобрано 100 студентов и аспирантов физико-математических, компьютерных и биологических специальностей из разных частей России, СНГ и даже дальнего зарубежья.

Занятия вели сотрудники лабораторий и компаний Санкт-Петербурга и Москвы, а также некоторых иностранных университетов. Участники с оживлением встретили Филиппа Хайтовича (Shanghai Institutes for Biological Sciences; Сколтех) и Алексея Кондрашова (University of Michigan; МГУ), запомнившихся многим с первой школы. Выступали также Елена Григоренко (Yale University), Илья Серебрийский (Fox Chase Cancer Center), Алла Лапидус (СПбГУ, СПбАУ РАН) и многие другие. Как и в прошлом году, школу поддержали ОАО «РВК», компании JetBrains и BIOCAD, фонды «Династия» и РФФИ — благодаря этому участие в школе было абсолютно бесплатным для всех. Материалы выложены в открытый доступ. 
 
Помимо учебы было выделено время на развлекающие мероприятия: конкурсы «Чепуховый секвенатор», «Собери геном», вечеринку по случаю окончания школы… А на территории отеля самой большой популярностью пользовались батуты =)

 

Подробнее о научных проектах
Идея
Как вообще возникла идея проведения научных проектов на летней школе, ведь она длилась всего 6 дней? Разумеется, никакой серьезной науки сделать за такой срок не удастся. Однако, на школу были приглашены участники разного уровня и изначально стоял вопрос: как сделать школу полезной и для тех, кто уже знает материал базовых лекций? 
 
Забегая вперед, скажем, что участники в отзывах отметили проекты как одну из наиболее интересных частей школы и рекомендовали в будущем вовлекать в них все 100 человек.

Как все начиналось: проблемы
Изначально были предложены слишком сложные задачи для 5 дней.
Посовещавшись, мы решили, что стохастическая симуляция, низкоуровневая оптимизация и другие специализированные вещи – это не для летней школы. Участникам в большинстве своем будет скучно и непонятно. Научный проект на школе должен быть образовательным, развлекательным и научным одновременно. Как на хакатоне. 

Большинство потенциальных руководителей проектов не разделяло наш энтузиазм.
Даже многие из тех, кто с удовольствием предлагал проекты для научной работы студентам Института биоинформатики, говорили, что 5 дней для работы – это несерьезно. Однако, некоторые откликнулись, и в итоге набралось 6 командных проектов с разным порогом вхождения (желающие могут почитать описания тут).

 Как уместить работу над научными проектами в насыщенное расписание.
Проекты были рассчитаны на более опытных участников, которым вводные лекции неинтересны. Работа над ними предполагалась вместо этих занятий и по вечерам в свободное время. Также были предусмотрены утренние встречи с кураторами и еще несколько «слотов» в течение недели. Но времени все равно не хватало. Можно было зайти в 3 часа ночи в бар отеля и увидеть там студентов. Думаете, они веселились и пили пиво? Нет, там был быстрый wi-fi, и они работали над проектами!

Слишком много участников.
Изначально планировалось 15–25 человек на 3–10 проектов. Что получилось? 62 человека на 6 проектов. Все получили описания проектов заранее, поэтому была возможность изучить их и принять решение. Возможно, времени все же было недостаточно или формулировки выглядели устрашающе, но до начала школы записалось менее 20 человек. После презентации проектов улыбающимися руководителями желающих стало в разы больше! Посовещавшись, организаторы и руководители проектов решили поддержать мотивацию и принять всех, что сильно повлияло на процесс.

Ожидания vs. реальность: процесс работы
Кураторы
Итак, на проекты записалось более половины участников школы, а команды получились неравномерные. Как с этим справлялись кураторы? 

У Германа (его жизнерадостное фото справа) в работе про популяционную историю полярных медведей оказалось 10 человек, и он решил дать им 5 различных задач в рамках одного проекта. Что из этого вышло: студенты продвигались весьма быстро и куратору тоже приходилось идти вместе с ними в пяти разных направлениях, что занимало много времени.

К Олегу Ясневу на анализ данных ChIP-seq (задача была предложена компанией UniPro), записалось 16 студентов, а к Михаилу Райко на поиск патогенных участков – 13. Олег и Михаил разбили ребят на примерно сбалансированные группы, чтобы каждая делала один проект независимо. В итоге работа над проектами велась, главным образом, в свободное время, и ребята группировались по ситуации. К концу школы все участники, фактически, объединились обратно, что не входило в изначальный план. Павел Добрынин не стал разбивать студентов на группы, работал сразу со всеми на трех проектах и при этом остался в трезвом уме =)

Как показал опыт, разбивать студентов в одном проекте на подгруппы и давать им одинаковое задание не очень эффективно. Лучше всего сработал вариант, когда каждой подгруппе выдано индивидуальное задание, подзадача большой задачи. Но тут стоит рассчитывать свои силы. 

Студенты
 Работать приходилось в условиях проблем с интернетом, так как сто человек местный wi-fi не выдерживал. Если попадалась группа студентов, работающих в не самом подходящем месте, можно было быть уверенным – там есть интернет. 
Участники терпеливо трудились и активно осваивали новые знания, в том числе и полученные на занятиях школы. Например, студент-биолог на утреннем семинаре написал первые в жизни скрипты на Python и тут же воспользовался их результатами в проекте. Как и задумывалось, лекции, практика и работа над научными задачами дополняли друг друга. В этом направлении есть, куда расти, теснее переплетая программы лекций и проектов. 

Однако, приходилось следить, чтобы студенты не слишком увлекались и не пропускали полезные занятия — участники погрузились в проект настолько, что готовы были ради него не пойти на интересную, по их же словам, лекцию известного ученого. Приятно осознавать, что проекты оказались настолько увлекательными и выдерживали даже такую серьезную конкуренцию, но хотелось, конечно, чтобы они проходили не в ущерб полезным лекциям.

Полезные советы
В этом разделе хочется собрать несколько простых, но полезных вещей, которые очень помогли в организации работы над проектами.

Важно добиться, чтобы студенты выучили git и коммитили как код, так и результаты (отчеты, графики, статистику и прочее). Это не только полезно, это необходимо! Только ведение репозитория и отслеживание изменений спасло Германа с его пятью подпроектами от состояния зомби к концу школы.

Также очень помогли предварительно подготовленные инструкции. Заранее их почти никто не читает, но в процессе работы они точно пригодятся. Когда у вас 10–20 человек, каждый из которых движется в своем темпе, невозможно быть одновременно со всеми. 

Специально для школы мы составили инструкцию по git, ориентируясь по степени понятности на студентов-биологов. В ней были прописаны ровно те сценарии, которые должны были возникнуть в работе над проектом. В крайнем случае, подойдет и руководство из интернета, главное, чтобы оно было достаточно кратким и ориентированным на правильную аудиторию. Дав студенту такую справку, можно быстро подсказать нужный абзац или обучить человека буквально за пять минут.

Методичка по проекту тоже очень выручит. У студентов всегда будет, что делать дальше, и они не будут простаивать, если куратора нет рядом. В первые пару дней, когда приходилось решать еще много других вопросов, методичка была спасением.

Кроме того, предварительное прохождение проекта по шагам убережет от неприятных сюрпризов. Конечно, проблемые ситуации приближают проект к реальной жизни, но все же нежелательны в условиях сжатого времени.

Наконец, студенты с удовольствием помогают и объясняют друг другу сами. Научив чему-то одного человека, вы фактически научите еще человек пять; а те, кто продвинулись по проекту дальше, смогут подсказать «отстающим».

Выводы
Очень быстро стало понятно — проекты пользуются большой популярностью, поскольку дают возможность попробовать себя в решении реальных задач в формате полного погружения. Обстановка на школе самая благоприятная: тебя не уволят с работы, не поставят плохую оценку и готовы помочь в любое время дня и ночи. Участники не стеснялись задавать вопросы, просить помощи и работали в удовольствие, что и дало хороший результат. К тому же, это удобный и более индивидуальный формат обучения, чем лекции и общие практики.

Кстати, как вы думаете, сколько дошло до конца? Честно говоря, когда записалось 60 человек, были подозрения, что через пару дней это число серьезно сократится. Но передумавших студентов можно пересчитать по пальцам одной руки. Те же, кто дошли до конца, – действительно молодцы. 

 

Итог
В последний день школы прошли презентации результатов работы над проектами перед всеми участниками и жюри. Приятно видеть, что все команды добились очень неплохих результатов и им действительно было, что рассказать. 

Кто же победил? Как сказала Алла Лапидус, по русской традиции победил медведь (проект, посвященный изучению истории популяции полярных медведей). Но главная победа была в том, что все ребята не побоялись окунуться в неизвестное и сложное и дошли до конца. Они многое узнали, заметно прогрессировали, а также были полны энтузиазма и планов на будущее. И это здорово!

 

Послесловие
Что дала школа авторам? По их словам, самое главное — это бесценный опыт и много интересных знакомств. 

Тимофей так успешно ассистировал на занятиях, что получил предложение вести курс по Python в Институте биоинформатики, и сейчас читает уже второй семестр. Герман вдохновился и стал руководителем проектов для двух студентов Института в осеннем семестре. Олегу летняя школа помогла найти подходящую интересную тему для магистерской работы, отсутствие которой его беспокоило. Надеемся, что и для каждого участника школа была полезной! 

Если вы тоже заинтересовались, то в этом году снова будет проходить летняя школа по биоинформатике, на этот раз 20-25 июля в Москве. Заявку подать можно до 25 мая. А если вы чувствуете в себе силы и желание изучать биоинформатику, то вас будут рады видеть на собеседованиях в Институт биоинформатики и Санкт-Петербургский Академический университет (где помимо биоинформатики набирают также по направлениям Software Engineering и Theoretical Computer Science).

До встречи!",vyahhi
"Многие пользователи программы Axure поначалу сталкивались с такой проблемой, как оформление псевдоссылок. Дело в том, что по умолчанию софтина не позволяет делать ссылки (или текст, что, в принципе, — одно и то же) подчёркнутыми пунктиром. Поэтому у начинающих творцов прототипов (прототипистов?) периодически можно увидеть псевдоссылки со сплошным подчёркиванием, что вносит в документ путаницу. На самом деле решить эту задачу очень просто.

1. В панели виджетов выбираем ссылку (Hyperlink);



2. Помещаем её в нашу рабочую область;



3. Снимаем подчёркивание;





4. В панели виджетов выбираем горизонтальную линию (Horisontal line);



5. Перетаскиваем её в нашу рабочую область, меняем цвет и делаем пунктирной;



6. Увеличив масштаб рабочей области, подгоняем под нашу ссылку (теперь псевдоссылку). Я обычно оставляю зазор между текстом и линией всего в один пиксель;



7. Любуемся результатом



Ребятушки, от вашей активности в этом посте будет понятно, стот ли делиться подобными «мелочами» по этой узкоспециализированной теме или же сия информация мало кому интересна.",Ekamelev
"Каждый год в конце июля Институт биоинформатики совместно с СПбАУ РАН проводит летнюю школу по биоинформатике. В этой небольшой статье собраны лекции (видео и слайды) за два последних года проведения летних школ.



Вводные слова о школе
Каждый год на школу приезжает 100 студентов и аспирантов со всей России, СНГ и других стран. В основном это биологи, медики, программисты, математики и физики. В течение недели участники погружаются в мир биоинформатики: просыпают посещают лекции и семинары, много общаются друг с другом и работают над научными проектами.


Лекции на школе читают ведущие российские и зарубежные ученые, а также исследователи из биотехнологических и биоинформатических компаний.

В этой статье собраны лекции за два года проведения летних школ. Некоторые лекции будут понятны без дополнительной подготовки (отмечены звёздочкой «*»). Другие рассчитаны на тех, кто имеет некоторое представление о молекулярной биологии и программировании. Для удобства лекции разделены по пяти темам. Также в скором времени (отдельным постом) появятся лекции по статистике, иммунологии и метагеномике. 

В 2016 году школу поддерживали компании JetBrains, РВК, BIOCAD, EPAM Systems и Parseq Lab. За что им большое спасибо.

Если вы хотите принять участие в летней школе 2017 — заполните форму на сайте школы, и мы сообщим вам, как только откроется прием заявок.


Технологии высокопроизводительного секвенирования (NGS), обработка их данных и применение результатов в медицинской и научной практике

1. Технологии секвенирования* (Павел Добрынин, Центр геномной биоинформатики им. Ф.Г. Добржанского, СПбГУ)

Видео | Слайды

Обзорная лекция о становлении и развитии технологий секвенирования: применение NGS для решения различного рода задач, сильные и слабые стороны существующих методов, а также ограничения их использования. Перспективы развития технологий секвенирования.
2. Практическая биоинформатика: обработка данных NGS (Александр Предеус, Институт биоинформатики)



Видео | Слайды

В лекции рассматриваются основные области, в которых работают биоинформатики в науке и индустрии. Подавляющее большинство задач биоинформатиков можно разделить на две большие категории: обработка экспериментов и предсказание каких-либо свойств биологической системы. В лекции подробно освещены задачи первой категории, а точнее — обработка NGS-экспериментов, взаимодействие с экспериментаторами в вашей лаборатории и контроль качества.

3. Транскриптомика: практические методы и применяемые алгоритмы (Александр Предеус, Институт биоинформатики)

Видео | Слайды

Транскриптомика уверенно заняла место в списке самых популярных задач, встающих перед NGS-биоинформатиками. Дифференциальный анализ экспрессии генов, кластеризация экспрессионных данных и интерпретация полученных данных в терминах метаболических и сигнальных каскадов позволяют получить богатейшую информацию практически о любой системе. В лекции рассматриваются лучшие пайплайны, основные проблемные места в дизайне экспериментов и обработке, а также практические случаи удачного применения транскриптомных подходов.

4. Практическое применение ChIP-Seq и родственных методов (Александр Предеус, Институт биоинформатики)

Видео | Слайды

Методы ChIP-Seq, а также «геномного футпринтинга» (ATAC-Seq, FAIRE-Seq, DNase-Seq) широко применяются для нахождения механизмов регуляции биологических процессов, в частности, транскрипционной регуляции. Потенциальное пространство изучаемых факторов очень многомерно, однако селективный подход позволяет получить богатую информацию о регуляции в системе на основании всего нескольких экспериментов. В лекции рассказывается о таких подходах. На примере конфликтующих современных теорий показаны основные сложности интерпретации регуляторной информации и способы консолидации полученных результатов.

5. Применение HTS в поиске первопричин раковых заболеваний (Константин Оконечников, German Cancer Research Center, DKFZ)



Видео | Слайды

Технологии высокопроизводительного секвенирования (HTS) стали одними из наиболее важных и часто применяемых методов в молекулярной биологии. Несмотря на то, что анализ результатов HTS является сложной задачей, существует ряд методов и инструментов, позволяющих обрабатывать эти данные биологам и медикам без специальной биоинформатической подготовки. В этой лекции рассказывается о том, как на практике можно использовать эти методы и программы.

6. Полногеномное секвенирование при анализе траекторий детского развития (Елена Григоренко, СПбГУ, Baylor College of Medicine, Yale University, University of Houston)



Видео | Слайды

В лекции приводятся примеры использования разных типов полногеномного секвенирования в контексте изучения типичных (нейротипичных) и нетипичных (нейронетипичных) траекторий развития. Применение данных секвенирования экзома, метилома и генома для анализа расстройств развития (например, расстройств языка и речи, расстройства поведения и расстройств аутистического спектра).

7. Аннотация MPS данных таргетной панели для диагностики моногенных заболеваний (Тамара Симакова, Parseq Lab)

Видео | Слайды

Высокопроизводительное секвенирование позволяет получать данные высокого качества о последовательности нуклеотидов в геноме. Для применения результатов анализа в клинической практике необходимо корректно определить генетические варианты, провести их аннотацию и интерпретацию в контексте исследуемого заболевания и направляющего диагноза. Данный этап по-прежнему остается сложной задачей, имеющей ключевое значение для эффективного использования новой технологии.


Сборка геномов
8. Сборка генома в исторической перспективе* (Михаил Колмогоров, University California San Diego)



Видео | Слайды

Задача сборки генома — одна из самых старых задач биоинформатики — остается актуальной и на сегодняшний день. Различные алгоритмы и модели быстро сменяют друг друга, поспевая за развивающимися биотехнологиями и наращиванием вычислительных мощностей. В лекции рассказывается история этой задачи — начиная от первой сборки генома человека и заканчивая последними успехами в области.

9. Сборка de novo геномов и транскриптомов (Артем Касьянов, МФТИ, ИОГен РАН)



Видео | Слайды

Развитие технологий высокопроизводительного секвенирования привело к значительному упрощению секвенирования и сборки de novo нуклеотидных последовательностей немодельных видов. Cборка геномных и транскриптомных последовательностей постепенно становится рутинной процедурой. Однако большинство геномных нуклеотидных последовательностей, полученных с использованием NGS, представлено в базах данных в виде незаконченных черновиков геномов. 

10. Референсный геном в виде графа как «геномный паспорт» человечества (Марина Зуева, EPAM Systems)

Видео | Слайды

Одним из величайших достижений человечества стала расшифровка генома человека в 2003 году. С тех было секвенировано более 250 000 тысяч человек, и это число удваивается каждый год. Гаплоидный геном не позволяет адекватно отразить весь объем быстрорастущей информации, выходом является референс в виде графа, построенного таким образом, чтобы геном каждого человека мог быть представлен в виде пути в этом графе.
Отражение геномной информации в единой структуре данных — серьезный научный вызов. Решение данной задачи принесет плоды в различных областях современной биоинформатики, но прежде всего в популяционной генетике и поиске новых мутаций.


Биоинформатика в популяционной и эволюционной генетике

11. Молекулярная биология и эволюция* (Надежда Маркина, ИБХ РАН)

Видео | Слайды

Вводная лекция по основам молекулярной биологии и эволюции для информатиков и программистов. Лекция дает шанс овладеть основными понятиями, которые потребуются при дальнейшем освоении биоинформатики в целом.

12. Основы популяционной генетики* (Михаил Колмогоров, UCSD)

Видео | Слайды

Популяционная генетика изучает изменчивость организмов внутри одной популяции. Характер и динамика наблюдаемых мутаций играют важную роль в понимании развития организма. В лекции описаны основные понятия и математические модели, используемые в популяционной генетике, а также применение этих моделей в реальных исследованиях.

13. Эволюция бактериальных геномов (Михаил Гельфанд, МГУ, ИППИ РАН)



Видео 

Бактериальный геном можно рассматривать на разных уровнях: как набор генов 
(и обсуждать эволюцию пан-геномов), как последовательность генов (и обсуждать геномные перестройки) и как последовательность нуклеотидов (и обсуждать гомологичную рекомбинацию). В лекции приводятся разные примеры и обсуждаются перспективы общей теории.

14. Эволюция регуляторных систем (Михаил Гельфанд, МГУ, ИППИ РАН)

Видео 

Эволюция бактериальных регуляторных систем включает изменение состава регулонов, перестройку регуляторных каскадов и ко-эволюцию факторов транскрипции и узнаваемых ими мотивов в ДНК. В лекции приводятся разные примеры и перспективы этой теории. 

15. Последние достижения в анализе эволюционных перестроек (Максим Алексеев, George Washington University)



Видео | Слайды

Эта лекция посвящена последним научным достижениям в области анализа эволюционных перестроек. Геномные перестройки — это, образно говоря, геномные «землетрясения», которые изменяют структуру хромосом. Минимальное количество перестроек между двумя геномами (так называемое «геномного расстояние») представляет собой достаточно точную меру эволюционного расстояния между этими организмами и часто используется в сравнительной геномике. Несмотря на то, что существует удобная модель Double-Cut-and-Join (DCJ) для анализа наиболее распространенных перестроек генома (развороты, транслокации, деления, слияния) и вычисления соответствующего расстояния, эта модель совсем не учитывает более редкие, но «мощные"" транспозиции перегруппировки. 


Биоинформатика и старение

16. Почему люди стареют и как биоинформатика помогает в этом разобраться?* (Андрей Афанасьев, CEO компании iBinom, с.н.с. Лаборатории функционального анализа генома МФТИ)

Видео | Слайды

Обзорная лекция о достижениях современной геронтологии, проблемах и перспективных направлениях.

17. Тайны старения мозга (Елена Сюгис, Quretec, University of Tartu)



Видео | Слайды

Значимая часть современных исследований направлена на изучение молекулярных механизмов старения мозга и возникновения нейродегенеративных заболеваний, таких как болезнь Паркинсона и болезнь Альцгеймера. Результаты таких экспериментов накапливаются в различных общедоступных и частных базах данных, которые создаются для эффективной работы с определенными типами биологических данных. Тем не менее, основные механизмы нейродегенеративных заболеваний все еще остаются плохо изученными. В данной лекции обсуждается создание общих сложных сетей взаимодействия отдельных уже описанных механизмов для создания целостной картины в понимании нейродегенеративных поражений.


Современный биоинформатический и биотехнологический рынок

18. Мировые генетические и биоинформатические компании. И те, кто ими притворяется*(Андрей Афанасьев, CEO компании iBinom, с.н.с. Лаборатории функционального анализа генома МФТИ)



Видео | Слайды

Обзор мирового рынка биоинформатики и NGS. Тренды и ведущие игроки. 
А также пара слов о том, как работает венчурная индустрия, и почему появляются Элизабет Перриш и ей подобные.

19. What's hot: о чем говорят врачи с биоинформатиками на международных конференциях* (Андрей Афанасьев, CEO компании iBinom, с.н.с. Лаборатории функционального анализа генома МФТИ)

Видео | Слайды

Обзор выступлений на научно-практических конференциях TRI-Con, ASHG, AMP и NGS в медицинской генетике. Основные вопросы современной медицинской генетики и молекулярной диагностики.

20. Современные методы разработки таргетных лекарственных средств (Павел Яковлев, директор департамента вычислительной биологии, BIOCAD)



Видео | Слайды

Лекция посвящена общим вопросам и тенденции современной разработки лекарств на примере биоинформацевтической компании BIOCAD.",vyahhi
"Привет, Хабр!

Если вы когда либо работали с JetBrains IDEs с разных компьютеров, вы могли сталкиваться с проблемой, что вам приходилось заново указывать настройки IDE (сочетания клавиш, подсветку синтаксиса, внешний вид, плагины и другие настройки).

До сих пор эту проблему частично решал встроенный плагин Settings Repository. Для того, чтобы, плагин синхронизировал настройки, необходимо самостоятельно создать Git репозиторий (на GitHub или другом сервисе) и указать его в IDE.

Очевидным минусом этого подхода является необходимость самостоятельно возиться с Git репозиторием. Не говоря уже о том, что, в случае использования публичного репозитория, ваши настройки могут быть доступны другим пользователям.

Для того, чтобы сделать процесс синхронизации настроек более удобным и безопасным, мы разрабатываем новый механизм, который частично опирается на Settings Repository, однако использует для хранения настроек репозиторий на стороне JetBrains. Доступ к этому репозиторию осуществляется посредством JetBrains Account (JBA). 

Кроме более удобного способа хранения, новый механизм позволяет синхронизировать не только настройки, но и установленные плагины.

Что такое JetBrains Account

JetBrains Account можно использовать для управления лицензиями, доступа к форумам, блогам JetBrains и репозиторию плагинов. Подробнее о том как работает JetBrains Account можно узнать здесь (на английском).

Доступ к плагину

Новый плагин называется IDE Settings Sync и совместим начиная с версии 2017.2.1. Учитывая раннюю стадию готовности плагина, доступ к нему можно получить пока только по приглашениям.

Если у вас уже есть приглашение, вы можете пригласить ваших коллег и друзей через форму на сайте JetBrains Account. 

Если у вас нет приглашения, вы можете попросить его отправив письмо на idea-cloudconfig@jetbrains.com. При этом, письмо должно быть отправлено с почтового ящика, привязанного к вашему JetBrains Account.

Если у вас нет JetBrains Account, его можно легко создать на сайте JetBrains Account. При создании JetBrains Account, мы рекомендуем указывать тот же почтовый ящик, который указан в данных ваших купленных лицензий.

Ограничения плагина на данный момент

Плагин доступен только для платных продуктов (IntelliJ IDEA Ultimate, PhpStorm, PyCharm, CLion, RubyMine, Rider, и т.п.)
Плагин пока не работает вместе с License Server (мы работаем над этим).

Чтобы плагин заработал, необходимо

1. Получить письмо с приглашением



2. Установить плагин

3. Авторизоваться в IDE (или Toolbox App) с помощью JetBrains Account



4. Включить синхронизацию



5. Отправить приглашение хорошему другу



Обратная связь

Учитывая, что плагин все еще находится в активной разработке, возможны ошибки. В случае, если вы столкнетесь с проблемами, пишите нам о них комментариях на странице плагина или напрямую в трекер. 

Я и авторы плагина будем рады ответить на вопросы.

Программируйте с удовольствием!",andreycheptsov
"Я занимаюсь прототипированием с тех самых пор, как в России стало известно об Axure. С 2008 года. А проектированием гораздо дольше. Хотя называть ту работу проектированием можно с большой натяжкой. Скорее, написание технических заданий, да дизайн для простейших сайтов, по функционалу уступающих даже современным промо.

Всему пришлось учиться самому, читая книжки, экспериментируя на своих проектах, тренируясь на чужих. Менялись и усложнялись технологии, а вместе с ними и инструментарий. И единственная программа, альтернативы которой я так и не нашёл — Axure. Она всю дорогу позволяла быстро спрототипировать что угодно и наглядно продемонстрировать результат клиенту и остальным участникам процесса.

Если работу проектировщика можно сравнить с работой архитектора, работающего с чертежами, то труд специалиста по прототипированию скорее напоминает 3D-художника, который по этим чертежам делает виртуальный объёмный макет здания. По этому макету можно походить и посмотреть, как на самом деле будет выглядеть здание, ещё до того, как оно будет построено. С чертежами так не выйдет. Если продолжить проводить аналогии, то чертёж здания — это функциональная спецификация проекта. А вся сопроводительная документация — это уже полное техническое задание. И чем сложнее проект, тем комплекснее становятся эти три его составляющие и тем меньше могут жить друг без друга. Впрочем, я, кажется, отвлёкся.

За годы работы с программой, сделав пару сотен прототипов, я настолько привык к её интерфейсу и наработал так много паттернов и шаблонов, что сейчас могу совсем не отвлекаться на прикладную сторону реализации того или иного прототипа, все силы отдавая именно проектированию, а не прототипированию. И когда мне встречаются люди, которые спрашивают, как сделать так, чтобы «слайды листались» или «меню разворачивалось», я раздражаюсь, забывая о том, что когда-то и сам не знал, как это всё делать. «В прототипе не должно быть динамических элементов, это усложнит его передачу дизайнеру», — говорю я. Но потом, остыв, понимаю, что иногда их всё-таки нужно использовать, а я когда-то и сам не умел этого делать.

И тогда я создал в контакте группу по Axure, в которой отвечаю всем желающим на любые, даже глупые с моей точки зрения, вопросы. Причём, не только по прототипированию, но и по общим принципам проектирования и работы с клиентами. При желании вы её легко найдёте или уже давно в ней состоите. 

После этого начал записывать небольшие скринкасты:
— Быстрое прототипирование в Axure
— Как приклеить меню навигации к верхней части страницы при скроллинге
— Глобальные переменные
— Активный пункт в меню навигации
— Работа с якорями
— Разворачивающиеся вопросы и ответы
— Всё о выпадающих меню

И что самое главное, я этим всем занимаюсь бесплатно. Но вижу, что спрос на подобную информацию в определённых кругах очень высок, поэтому ситуация со временем может измениться.

Вдобавок ко всему я организую вебинар от лица Проектората, своего бюро проектирования. Опять же, при желании вы легко найдёте и эту информацию тоже.

Я, скорее, не пиарюсь, а говорю: «Вот есть мешок информации, которой и в помине не было, когда я начинал». Приходите и сами выбирайте, что вам нужно. Любите зарубежные первоисточники — я вам скажу, в каких разделах форума Axure появляться. Нужны статьи на русском? Задавайте вопросы там, где я могу на них ответить, — и благодаря вам востребованная информация станет доступна всему сообществу.

На этом, пожалуй, стоит закругляться. Нет смысла писать о преимуществах 7 версии Axure перед 6, это заняло бы слишком много места и эпизодов. Упомяну только, что моя скорость работы увеличилась на 40% с выходом семёрки. Также я не писал этот текст для тех, кто вообще не представляет, что такое Axure и интерактивные прототипы. Его я напишу чуть позже в другом хабе.",Ekamelev
"В MIT компьютерная графика – это 3D алгоритмы, в некоторых учебниках – это сборник описаний популярных графических редакторов, в кино – спецэффекты, на телевидении – оформление экрана. Всё это – увлекательно и любопытно, но что же такое компьютерная графика?

В разное время мне доводилось работать и с анимацией, и с трёхмерной графикой, и с полиграфией, и с веб, и с видео, причём в весьма различных формах. Двадцать лет я так или иначе чем-то таким занимался и не жалею об этом. И все эти двадцать лет у меня из головы не выходила одна фраза научного руководителя лицея, где в середине 90-х я учился этой самой компьютерной графике: 
Вы, конечно, можете освоить инструменты, вы будете владеть программами. Тогда вы будете среди тех немногих, кто это сейчас умеет, но скоро настоящие профессионалы освоят компьютерные технологии, и вам придется тяжело рядом с ними. Поэтому не забудьте получить настоящую профессию, а все эти фотошопы и 3DS – лишь ваши инструменты, ваше конкурентное преимущество сегодня. Но было и ещё одно обстоятельство, о котором явно не говорили: в какой-то момент я понял, что компьютерная графика «по специальности» – это ещё и биология, физика, и даже химия. И, конечно, математика. В этом посте я расскажу о трехнедельном открытом онлайн-курсе по основам компьютерной графики, который начался совсем недавно – 9 марта, – и попробую объяснить, для кого он сделан, зачем, почему такой, и как знания компьютерной графики помогают в жизни.

Опыт преподавания
Проблема начинающих айтишников в том, что у них очень уж замечательная профессия. Это портит и развращает. Не нужно терпение, ведь результат получается быстро. В области компьютерной графики ситуация аналогична, поэтому там встречаются «эникейщики» – люди, которые хорошо умеют тыкать на кнопки в программах, но не понимают, что при этом происходит, и лучший ли путь они выбрали. До какого-то уровня это допустимо, но профессиональный потолок для таких специалистов очень низкий.

 Моё преподавание компьютерной графики началось с семестрового вузовского курса на 50 студентов, с неторопливых и вдумчивых курсовых, и тут… применили «деструктивное сжатие» – курс стал 8 недель, письменный экзамен без всяких курсовых и под 200 человек на потоке. Самое время полностью переосмыслить курсы, которые я веду в институте. И здесь оказалось весьма кстати движение в сторону МООК-ов (массовых открытых онлайн-курсов, MOOC): очень хотелось изменить формат обучения, особенно на лекциях, и автоматизировать проверку работ, желательно не в ущерб их глубине.

Действительно, обычные лекции выглядят несколько странно в потоковой аудитории. Помните, как пытались разглядеть формулу на доске с задних рядов? А вот её уже и стерли. Видеолекции принесли комфорт и наглядность. С практическими задачами все не так однозначно, но тоже неплохо. Массовые онлайн-курсы – ещё одна небольшая революция на нашем веку, которая существенно изменяет часть нашей жизни – то, как мы получаем знания. Не только в школе или вузе, но и в течение всей жизни.
 
Содержание курса
Основная задача вводного онлайн-курса – не столько изучить что-то новое, сколько собрать целостную картину из тех знаний, которые у всех уже есть, и в этой картине увидеть те подробности, которые раньше могли оставаться незамеченными. Поэтому те, кто уже пользуется инструментами компьютерной графики, смогут освежить в памяти самые основы, порой даже из школьной программы. Кто же совсем не сталкивался с этой областью, смогут получить хорошие фундаментальные знания, чтобы продолжить изучение отдельных инструментов и программ, применяющихся на практике.

Первая неделя посвящена вовсе не компьютерной и вовсе не графике. А физике и биологии, и немного про то, как это переносится в компьютерные цветовые модели. 

Вторая неделя рассказывает уже про основы графики, применительно к компьютерам. Это будет наиболее полезно тем, кто ничем таким раньше не занимался и не интересовался. Тогда же будет работа с растровой, векторной графикой и с видео «вручную». То есть, совсем вручную – обработаем фотографии и видео из командной строки, нарисуем что-нибудь векторное в текстовом редакторе. И, поверьте, это бывает нужно по жизни. У вас появляется свобода выбора инструментов, ведь не всё удобно делать, например, в фотошопе. И не всегда уместно.

 Третья неделя будет посвящена сжатию изображений. Здесь те, кто изучал кодирование и цифровую обработку сигналов, увидят знакомые темы, но без сложной математики. Основная задача – понять, как это работает.

Курс не подразумевает погружения в математику и программирование. Хорошо, если вы знакомы со школьным курсом математики и информатики, а также понимаете, что бывает двоичная и шестнадцатеричная система исчисления.

Углубленный онлайн-курс
Упоминавшийся выше 8-недельный курс компьютерной графики я веду в бакалавриате МИЭМ НИУ ВШЭ каждый сентябрь и октябрь. Поэтому в сентябре вводный онлайн-курс будет запущен снова, и на нем одновременно будут обучаться студенты МИЭМа и все желающие.

Сразу за ним, в октябре 2015, последует углубленный 4-х недельный онлайн-курс, который ещё находится в разработке, – по конкретным применениям компьютерной графики. К сожалению, в нём не получится рассмотреть все возможные приложения, но в некоторые углубиться успеем. Например, будет раздел про видео, возможно войдёт трехмерная графика и полиграфия. Не войдёт «научная» компьютерная графика – это совсем отдельный мир, достойный самостоятельного курса. 

Начнётся второй курс с обзора железа, причём, от раритетов до наших дней. Зачем? Вот простой вопрос: почему телевизор показывает пикселями, изображение передается макроблоками, а кодирование видео для передачи измеряют строками и полукадрами (полями)? Это сложно понять тому, кто знает только плоские ЖК-дисплеи с цифровой картинкой. Оказывается, телевидение отродясь имело больше общего с печатной машинкой, чем с современными форматами и железом. И понимание того, как что работает, помогает правильно выбирать параметры кодирования видео.

TL;DR

Три недели, начиная с 9 марта 2015, пройдёт онлайн-курс по компьютерной графике, где можно будет сначала вспомнить школьные физику и биологию, потом преодолеть цветовые пространства, изучить разные виды графики и основные понятия в ней, освоить работу с консольным и редакторами видео и графики, потренироваться с векторной графикой и анимацией в SVG. В завершение познакомиться со сжатием изображений. Более близкие знакомства – во второй части курса.
Четвертая неделя будет для того, чтобы пройти тесты и доделать задания с предыдущих недель. 
Этот курс вряд ли будет интересен тем, кто ожидает погружения в математику и программирование. Он для тех, кто хотел понять компьютерную графику, но боялся преподавателей, которые начинают сыпать математическими формулами и заставляют сразу что-то программировать. 
В курсе не будет рассказываться про Photoshop, Corel Draw и другие популярные редакторы. Для этого есть другие прикладные курсы, и их легко найти в интернете. Будет немного практики в консольных редакторах, этот навык бывает полезен. Например, если вам нужно автоматически обрабатывать картинки или видео на своем сайте.
1 сентября этот онлайн-курс будет запущен еще раз, на нем будут обучаться студенты МИЭМ НИУ ВШЭ, сразу за ним будет запущен углубленный онлайн-курс, продолжающий этот. 


Вопросы в заключение

Почему небо синее? Впрочем, это видно из картинки вверху поста.
Прозрачен ли забор? 
Как мы видим? А как воспринимаем увиденное? 
Где начало цветового круга, и как его поделить? 
Чем отличаются палитры фотографов, печатников и художников?
Какое самое распространенное цветовое пространство?
Чем отличаются «точки на дюйм» у принтеров, сканеров и мониторов? 
Какая бывает избыточность в изображениях? 

Текст подготовлен Денисом Королевым, преподавателем онлайн-курса «Компьютерная графика: основы».",vyahhi
"Эта статья основана на моём личном опыте, собранном на пути от наёмного сотрудника через фрилансера до владельца собственного бюро, и адресована в первую очередь именно фрилансерам. Я не буду оформлять её в виде списка рекомендаций. Просто расскажу о своём пути и принципах, а выводы вы делайте сами.

Принцип номер один. Делать свою работу хорошо
Понятие «хорошо» очень субъективное, поэтому расскажу о своих критериях.

Соблюдение сроков я ставлю на первое место. Суперкачественный прототип, предоставленный с задержкой, уступает прототипу «на троечку», сданному в срок. Причём этот эффект можно свести к нулю, поставив клиента в известность о задержке заранее. Я встречал очень мало коллег, которые могли спокойно предупредить о переносе срока сдачи. Обычно это были истории постфактум про внезапную болезнь, умерших родственников, непредвиденный семейный праздник. Я тоже прошёл этот путь. Сначала мог просто пропасть и появиться без объяснения причин. Потом придумывал оригинальные оправдания за часы перед сдачей. И, наконец, в случае срывов, стал предупреждать клиентов заранее. Ещё одно наблюдение: если исполнитель предрасположен к пропаданиям, то совсем искоренить этот момент не получится. Но это не смертельно.

К первому принципу можно также отнести и способность разговаривать с клиентом. Сначала я краснел на всех переговорах подряд. Переговоры были вынужденными, я тогда ещё работал в компании Вебмастер.спб. Руководитель за ручку приводил меня к клиентам, и мы общались. Затем пошла череда переговоров на фрилансе. Я всё ещё краснел, но уже меньше. Появилась уверенность, а затем и сверхуверенность в своём профессионализме. Пошли более агрессивные переговоры, где я оказывался вне досягаемости глупых и непонятливых клиентов, а за их спинами смеялся с другими проектировщиками и дизайнерами над наборами тех требований и комментариев, которые они выдавали на переговорах. Весь этот снобизм исчез сразу после того, как я оказался на месте своих клиентов и пообщался с такими же специалистами, как я. Испытав это чувство на собственной шкуре, со своим следующим клиентом я уже общался с большим пониманием. Становилось легче вычислить, что ему от меня нужно: использование в качестве карандаша для реализации идеи, в которую он не хочет вносить ничьих мыслей, кроме собственных, или же партнёрские отношения, когда он верит в мою квалификацию и опыт. Второй вариант стал возможным только после того, как я начал делать собственные проекты. Звучит громко? Так вот ваш собственный бложик на вордпрессе или собранная в контакте группа — это проекты. И если вы вкладывали в них свои силы и может быть даже средства, когда вас никто об этом не просил, то вам уже проще понять клиента, с которым вы общаетесь. А ему — вас.

Когда я перестал думать о переговорах, как о трудной части моей работы, моё внимание переместилось на предмет этих переговоров и выявление совместных с клиентом целей. Не нужно говорить, что краснеть я перестал, а зазнаваться и агрессивничать — и подавно. Сильно в моей карьере помогало не начинать сразу говорить о делах, а посвящать пять-десять минут разговорам на отвлечённые темы. Это давало возможность расслабиться и познакомиться. Иногда этого времени хватало для того, чтобы понять, что с этим человеком будет очень тяжело работать, и выстраивал дальнейшие переговоры таким образом, чтобы выяснить, сможет ли с ним работать кто-нибудь из моих коллег.
Наконец, частью хорошей работы является грамотное ценообразование. Подробнее я расскажу об этом в рамках другого принципа, а здесь обозначу лишь некоторые моменты.

Поначалу я с трудом оценивал проект и с ещё большим трудом мог сохранить эту цену на том же уровне к моменту реализации. В принципе это нормально, когда мало опыта. Затем, через десяток-другой проектов, я научился прикидывать, сколько они будут стоить в рамках реализации их компанией, в которой я тогда работал. Следующим этапом было развитие способности называть совершенно неадекватные цены, если я понимал, что клиент готов заплатить именно столько. Тогда понятие оценки лишилось своего потолка и принесло много профита в коротком периоде. И, наконец, уже глубоко во фрилансе, я научился называть ровно такую цену, которая не только по карману моему клиенту, но и вселит в него уверенность, что эта работа стоит таких денег. На этом месте давайте перейдём ко второму принципу.

Принцип номер два. Не выстраивать вертикальных отношений с клиентом
Когда я окончательно ушёл на вольные хлеба и мой заработок зависел исключительно от меня, я частенько оказывался в ситуациях, когда не хватало денег. Что я делал? Звонил клиентам, которым недавно сдал работу и спрашивал, где, мол, мои деньги? Меня кормили завтраками, я звонил ещё. И говорил ужасные вещи. «У меня тут на носу очередной платёж за квартиру, я на вас рассчитываю!» «В этом месяце нужно закрыть налоги за квартал, не подведите!» Ну и так далее. То есть я неосознанно работал над образом человека, который материально зависит от клиентов, с которыми работает. И этот человек проектирует им сайты, которые должны приносить деньги. Несостыковочка, да? Я поменял этот подход ещё в тот момент, когда у меня действительно были проблемы с деньгами. И примерно в то же время мои дела пошли на поправку. Я общался с клиентами так, чтобы они понимали, заплатят они мне, не заплатят в ближайшее время, — это останется на их совести, а мне они этим никак погоды не сделают, потому что у меня и так всё хорошо. И это сработало! Так как я всю дорогу старался соблюдать свой первый принцип (делать свою работу хорошо), то, соблюдая второй, я создавал понимание того, что если клиенты не будут мне платить, то через какое-то время я не захочу с ними работать. А это очень нехорошо, если им нравится моя работа. Это не какие-то мои догадки. Когда я пришёл к тому, что сам платил исполнителям, то в первую очередь платил тем, кто делал работу хорошо, и в последнюю тем, кто ныл «где мои деньги», а работал как-то не очень. Удивительное совпадение: те, кто ныли, чаще всего работали хуже тех, кто молча исполнял свои обязательства.

Через какое-то время у меня действительно стало всё хорошо, и я начал более взвешенно размышлять над политикой предоплаты. До этого я старался заполучить как можно большие авансы. В итоге, делая работу для студий, я вовсе отказался от предоплаты, т.к. мы все на рынке знаем друг друга и ценим свою репутацию. Никто меня ни разу не обманул и не подвёл. А работая с частными клиентами, я беру символическую предоплату, не превышающую 25% от стоимости проекта. За всю историю кинули меня только однажды. И, кстати, этот прототип преспокойно лежит у меня в портфолио, принося новых клиентов. Страх того, что заказчик может обмануть, исчез в тот самый момент, когда я понял, что прототип, который я демонстрирую, стоит именно тех денег, которые я называл. И если он останется у меня, его ценность от этого не утратится. Ведь это прекрасная возможность положить свежую работу в портфолио сегодня, а не через полгода, по договору.

Я стал избегать официоза в общении. Если мне что-то было непонятно, я не стеснялся звонить первому лицу и разговаривать с ним. Если первое лицо было потенциально недоступно на протяжении всей работы, я общался с его сотрудниками, понимая, как они сами относятся к проекту и что нужно сделать, чтобы счастливы были все. В этом мне помогал опыт работы в тех же должностях, что и те люди, с которыми я общался. Когда-то я сам выполнял те же задачи, связанные с созданием сайта для компании, которые начальник возложил на них, и знал, чем я могу им помочь.
Всё это привело к понятию, которое я уже миллион раз озвучивал всем, кто обращался ко мне за консультациями: «работать по одну сторону баррикад». Чтобы получить что-то, сначала отдайте что-нибудь. Чтобы понять того, с кем вы работаете, побудьте на его месте. Опыт показывает, что одного воображения тут не достаточно. Чтобы говорить с клиентом на одном языке, вам нужен свой проект. Ещё раз: вам нужен свой проект. Ой, я же хотел обойтись без советов. Простите.

Принцип номер три. Присутствие целей и умное ценообразование
Чем бы я ни занимался, удовольствие мне это приносило, если я отбрасывал все посторонние мысли и посвящал себя целиком этому занятию. А вот к успеху приводило наличие финальной цели. А самые понятные цели в основной работе — денежные.

Сначала я, как и все не приезжие студенты, жил с мамой. На работу я устроился ради денег на карманные расходы, но ничто не мешало мне уйти с неё в любой момент и не попасть под каток жизни (в рамках своего рассказа я опущу истории о своём опыте работы вне сферы проектирования). И уволился я по обоюдному согласию где-то через год. Я был молод (да я и сейчас не стар), мне хотелось движухи и свободы, а каждодневный офис нагнетал тоску. Но денег-то хотелось! И я начал фрилансить. Для сопляка у меня это неплохо получалось и иногда я просаживал на развлечения неплохие, честно заработанные, деньги. Но со временем я понял, что в таких тепличных условиях из меня вырастет замечательный овощ. А хотелось чего-то большего.

Тогда я поставил себе первую цель. Съехать от мамы на новую, съёмную квартиру. Разумеется, сразу у меня этого не получилось, пришлось придумывать новую работу. И, как это ни странно, я вернулся в ту же компанию, из которой ушёл. Речь идёт о Вебмастере.спб, это не секрет. Так как за предыдущие полтора года я активно фрилансил и наработал неплохое портфолио, вернулся я в компанию уже на должность руководителя отдела проектирования. Ну и зарплата оказалась неожиданно выше, чем я планировал.

И тут начался период одновременного фриланса и официальной работы. Доход позволил мне снять квартиру и на вкусняшки тоже оставалось. Но нужно было двигаться дальше, а я по природе человек очень ленивый и прекрасно это осознавал уже тогда. Поэтому следующей моей целью было сохранить мой доход, но при этом перестать работать официально, чтобы часы на дорогу в офис и обратно принадлежали только мне. И будем откровенны: восемь часов в день никто на самом деле не работает. А вместо того, чтобы развлекаться в это время в офисе, можно развлекаться где-нибудь в другом месте. Также некоторым лучше работается ночью. И в итоге мне это удалось! Я почти не подводил шефа в Вебмастере, при этом сократил часы работы в офисе и начал генерировать поток клиентов на фрилансе. О том, как я это делал, пока умолчу.
Наконец, в какой-то момент я привёл в офис человека себе на замену (кстати, речь идёт об Антоне Григорьеве, сейчас мы с ним вместе и являемся собственниками Проектората) и незаметно исчез из компании. Я всё выстроил так, что мой уход никак не отразился ни на жизни компании, ни на моей собственной. И вот я полностью на фрилансе, но уже на съёмной квартире, с любимой девушкой и автокредитом.

Вот тут и началось самое сложное. Поток клиентов оказался не таким надёжным, как хотелось бы. А так как мои принципы ещё не выкристаллизовались до такой степени, как сейчас, то возникали проблемы и с их (клиентов) удовлетворённостью, и с платежеспособностью. Я оказывался в ситуациях, когда мне нужно платить по счетам, а денег нет. И при этом мне должны одновременно пять человек. Именно такие моменты научили меня двум вещам. Во-первых, не переживать по этому поводу. Переживания никогда не помогали решить возникшие проблемы. Во-вторых, не рассчитывать ни на кого, кроме семьи, друзей и себя самого. Со временем ситуация стала выравниваться. Я нашёл способ, как постоянно быть при заказах, и пришёл к тому, что при желании мог бы продать всё своё время в месяце. Но эта лень!

Мой доход постепенно увеличивался сам по себе, и я поставил следующую цель. Зарабатывать столько же денег, тратя меньше часов. На этом можно сильно не заострять внимание, потому что проблемы с ленью целиком это не решало. Поэтому, необходимо было начать делегировать задачи другим, обучать, создавать собственную компанию. Но в рамках моей истории я остановлюсь на этом месте и перейду, наконец, к ценообразованию.

Всё, что я написал выше, как раз и подводит меня к составляющим этого принципа.

При возможности сокращать количество рабочих часов в месяц, сохраняя доход на том же уровне или увеличивая его.

Заполнять всё своё рабочее время вперёд задачами. И если пробелов нет, повышать стоимость часа. А если пробелы есть, не отказываться от тех клиентов, которые пока не могут заплатить столько денег. В будущем эти благодарные клиенты принесут вам гораздо больше. Как часто вы делали прототипы бесплатно? Я много раз.

При первом касании с клиентом я мог продемонстрировать ему только подвешенность своего языка и много работ в портфолио. Но без известного бренда этого недостаточно, чтобы называть высокие цены. Однако к ним можно прийти, если показать клиенту, что конкурентоспособных исполнителей найти очень и очень трудно. А для этого всего-то нужно соблюдать первые два принципа. И чтобы дать себе возможность продемонстрировать это, я при первом касании называл стоимость работы значительно ниже обычной.

Несколько лет назад я делал на фрилансе продажи на прототипирование, которые превышали 200 000 рублей за проект. Если вам интересно взглянуть на такой прототип, сходите на сайт Проектората, загляните в незаполненное ещё портфолио и откройте прототип морских грузоперевозок. Это он. Он ещё сопровождался функциональной спецификацией, но всё-таки сейчас я с грустью смотрю на ту работу. Клиент был не так счастлив, как хотелось бы. Ссылку не даю, потому что добрый Хабр положит наш сайт и глазом не моргнёт. Так вот с тех пор в итоге гораздо большие суммы мне приносили клиенты, начинавшие работать со мной за те деньги, которые им было комфортно платить. Эти клиенты до сих пор со мной. Если узнали себя, подмигните в комментариях.

Возвращаясь к целям: после какого-то момента нет большого смысла делать работу ещё дороже, брать ещё больше проектов, светиться в профессиональном сообществе. Мне нравится проектировать, я изначально этим занимался бескорыстно. А сейчас понимаю, что пора делиться опытом. Обучать других (уж простите, но всё-таки опубликую здесь незаметную ссылку на свою группу по Axure, обращайтесь с любыми вопросами, мы вам всегда поможем). Иначе, зачем я, лентяй, сделал себе так много свободного от работы времени? Чтобы посвящать его себе.

Напоследок пожелание: постоянно учитесь, не зазнавайтесь, делайте свои проекты, обретайте независимость. Именно в такой последовательности. И помните: никакие принципы проектирования и бизнеса не должны стоять выше принципов человечности. А уж как выглядят последние — каждый решает сам.",Ekamelev
"Летом 2018 года под Петербургом прошла ежегодная летняя школа по биоинформатике, на которую приехали 100 студентов и аспирантов, чтобы изучить биоинформатику и узнать об её использовании в различных областях биологии и медицины. 

Главный фокус этой школы был на исследованиях рака, но были лекции и по другим областям биоинформатики, начиная от эволюции и заканчивая анализом данных одноклеточного секвенирования. На протяжении недели ребята учились работать с данными секвенирования нового поколения, программировали на Python и R, применяли стандартные биоинформатические тулы и фреймворки, знакомились с методами системной биологии, популяционной генетики и моделированием лекарств при изучении опухолей, и изучали многое другое. 

Ниже вы найдете видео 18 лекций, прочитанных на школе, с кратким описанием и слайдами. Помеченные звёздочкой «*» – достаточно базовые, их можно смотреть без предварительной подготовки.



 1*. Онкогеномика и персонализированная онкология | Михаил Пятницкий, НИИ биомедицинской химии 

Видео | Слайды

Михаил кратко рассказал о геномике опухолей и о том, как понимание эволюции раковых клеток позволяет решать практические задачи онкологии. Особенное внимание лектор уделил объяснению отличия между онкогенами и онкосупрессорами, методам поиска «раковых генов» и выделения молекулярных подтипов опухолей. В заключение Михаил уделил внимание будущему онкогеномики и проблемам, которые могут возникнуть.



 2*. Генетическая диагностика наследственных опухолевых синдромов | Андрей Афанасьев, yRisk

Видео | Слайды

Андрей рассказал о наследственных опухолевых синдромах и разобрал их биологию, эпидемиологию и клинические проявления. Часть лекции посвящена вопросу генетического тестирования — кому нужно его проходить, что для этого делается, какие сложности возникают в обработке данных и интерпретации результатов и, наконец, какую пользу это приносит пациентам и их родственникам.



 3*. The Pan-Cancer Atlas | Герман Демидов, BIST/UPF 

Видео | Слайды

Несмотря на десятилетия исследований в области геномики и эпигеномики рака, ответ на вопрос «как, где и почему возникают опухолевые синдромы» до сих пор не является полным. Одна из причин для этого — необходимость стандартизированного получения и обработки огромного количества данных в целях обнаружения эффектов небольшой величины, которые сложно обнаружить в ограниченном наборе данных (а именно такой объем является типичным для исследования в рамках одной или нескольких лабораторий), но которые в совокупности играют огромную роль в таком сложном и многофакторном заболевании, как рак.

В последние несколько лет множество сильнейших исследовательских групп мира, осознавая эту проблему, начали объединять свои усилия в попытках обнаружить и описать все эти эффекты. Об одной из таких инициатив (The PanCancer Atlas) и результатах, полученных в рамках работы этого консорциума лабораторий и опубликованных в спецвыпуске Cell Герман рассказал в этой лекции.



 4. ChIP-Seq в изучении эпигенетических механизмов | Олег Шпынов, JetBrains Research 

Видео | Слайды

Регуляция экспрессии генов осуществляется разными способами. На своей лекции Олег рассказал об эпигенетической регуляции путём модификации гистонов, изучении этих процессов методом ChIP-seq и способах анализа полученных результатов.



 5. Мультиомика в исследованиях рака | Константин Оконечников, German Cancer Research Center

Видео | Слайды

Развитие экспериментальных технологий в молекулярной биологии позволило совместить в себе изучение большого спектра функциональных процессов в клетках, органах или даже целом организме. Для установления связей между компонентами биологических процессов необходимо использовать мультиомику, в которой совмещаются массивные экспериментальные данные геномики, транскриптомики, эпигеномики и протеомики. Константин привёл наглядные примеры применения мультиомики в области исследований раковых заболеваний с фокусом на педиатрическую онкологию.

6. Многосторонность и ограничения анализа одиночных клеток | Константин Оконечников

Видео | Слайды

Более подробная лекция про РНК-секвенирование одиночных клеток и методы анализа этих данных, а также способы преодоления явных и спрятанных проблем при их изучении.



7. Анализ данных single-cell RNA-seq | Константин Зайцев, Washington University in St.Louis

Видео | Слайды

Вводная лекция про секвенирование одиночных клеток. Константин обсуждает методы секвенирования, трудности на этапах лабораторной работы и биоинформатического анализа, и способы их преодоления.



8. Диагностика мышечной дистрофии с помощью нанопорного секвенирования | Павел Авдеев, Университет Джорджа Вашингтона

Видео | Слайды

Секвенирование с использованием технологии Oxford Nanopore обладает преимуществами, которые могут быть использованы для выявления генетических причин заболеваний, например, мышечной дистрофии. В своей лекции Павел рассказал о разработке пайплайна для диагностирования этого заболевания.



 9*. Графовое представление генома | Илья Минкин, Университет штата Пенсильвания

Видео | Слайды

Графовые модели позволяют компактно представить большое количество похожих последовательностей и часто используются в геномике. Илья подробно рассказал о том, каким образом с помощью графов восстанавливают геномные последовательности, как и зачем используют граф де Брюина, насколько такой «графовый» подход увеличивает точность поиска мутаций, и какие нерешённые проблемы с использованием графов всё ещё остаются.



 10*. Занимательная протеомика | Павел Синицын, Max Planck Institute of Biochemistry (2 части) 

Видео 1, Видео 2 |Слайды 1, Слайды 2

Белки ответственны за большинство биохимических процессов в живом организме, и пока протеомика — единственный метод глобального анализа состояния тысяч белков одновременно. Спектр решаемых задач впечатляет — от идентификации антител и антигенов до определения локализации нескольких тысяч белков. В своих лекциях Павел рассказал об этих и других применениях протеомики, нынешнем её развитии и подводных камнях при анализе данных.



 11*. Основные принципы молекулярных симуляций | Павел Яковлев, BIOCAD 

Видео | Слайды

Вводная теоретическая лекция о молекулярной динамике: зачем она нужна, что делает и как используется применительно к разработке лекарственных препаратов. Павел уделил внимание методам молекулярной динамики, объяснению молекулярных сил, описанию связей, понятиям «силовое поле» и «интегрирование», ограничениям в моделировании, и многому другому. 



 12*. Молекулярная биология и генетика | Юрий Барбитов, Институт биоинформатики 

Видео 1, Видео 2, Видео 3 | Слайды

Введение в молекулярную биологию и генетику из трёх частей для студентов и выпускников технических специальностей. В первой лекции обсуждаются понятия современной биологии, вопросы структуры генома и возникновение мутаций. Вторая подробно освещает вопросы функционирования генов, процессы транскрипции и трансляции, третья — регуляцию экспрессии генов и основные молекулярно-биологические методы.

 13*. Принципы анализа данных NGS | Юрий Барбитов, Институт биоинформатики

Видео | Слайды

В лекции рассказывается о методах секвенирования второго поколения (NGS), их типах и характеристиках. Лектор подробно объясняет, как устроены данные «на выходе» из секвенатора, как их преобразуют для анализа и какие есть способы работы с ними.



 14*. Использование командной строки, практика | Геннадий Захаров, EPAM

Видео

Практический обзор полезных команд в командной строке Linux, опций и основ их использования. Примеры направлены на анализ секвенированных последовательностей ДНК. Помимо стандартных операций Linux (например, cat, grep, sed, awk) рассматриваются утилиты для работы с последовательностями (samtools, bedtools).



 15*. Визуализация данных для самых маленьких | Никита Алексеев, Университет ИТМО 

Видео | Слайды

Каждому случалось иллюстрировать результаты своих научных проектов или разбираться в чужих диаграммах, графиках и картинках. Никита рассказал, как правильно интерпретировать графики и диаграммы, выделяя из них главное; как рисовать понятные картинки. Лектор также подчеркнул, на что обращать внимание при чтении статьи или просмотре рекламного ролика.



 16*. Карьера в биоинформатике | Виктория Коржова, Max Planck Institute of Biochemistry

Видео: 1, 2 | Слайды

Виктория рассказала о структуре академической науки за рубежом и о том, на что необходимо обратить внимание, чтобы, будучи студентом бакалавриата, магистратуры или аспирантом, построить карьеру в науке или в индустрии.

 17*. Как учёному составить CV | Виктория Коржова, Max Planck Institute of Biochemistry 

Видео

Что оставить в CV, а что убрать? Какие факты будут интересны потенциальному завлабу, а какие лучше не упоминать? Каким образом располагать информацию, чтобы ваше резюме привлекло внимание? Лекция даст ответы на эти и другие вопросы.

 18*. Как устроен рынок биоинформатики | Андрей Афанасьев, yRisk 

Видео | Слайды

Как устроен рынок и где работать биоинформатику? Ответ на этот вопрос подробно, с примерами и советами, изложен в лекции Андрея.


Конец
Как вы могли заметить, лекции на школе достаточно широки по тематикам — от молекулярного моделирования и использования графов для сборки генома, и до анализа одиночных клеток и построения научной карьеры. Мы в Институте биоинформатики стараемся включать в программу школы разнообразные темы, чтобы охватить как можно больше биоинформатических дисциплин, и чтобы каждый участник узнал для себя что-то новое и полезное.

Следующая школа по биоинформатике пройдёт с 29 июля по 3 августа 2019 под Москвой. Набор на школу 2019 уже открыт, до 1 мая. Темой этого года станет биоинформатика в исследованиях развития (developmental biology) и старения (aging).

Для тех, кто хочет углублённо изучить биоинформатику, продолжается прием заявок на нашу очную годовую программy в Санкт-Петербурге. Или следите за нашими новостями об открытии программы в Москве уже этой осенью.

Для тех, кто не в Петербурге или Москве, но очень хочет стать биоинформатиком — мы подготовили список книг и учебников по алгоритмам, программированию, генетике и биологии.

Ещё у нас есть десятки открытых и бесплатных онлайн-курсов на Stepik, которые вы можете начать проходить прямо сейчас.

В 2018 году летняя школа по биоинформатике проводилась при поддержке наших постоянных партнеров – компаний JetBrains, BIOCAD и EPAM, за что им огромное спасибо. 

Всем биоинформатики!

P.S. Если вам показалось мало, вот пост с лекциями позапрошлой школы и ещё нескольких школ позапозапрошлых лет.

",vyahhi
"При создании нового сайта особое внимание следует уделять сбору материалов перед этапом проектирования. Как вы думаете, по какому техническому заданию работа будет вестись быстрее: по сухому описанию функционала каждого раздела, либо по такому же описанию, но наполненному конкретными примерами? Когда дизайнеру не нужно придумывать рыбный текст и искать картинки на Яндексе, а можно просто сделать копи-пэйст из ТЗ? Когда верстальщик будет иметь примерное представление об объёмах планируемых к публикации текстов потому что они у него перед глазами? Когда программист, работая над полями в базе данных, будет иметь перед глазами актуальный элемент каталога со всеми его параметрами?

— А вы что, не можете спроектировать сайт без этих материалов? Я же вам сказал, что я хочу на нём видеть, и какие задачи он должен выполнять, — это произносится с неподдельным удивлением на лице. А ещё с лёгким амбре неуверенности в компетенции исполнителя.
— Конечно, можем, — отвечает проектировщик, пожав плечами.

С этого момента время на создание сайта увеличивается в два, два с половиной раза. Причина этому проста. Проектировщик лишь предполагает, какой контент будет ставиться на сайт. Ключевое слово — предполагает.
— Приведите пять примеров товаров из вашего каталога;
— Напишите тестовую новость для вашего будущего сайта;
— Предоставьте, пожалуйста, актуальную контактную информацию вашей компании.
Я выбрал три очень простых и очевидных вещи. Сайт можно спроектировать и без этих материалов. Каждый из трёх вышеперечисленных пунктиков можно заменить кипами вопросов, раскрывающих тему сисек.
— Сколько категорий товаров будет в вашем каталоге?
— Каждый товар будет сопровождаться одним или несколькими изображениями?
— У вас есть своя студия, чтобы сфотографировать шесть тысяч наименований товаров с трёх сторон?
— У различных групп товаров есть повторяющиеся характеристики?
— Как часто вы планируете писать новости?
— Кто будет этим заниматься?
— Будут ли новости с других сайтов с указанием источников?
— Готовы ли вы искать тематические картинки, иллюстрирующие каждую новость?
— Сколько офисов в вашей компании?
— Сколько есть отделов и какие?
— У каждого отдела свой телефон?
— Добавочные номера?
— Кто будет проверять почту?
И так далее, и тому подобное. И хорошо, если заказчик действительно готов выложить круглую сумму на разработку и «всецело положиться на профессионалов». В действительности же в связи с ограниченными бюджетами он старается сэкономить на чём угодно, а «профессионалами» называет вас в таком контексте:
— Вы же профессионалы. Зачем вам нужна вся эта информация для разработки сайта?
И получается, что к моменту сдачи проекта начинаются бесконечные вереницы корректировок, внесений правок, затем исправлений ошибок в связи с внесениями правок. После этого поднимается техническое задание и становится видно, что оно не совпадает с тем, что имеется на выходе. К этому моменту уже давно истрачены все возможные человекочасы. Текст на главной странице слишком громоздкий и то, что на дизайне умещалось без полосы прокрутки, теперь разбросано на три страницы вниз. В разделе с контактной информацией оказался лишь адрес электронной почты, одинокий и несчастный, а в каталоге вместо шести тысяч наименований товаров есть лишь несколько десятков, фильтрация по которым выдаёт нам в среднем по одному результату на страницу.

— А вы что, не можете спроектировать сайт без этих материалов? Я же вам сказал, что я хочу на нём видеть, и какие задачи он должен выполнять, — это произносится с неподдельным удивлением на лице. А ещё с лёгким амбре неуверенности в компетенции исполнителя.
— Конечно, можем, — вновь отвечает проектировщик.",Ekamelev
 ,r13
"Проверка паспортов? Какая ещё проверка? Группа хакеров The Hacker’s Choice выложила видео, на котором фальшивый паспорт Элвиса Пресли (защищенный RFID) успешно проходит через систему контроля голландского аэропорта.




Для создания поддельного паспорта было использовано программное обеспечение для резервного копирования RFID-меток, пишет группа в своем блоге.

Группа предлагает вернуть «человеческую часть» в систему безопасности. «Люди неплохо справлялись с этой работой 120 лет. Уберите людей — и эта система ни на что не годится.»",kurokikaze
"

Чуть больше года назад мы открыли информационный поток на Google+ посвященный Ruby/Rails. Не смотря на разные отзывы в духе «а давайте здесь рекламировать группы Вконтакте» и скромный +1 посту, к сообществу присоединилось более 500 разработчиков, которые и по сей день получают (более или менее регулярно) новости, ссылки и пищу для размышлений.

И это чудно, потому как все знают на сколько сложно самому поддерживать интерес к своему же проекту. Особенно такому бескорыстному, как CodingDead (мы поменяли название, потому что частенько начали постить вне рамок Ruby/Rails)

Поэтому сегодня, в качестве запоздавшего подарка самим себе, мы хотим расширить формат организовав еженедельную рассылку CodingDead, которая будет включать в себя уже не только ссылки, но и, хочется надеяться, некую аналитику событий произошедших за неделю в Ruby/Rails/Node/Javascript сообществах (надеемся дойти и до скринкастов). Революции, скандалы, расследования.

Добро пожаловать и хороших выходных!",r13
"У нас отличные новости. Мы рады объявить о выходе Big Data Tools — нового плагина для IntelliJ IDEA, который обеспечивает интеграцию со Spark и поддерживает редактирование и запуск Zeppelin-ноутбуков. Теперь вы можете создавать, редактировать и запускать Zeppelin notebooks прямо из IDE. Плагин предоставляет умную навигацию, автодополнение, инспекции и быстрые исправления, а также рефакторинг кода внутри ноутбуков.

Что уже поддерживается


Просмотр, создание и удаление ноутбуков
Помощь при написании Scala-кода

Автодополнение
Рефакторинг Rename
Экстракт переменной, метода или параметра
Переход к декларации
Поиск использований

 
Создание и удаление параграфов
Запуск параграфов
Просмотр вывода параграфов
Поддержка базовой визуализации

Пока что помощь при написании кода работает только для Scala. Другие языки будут поддержаны позже. Кроме того, мы не собираемся ограничиваться поддержкой Zeppelin и планируем добавить больше возможностей, которые будут полезны для тех, кто работает с большими данными.

Если вам не терпится увидеть Big Data Tools в действии, посмотрите это короткое видео:


А лучше попробуйте плагин сами! Как это сделать, читайте далее. 

Как использовать плагин


Убедитесь, что вы используете IntelliJ IDEA Ultimate 2019.2 (обратите внимание, плагин пока не работает с EAP 2019.3).
Проверьте, установлены ли плагины BashSupport, Python и Scala (подойдут свежие версии). Пока что их придется устанавливать вручную — мы скоро это исправим.
Установите новейшую сборку плагина Big Data Tools.
Если все работает как надо, после перезапуска IDE справа появится окно инструментов Big Data Tools. Откройте его, кликните по значку «+» на панели инструментов в окне и выберите Zeppelin.
В диалоговом окне подключения Zeppelin укажите параметры для подключения вашего экземпляра Zeppelin (хост, порт, учетные данные и т.д.). Для проверки соединения используйте Test Connection.
После настройки конфигурации Zeppelin вы увидите этот экземпляр в окне инструментов вместе с деревом ноутбуков. Теперь вы сможете управлять ноутбуками и открывать их в редакторе.

Что дальше?

Прежде всего, мы не собираемся ограничиваться интеграцией с Zeppelin и Spark, которую мы, конечно, будем улучшать. Мы планируем поддержать больше инструментов для работы с большими данными: добавить интеграцию с распределенными файловыми системами, такими как HDFS и S3, реализовать встроенное средство просмотра файлов Parquet и улучшить поддержку SQL.

Вот примерный план нашей работы в обозримом будущем:


Ноябрь 2019: совместимость с IntelliJ IDEA Ultimate 2019.3 EAP.
Ноябрь 2019: интеграция с S3 (проводник).
Декабрь 2019: базовая поддержка SQL (подсветка, автодополнение, автоформатирование и т.д.).
Январь 2020: интеграция с HDFS (проводник) и средство просмотра Parquet-файлов.
Февраль 2020: базовая интеграция с Hadoop и Spark (пользовательские интерфейсы YARN, Spark и т.д.).
Весна/лето 2020: поддержка Python в Zeppelin-ноутбуках (мы также рассматриваем вопрос о совместимости плагина с PyCharm Professional Edition, сообщим об этом позже).

Это неокончательный план. Мы будем корректировать его на основе ваших отзывов, чтобы быть уверенными, что мы сосредоточены на нужных вещах. Пожалуйста, сообщайте нам об ошибках и делитесь мнением о том, каких фич недостает и как, по-вашему, должна работать та или иная функция.

Что еще важно знать о новом плагине

Плагин Big Data Tools совместим только с IntelliJ IDEA Ultimate и недоступен в Community Edition. Мы еще не знаем, попадет ли он в Community Edition. На данный момент таких планов у нас нет.
То же самое касается и других сред разработки. Мы пока не знаем, будет ли плагин совместим с другими IDE. На данный момент у нас есть только предварительный план добавить совместимость с PyCharm Professional Edition, как только в плагине появится поддержка Python. По мере развития плагина мы сможем лучше понимать, куда нам стоит двигаться в контексте его поддержки в других IDE.

У меня нет лицензии на IntelliJ IDEA Ultimate. Как мне попробовать плагин?


Если вы активно участвуете в любом проекте с открытым исходным кодом, связанном с большими данными, напишите нам.
Если вы хотите написать о Big Data Tools, свяжитесь с нами, и мы предоставим вам расширенную пробную версию, чтобы вы могли оценить плагин.
Если вы не являетесь ни коммиттером, ни блогером, но проявляете интерес к большим данным, обратитесь к нам за расширенной пробной версией (например, до 3 месяцев). Это предложение ограничено.

Как оставить отзыв

Мы очень ждем ваших отзывов о плагине. Любые вопросы вы можете задать в комментариях к этому посту. Замечания и предложения оставляйте в нашем трекере.
Вы также можете поделиться своими впечатлениями о плагине, пройдя короткий опрос. Это займет всего минуту.

Конструктивная критика поможет нам сделать вашу работу со Spark, Zeppelin и большими данными максимально удобной и эффективной. Поэтому не стесняйтесь делиться своими отзывами и предложениями — нам это важно.

P. S. Особенно приятно, что выход плагина совершенно случайно совпал с нашим участием в Spark AI Summit. Так что если вы вдруг окажетесь на этой конференции, обязательно приходите на наш стенд: сможете посмотреть на плагин в действии и поделиться своими впечатлениями.
",andreycheptsov
"Господа!

Мы работаем над небольшим проектом (opensource, подробности будут доступны после первого релиза), и нам очень важно ваше мнение, как потенциальных пользователей. Проект подразумевает наличие веб-мэйл клиента внутри себя, по этому вопрос: что вас раздражает в Gmail и вобще в почтовых клиентах?

И как альтернатива — что хотелось бы добавить или убрать.

Crowdthinking :)",r13
"Отрасль разработки программного обеспечения развивается молниеносными темпами. На рынок постоянно выходят новые технологии, инструменты и “маст-хэв” продукты, заставляя программистов ежегодно обновлять свой арсенал. Каким бы эффективным ни был язык программирования или фреймворк, рано или поздно возникает что-то еще более быстрое и мощное. Создавая продукты для разработчиков, мы в JetBrains стараемся угнаться за этим разнообразием, не упуская из виду главное — насколько инструмент разработки удобен в использовании.

Прошлой зимой мы объявили, что работаем над новой средой программирования на основе платформы IntelliJ — для языка Go. До недавнего времени эта IDE была известна под кодовым названием Gogland (в честь острова Гогланд в Финском заливе, в 180 км к западу от Санкт-Петербурга), но в качестве окончательного названия был выбран GoLand.

Сегодня мы, наконец, выпустили официальную версию GoLand 2017.3. Предлагаем вам скачать ее, и если понравится, купить!

Если вы уже используете IntelliJ IDEA Ultimate, то все возможности GoLand можете пользоваться прямо в ней, просто установив этот плагин.



Возможности GoLand

Задача GoLand — предоставить тот же уровень удобства при программировании на Go, который PyCharm обеспечивает для Python, а IntelliJ IDEA — для Java. В GoLand вас ждет умное автодополнение кода, мгновенные инспекции, быстрые исправления и удобная навигация.

Кроме того, в IDE есть встроенные средства запуска тестов, анализ покрытия кода тестами и отладчик. Также присутствует поддержка Git, Docker, баз данных, терминал и многие другие полезные инструменты. GoLand полноценно поддерживает фронтэнд-разработку и умеет работать с JavaScript, TypeScript, React, Vue.js, Angular и другими технологиями.

Про последние нововведения вы можете прочитать в новостях нашей программы EAP, а для ознакомления с полным описанием функций — посетить веб-сайт GoLand (на английском).

Несмотря на “длинный” номер версии — GoLand 2017.3 — это только начало. Мы будем совершенствовать все системы и аспекты IDE, включая инспекции, рефакторинги, отладчик и прочие. Если вы знаете, какой фичи не хватает, или вдруг наткнетесь на баг, сразу пишите в наш трекер или в наш твиттер @GoLandIDE.

Модель лицензирования

Как и другие наши десктопные продукты, GoLand распространяется по подписке для организаций и физических лиц, с ежемесячной или ежегодной оплатой. При непрерывной подписке вы можете сэкономить до 40%, начиная с третьего года и далее. GoLand также входит в пакет All Products вместе с другими нашими IDE и .NET-инструментами.

Чтобы узнать больше о ценах, а, может быть, подать заявку на бесплатную лицензию, зайдите на страницу Buy. Или просто скачайте бесплатную 30-дневную пробную и испытайте GoLand в действии без каких-либо обязательств.

Для студентов, преподавателей и разботчиков некоммерческих проектов с открытым исходным кодом, GoLand доступен бесплатно.

Частота обновлений

Крупные обновления для GoLand будут выпускаться трижды в год: весной, летом и зимой. Мелкие апдейты будут выходить чаще и будут доступны даже в том случае, если вы решите приостановить подписку.

Ваша команда JetBrains GoLand
The Way to Go",andreycheptsov
"

Я без сопливых предисловий, ок? Хотя нет… не положено :) Буду краток:
-ыыыыы!..
-… долгими ночами
-… спалил 3 телевизора!!!
-… уууу!!!
-… дуратская герконовая клавиатура!!! *!""*#$&!!!
-… а потом ДИСКОВОД!
-… аааа!!!

Все, вводная часть окончена — теперь к делу. Это — мой вишлист, или то, каким должен быть Speccy моей мечты:


Итак:

1. Не хочу раритетный, оригинальный Синклеровский девайс, ибо рука не встанет его использовать каждый день. Был бы — под стекло, и на полочку :)
2. Подключение к S(VGA) монитору. Нативное. Еще круче — ЖК-панель.
3. HDD на 20-40 Gb
4. TCP/IP стек в ОС, и сетевую карту с вполне себе стандартным RJ45
5. RS232 на борту
6. USB для внешнего носителя, и драйвер для FAT в ОС
7. Звуковой процессор от AMIGA ^_^
8. Все это должно быть в форм-факторе стандартного Scpeccy — т.е. моноблок с клавиатурой
9. Клавиатура. Такая же как на iMac прошлого поколения. С большим ходом.
10. Встроенная в ОС загрузка с образов
11. Встроенный БП
12. Белого цвета

13. Ну… на самом деле — можно любого цвета…

В нагрузку, видимо, нужен еще и нормальный мануал по ассемблеру для этого монстра :)

А у вас, есть ZX вашей мечты?",r13
"Этим летом в Москве прошла первая летняя школа по биоинформатике. В ней приняло участие более 100 человек, которые приехали из различных уголков России и СНГ и были разделены на два потока: «информатики» и «биологи». Организовал мероприятие Институт биоинформатики в сотрудничестве с СПбАУ РАН, МГУ, ИППИ РАН и программой GameChangers.

Про то, как прошла сама школа, на хабре уже писали наши студенты. Теперь же каждый желающий, не имевший возможности поучаствовать в школе, может ознакомиться с интересующими его докладами: мы выложили все видеозаписи лекций и все слайды презентаций онлайн.

Если вы впервые слышите про биоинформатику, то советую в первую очередь посмотреть вводную лекцию Аллы Лапидус, которая расставит всё на свои места. Сейчас Алла занимает ведущие позиции в центре геномной биоинформатики СПбГУ и в лаборатории алгоритмической биологии СПбАУ РАН, а ранее долгое время руководила геномными проектами в DOE Joint Genome Institute (Калифорния).



Под катом можно посмотреть список всех прошедших лекций, включая их краткие описания, которые помогут вам сориентироваться, а также полные видеозаписи на русском.

И в самом начале этого списка хочется сказать огромное спасибо Кириллу Григорьеву, который безвозмездно снимал и обрабатывал всё видео со школы, Ярославу Баранову и Павлу Яковлеву, которые помогали в съемках, а также yasha_somov за помощь с оборудованием.

Первый день школы прошёл на биофаке МГУ и состоял из достаточно сложных лекций, в которых ведущие учёные рассказали о последних трендах в биоинформатике: 

1. Биоинформатические подходы к изучению микроэволюции
Алексей Кондрашов (University of Michigan, МГУ)
Победитель программы мегагрантов, руководитель лаборатории эволюционной геномики ФББ МГУ, Алексей Кондрашов, рассказал о том, что такое микроэволюция и популяция, какими характеристиками они обладают, какие задачи стоят в изучении микроэволюции и роль в этом процессе биоинформатики. Были рассмотрены такие темы, как: изменчивость популяций, мутационный процесс, дрейф, отрицательный, положительный и балансирующий отбор, размножение, географическая структурированность популяций. [слайды]

Видео

2. Генетическое репрограммирование соматических клеток: что нам дает биоинформатика
Сергей Киселёв (ИОГен РАН)
Во второй лекции было рассказано об огромном потенциале стволовых клеток и, в частности, индуцированных плюрипотентных стволовых клеток (ИПСК) для развития новейших методов клеточной терапии, создания модельных систем с целью изучения механизмов заболеваний и разработки лекарственных препаратов. В лекции обсуждались свойства и функциональные маркеры репрограммирования ИПСК, а также рассказывалось, как с помощью изменений в метилировании ДНК, модификации и транскрипции гистонов в сочетании с биоинформатическими методами создавать специфические маркеры, которые различают стволовые клетки и определяют их судьбу. [слайды] 

Видео

3. Чтение человеческого генома как инструмент улучшения некоторых антропологических и исторических гипотез
Егор Прохорчук (Центр «Биоинженерия» РАН)
Далее было рассказано о применении методов биоинформатики в антропологии, а также освещена проблема этичности в сфере генетических исследований. Помимо этого, была затронута такая неожиданная и интересная тема, как сопоставление генетических и лингвистических данных. [слайды]

Видео

4. Молекулярные особенности эволюции мозга человека
Филипп Хайтович (Shanghai Institutes for Biological Sciences)
Филипп рассказал про фенотип, генотип и процесс перехода от фенотипа к генотипу; развитие человеческого мозга: транскриптом мозга, специфическую экспрессию генов различных видов и её отличия, особенности и механизмы в организме человека; исследование экспрессии генов людей, страдающих аутизмом; сравнение неандертальцев и современных людей. [слайды]

Видео

Начиная со второго дня, школа проходила в Подмосковье. Лекции начались с наиболее простых для понимания, с постепенным повышением сложности к концу школы: 

5. Биоинформатика и её применения
Алла Лапидус (Центр геномной биоинформатики СПбГУ, СПбАУ РАН)
Была рассказана история дисциплины и различные трактовки понятия «биоинформатика», а также об основных областях применения биоинформатики, включая вопросы использования биоинформатики в медицине. [слайды]

Видео

6. Молекулярная биология для информатиков
Наталья Володина (СПбАУ РАН)
В нескольких лекциях было дано введение в молекулярную биологию для слушателей небиологических специальностей, включающее такие темы, как: структура и функции ДНК и РНК, центральная догма молекулярной биологии (ДНК → РНК → белок), структура белков и их функции, основные компоненты клетки и их функции. [слайды 1] + [слайды 2]

Видео

7. Разработка научного ПО: лучшие практики и подходы
Константин Оконечников (Max Planck Institute for Infection Biology, Berlin)
Было рассказано о рекомендованных методиках и способах разработки научного ПО. Многие из этих способов давно известны и успешно применяются в сфере разработки программного обеспечения, но требуют адаптации под «научную среду». Отдельное внимание в лекции уделено технологиям оптимизации производительности программных комплексов. [слайды]

Видео

8. Простые способы анализа сложных данных
Филипп Хайтович (Shanghai Institutes for Biological Sciences)
Во второй лекции Филипп рассказал более подробно о сфере своей научной деятельности, включая изучение специфичной для человека РНК по сравнению с другими млекопитающими, такими как шимпанзе и мышами; процессы старении мозга; длинные некодирующие РНК. [слайды]

Видео

9. Анализ данных NGS
Андрей Пржибельский (СПбАУ РАН)
Было рассказано об истории секвенирования, дан обзор популярных и развивающихся сегодня технологий, описаны их особенности и области применения. В лекции подробно обсуждается процесс и существующие программы для сборки генома, а также дается ответ на вопрос, существует ли единственный лучший ассемблер. [слайды]

Посты Андрея andrewprzh на эту тему на хабре: Биоинформатика: взгляд изнутри и Снова о биоинформатике: сборка бактериальных геномов.

Видео

10. Введение в чтение РНК
Константин Оконечников (Max Planck Institute for Infection Biology, Berlin)
Было рассказано о технологиях секвенирования транскриптома и техниках анализа данных, специфичных для данного типа эксперимента, включая методы выравнивания коротких ридов с учетом сплайсинга, сборку транскриптов, способы реконструкции изоформ, сравнительный анализ экспрессии генов, а также методы поиска деформаций в геноме и генов слияния (fusion genes). [слайды]

Видео

11. Графы де Брюйна и алгоритмы сборки
Сергей Нурк (СПбАУ РАН)
Было рассказано о постановке задачи сборки генома и использование для ее решения графов де Брюйна. В лекции также обсуждаются различные проблемы, связанные с ошибками секвенирования или нехваткой ресурсов. [слайды]

Видео

12. Биоинформатика в лаборатории: осмысление данных секвенирования следующего поколения
Константин Оконечников (Max Planck Institute for Infection Biology, Berlin)
Было рассказано о различных компьютерных программах, позволяющих анализировать данные Next Generation Sequencing (NGS), и о принципах, позволяющих их эффективно комбинировать и использовать. [слайды]

Видео

13. Приложения и базы данных секвенирования
Алла Лапидус (Центр геномной биоинформатики СПбГУ, СПбАУ РАН)
Во второй своей лекции, Алла рассказала об истории развития технологий секвенирования и разнообразии существующих биологических баз данных, которое диктуется многообразием стоящих задач и растущим приложением этих технологий в настоящее время (например, в персонифицированной медицине). [слайды]

Видео

14. Инвестиции в биотех: очевидные и неочевидные истории
Андрей Афанасьев (iBinom, МГУ)
В этой лекции было рассказано о нескольких биотехнологических проектах глазами инноваторов и инвесторов, а также был подробно представлен личный опыт спикера, являющегося основателем биоинформатического стартапа iBinom, по взаимодействию с венчурными фондами и институтами развития. [слайды]

Видео

15. Сборка и аннотация больших геномов
Павел Добрынин (Центр геномной биоинформатики СПбГУ)
Было рассказано о библиотеках для секвенирования и ресеквенирования, сборке хромосом, использовании референсных геномов близкородственных видов и о различных аспектах аннотирования генов. [слайды]

Видео

16. Медицинская биоинформатика: настоящее и тенденции
Александр Павлов, Антон Брагин (Sequoia Genetics)
Было рассказано об основных приложениях биоинформатики в медицине и перспективных направлениях ее развития; о геномной медицине, задачах и требованиях к качеству клинических данных, подходам к их получению и трансляции. Вторая часть лекции посвящена техническим аспектам создания ПО, предназначенного для клинической интерпретации биоинформатических данных (принципиальные способы построения pipeline'ов анализа, модульная организация, существующие фреймфорки и сервисы, специфические для биомедицинского ПО, особенности дизайна). [слайды]

Видео

17. Миниконференция (презентации студентов)
Миниконференция проходила в формате презентаций участников летней школы, которые модерировал Михаил Райко (СПбГУ, СПбАУ РАН). На стадии конкурсного отбора была возможность подать тезисы, и отобранные 13 человек рассказали о своих исследованиях в формате пятнадцатиминутных докладов. С подробными темами и слайдами докладчиков можно ознакомиться на сайте.

18. Анализ данных NGS
Андрей Пржибельский (СПбАУ РАН)
В рамках данного семинара для информатиков подробно рассказано об эффективных алгоритмах и методах для анализа данных NGS. Во второй части семинара к Андрею Пржибельскому подключился Антон Коробейников, также из лаборатории алгоритмической биологии СПбАУ РАН.

Видео

19. Обзор биотехнологий
Александр Карабельский (BIOCAD)
Было рассказано о современных направлениях исследований в сфере моноклональных антител, описаны их виды, свойства и спектр применения, а также подробно разобран процесс разработки с рассмотрением его стадий и используемых методов (на примере биотехнологической компании BIOCAD). [слайды]

Видео

20. Биоинформатика ДНК-белкового взаимодействия и регуляции генов
Всеволод Макеев (ИОГен РАН, МФТИ)
Было рассказано о том, чем отличаются последовательности ДНК разных видов, почему сходные гены работают по разному и почему конкретные гены работают в конкретный момент времени (в конкретной ткани). Освещены такие вопросы, как синтез РНК и последующие стадии, тканеспецифичная экспрессия, регуляция и регуляторы транскрипции, а также представлен обзор различных методов и технологий изучения ДНК-белкового взаимодействия и регуляции генов и сравнение существующих программ. [слайды]

Видео

21. E-value в BLAST
Антон Коробейников (СПбАУ РАН, СПбГУ)
В двух лекциях, наполненных математикой, было рассказано о статистических принципах и результатах, позволяющих оценить значимость совпадений между строками и отличить действительно неслучайные совпадения от случайных (для биоинформатика BLAST — это стандартное средство для поиска схожести между последовательностями белков и нуклеотидов, самая цитируемая научная статья 90-х годов). Предполагается, что слушатель лекции знаком с основными понятиями статистики и теории вероятностей (распределение, случайная величина, среднее, оценка, статистическая гипотеза).

Видео Видео

22. Биотехнологии для биологов
Александр Карабельский (BIOCAD)
В своей второй лекции, Александр рассказал на примере компании BIOCAD о структуре и организации работы современных фармацевтических компаний, типах и свойствах лекарственных препаратов для лечения онкологических и аутоиммунных заболеваний, иммуноглобулинах и причинах их разнообразия, использовании антител и их свойств в терапии, а также других смежных темах. [слайды]

Видео

23. Мои первые 100 проектов на IonTorrent: рассказ биоинформатика
Дмитрий Алексеев (НИИ ФХМ)
Было рассказано о практическом опыте и результатах использования оборудования IonTorrent для различных целей: чтение и сборка генома, ресиквенс, библиотеки парных ридов, метагеномика, 16S анализ и другие. [слайды]

Видео

24. Writing for Scientists
Наталья Кузнецова (ИБХ РАН)
Было рассказано о правилах и методиках написания научных статей на английском языке, правильном использовании лексики, пунктуации, структуре текста и типичных ошибках. [слайды]

Видео

25. Динамика синтетических сетей генной регуляции
Михаил Иванченко (ННГУ)
В этой лекции было рассказано о построении искусственных регуляторных сетей с заданным поведением, например флуоресцентно осциллирующих колоний бактерий, а также о необходимых для этого математических моделей и методах их исследования, важнейших теоретических и экспериментальных результатах, полученных в этой области, о ряде открытых актуальных задач. [слайды]

Видео

26. Динамика синтетических сетей генной регуляции
Алексей Заикин (University College London)
В следующей лекции Алексей, коллега Михаила, продолжил тему построения искусственных регуляторных сетей со сложной динамикой. [слайды]

Видео

27. Биоинформационная оценка совершенства стволовых клеток человека
Мария Шутова (ИОГен РАН)
В этом научном докладе Мария, сотрудница лаборатории Сергея Киселёва (который прочитал в первый день лекцию о генетическом репрограммировании соматических клеток), рассказала о сравнении эмбриональных стволовых клеток (ЭСК) и индуцированных плюрипотентных стволовых клеток (ИПСК), имеющих различную генетическую природу и решении задачи доказательства их идентичности. В лекции было рассказано о создании изогенной системы, позволяющей провести сравнения экспрессии (Illumina HT12) и CpG метилирования (Illumina 450k) ЭСК, дифференцированных клеток и ИПСК. В рассказе освещены молекулярные и биоинформационные методы, использованные в анализе, а также озвучены предварительные результаты этого исследования. [слайды]

Видео

28. Использование карт в сборке геномов
Алексей Макунин (Центр геномной биоинформатики СПбГУ)
Несмотря на то, что последняя лекция школы состоялась в 10 утра в субботу (после пятничного прощального вечера), почти все участники школы смогли её посетить, и Алексей рассказал о различных способах картирования геномов – от использования BAC-клонов до метода радиационных гибридов и сборки с использованием близкородственных референсных геномов, в том числе об определении порядка скэффолдов, что является важным шагом для сборки и финиширования геномов. [слайды]

Видео

В заключение
Учитывая большой интерес к школе и положительные отзывы участников, мы решили проводить её ежегодно. Летом 2014-ого школа пройдёт в Питере. Кроме того, если вас заинтересовала тема, то записывайтесь на начинающийся онлайн курс по алгоритмам в биоинформатике на Coursera (хабрапост о курсе). 

Отдельно хочу поблагодарить команду организаторов школы – Катю Чайкину и Аню Черныш, – без которых школа бы не состоялась, а также всех помогавших нам друзей и волонтёров. Ну и, конечно, наших добрых спонсоров, в особенности широко известную компанию JetBrains за стабильную поддержку Института биоинформатики в течение последних трёх лет. А также: Российскую венчурную компанию, фонды «Династия» и РФФИ; компании BIOCAD, «Диаэм» и Life Technologies. 

Красивый отчёт об итогах школы можно прочитать тут (осторожно, PDF на 6.5 MB).

Институт биоинформатики: сайт, твиттер, вконтакте, летняя школа по биоинформатике 2014.",vyahhi
"Coursera начала эксперименты с открытыми курсами, на которые можно записаться в любой момент. Первый курс, оформленный таким образом – Child Nutrition and Cooking. Интересно, что этот курс не использует стэнфордскую платформу, которую Coursera использовала ранее для всех онлайн курсов, а выглядят уже совершенно по-новому.



Дедлайны были полезным нововведением в MOOC-ах относительно простых видеолекций с задачами. Они мотивировали проходить курс в определённом темпе, повышая вероятность его завершения. Дедлайны обеспечивали «общий контекст» дискуссий на форуме. Но исследования Coursera показали, что строгие дедлайны полезны только тем, кому повезло начать курс вовремя. Сколько раз у вас возникала ситуация, что интереснейший курс начался месяц назад, и присоединяясь к нему вы становитесь отстающим, а вскоре просто бросаете курс? А как часто вы мечтали пройти уже закончившийся MOOC?

Судя по всему, в курсе «Child Nutrition and Cooking» пока нет форума, то есть это просто набор видеолекций и тестов. В будущем Coursera планирует объединять пользователей, записавшиеся на курс в одно и то же время, в когорты. Такие пользователи будут вместе проходить курс и общаться между собой на форуме. Вероятно, мы услышим больше об этом в будущем.",vyahhi
"Последние несколько месяцев я работал над SDK для Android, входящим в платформу управления контентом Nuxeo. Особенно много работы было в последнее время, с приближением официального релиза SDK. Я хочу поделиться несколькими практическими советами по поводу разработки под Android, в частности тестирования и эмуляции. Уже после нескольких дней разработки я понял, что работа с эмулятором Android — не сахар, потому что он чудовищно медленный.

Начнём с того что он медленно запускается, но даже если использовать для ускорения запуска снапшот состояния, выполнение кода все равно происходит медленно, особенно в режиме отладки.

Тонкая настройка параметров Qemu не слишком помогла — скорость работы эмулятора осталась медленной, возможно именно поэтому большинство разработчиков предпочитает использовать реальные устройства, подключенные по USB.

В любом случае, мне хотелось найти решение, потому что я хотел показывать результат работы приложения на проекторе и не хотел чтобы демонстрируемое приложение тормозило.

Эмуляция против симуляции
Я не разрабатываю софт под платформы от Apple, но похоже что у симулятора iPhone нет таких проблем с производительностью, как у эмулятора Android.

Одна из причин состоит в том что он работает не как «настоящий симулятор», т.к. инструкции CPU, используемые в симуляторе iPhone такие же, как у компьютера, на котором запущен симулятор (x86).

Android, с другой стороны, вынужден эмулировать настоящий процессор архитектуры ARM поверх процессора x86. Это добавляет довольно значительный оверхед в плане производительности.

По крайней мере для демонстрации приложения мне ни к чему эмулировать ARM, мне нужна только возможность запустить Android и моё приложение.

Android_x86
К счастью, существует open source проект по портированию Android на процессоры x86: http://www.android-x86.org/.

В проекте есть несколько образов для скачивания, и хотя они не успевают за всеми официальными релизами Android SDK, они предоставляют загрузочный образ Android 2.3, который меня и заинтересовал.

Настройка Android_x86 внутри VirtualBox
Первый шаг: загрузить ISO-образ Android_x86. Я использовал android-x86-2.3-RC1-eeepc.iso, который может быть загружен с http://www.android-x86.org/download.

Следующий шаг: создание виртуальной машины, способной запускать этот образ.

Я использовал VirtualBox, но слышал что QEmu тоже неплохо подходит.

Итак, в VirtualBox необходимо создать новую машину:


целевая OS: choose Linux
версия целевой OS: другая
Я использовал 1GB RAM и 1 CPU (остальные настройки оставил по умолчанию)
добавить жёсткий диск: VDI drive, динамический размер, 512 Mio
добавить CDROM, в который загружен скачанный ISO


В загрузочном меню выбираем установку на жёсткий диск:



В процессе установки придётся сделать следующее:


создать новый раздел на жёстком диске
отформатировать его в ext3
выбрать этот раздел для инсталляции Android


Когда установка завершится:


выключить виртуальную машину
удалить устройство CDROM, указывающее на ISO образ (в окне конфигурации VirtualBox)


Загружаем виртуальную машину: у Вас теперь есть работающий образ Android x86.

Но так как по умолчанию он сконфигурирован для Eee PC, это не идеальный вариант для тестирования приложений, предназначенных для экрана смартфона.

Теперь нам необходимо изменить конфигурацию под экран телефона.

Выключаем VM и VirtualBox.

Первый шаг: создать новые режимы разрешения. Я определил 3 режима:

VBoxManage setextradata ""Android2.3"" ""CustomVideoMode1"" ""320x480x16""
VBoxManage setextradata ""Android2.3"" ""CustomVideoMode2"" ""640x960x16""
VBoxManage setextradata ""Android2.3"" ""CustomVideoMode3"" ""480x720x16""


Здесь Android2.3 это имя созданной виртуальной машины.

Теперь, когда мы объявили новые режимы, необходимо их использовать. Для этого придётся изменить параметры ядра.

Чтобы это сделать, необходимо перезапустить виртуальную машину и в мню загрузки выбрать Debug mode, чтобы Android загрузился с командной строкой.

Запускаем виртуальную машину.

Когда она запустится, мы перемонтируем загрузочный раздел в read/write, чтобы можно было изменять конфигурацию Grub.

mount -o remount,rw /mnt


После этого можно будет редактировать файл menu.lst.

vi /mnt/grub/menu.lst


Теперь дублируем первый пункт меню (3 строки) и редактируем параметры ядра (первую запись «title» и две следующих строки).

Параметры по умолчанию таковы:

quiet root=/dev/ram0 androidboot_hardware=eeepc acpi_sleep=s3_bios,s3_mode DPI=240 SRC=/android-2.3-RC1


Параметры, которые я использовал:

quiet root=/dev/ram0 androidboot_hardware=generic_x86 acpi_sleep=s3_bios,s3_mode DPI=240 UVESA_MODE=480x720 SRC=/android-2.3-RC1


Название впишите какое понравится.

Если хотите выбирать разрешение при загрузке, можно сделать так:

quiet root=/dev/ram0 androidboot_hardware=generic_x86 acpi_sleep=s3_bios,s3_mode vga=ask SRC=/android-2.3-RC1


Сохраните свой menu.lst (:wq) и перезапустите виртуальную машину используя меню VirtualBox.

Теперь можно будет запустить виртуальную машину Android, которая будет выглядеть как телефон.

Несколько советов по использованию виртуальной машины:


Если не видите мышь на экране Android, используйте меню VirtualBox чтобы выключить mouse integration (кнопка Host+I).
Кнопка Windows соответствует кнопке Home в Android.
Esc соответствует кнопке «назад» в Android
F2 соответствует кнопке Menu
F3 соответствует кнопке поиска
Alt+F1 — переключение в консольный режим
Alt+F7 — переключение в режим GUI


Соединение виртуальной машины Android, AVD и Eclipse
Целью была возможность использовать новую виртуальную машину из Eclispe для тестирования и отладки приложений. Чтобы это сработало, нудно настроить сетевое соединение между основной операционной системой (где работает Eclipse) и гостевой VM. Для этого в VirtualBox есть несколько настроек в Network settings:


use bridge mode: он должен работать но для него может потребоваться запуск DHCP в основной ОС
host only network: создаёт виртуальную сеть между основной и гостевой машинами; это самый простой в использовании вариант




Когда сеть будет настроена, перезапустите виртуальную машину, войдите в режим командной строки (Alt+F1) и введите:

netcfg


Это выведет текущий IP виртуальной машины. Обычно это будет что то вроде 192.168.56.101 для гостевой машины, основная получает адрес 192.168.56.1.

На основной машине открываем командную строку, переходим в директорию platform-tools для Android:

./adb connect 192.168.56.101

Это зарегистрирует виртуальную машину в качестве нового устройства:



Теперь можно запускать и отлаживать Ваше приложение прямо из Eclipse.

Как видите, прирост скорости весьма заметный:


Запуск VM занимает 2 секунды вместо 30
Приложения запускаются очень быстро, даже в режиме отладки (нет тормозов, присущих эмулятору ARM)


Добавляем SD карту
Используйте документацию, расположенную по адресу http://www.android-x86.org/documents/sdcardhowto.

Используем файл в качестве SD карты

Из командной строки Android:

dd if=/dev/zero of=/data/sdcard.img bs=1024 count=65536 (64MB image)
losetup /dev/block/loop7 /data/sdcard.img
newfs_msdos /dev/block/loop7

Теперь перезапускаем VM в режиме отладки, перемонтируем раздел в режиме чтение+запись и редактируем menu.lst чтобы добавить один параметр ядра:

SDCARD=/data/sdcard.img

Используем отдельный раздел
Здесь потребуется чуть больше работы.

Для начала придётся создать новый жёсткий диск в VirtualBox и подключить его к виртуальной машине.

Теперь запускаем машину в режиме отладки. Используем fdisk чтобы создать раздел. Когда раздел создан, надо его отформатировать:

newfs_msdos /dev/sdb1


Теперь редактируем menu.lst и добавляем параметр:

SDCARD=sdb1

Впечатления от использования Android_x86 в качестве окружения для тестирования

Использование
Пока виртуальная машина работает как ожидалось, и кроме скорости различий особых я не заметил. Все проекты Android установились правильно. Примеры проектов из SDK собираются и работают нормально.

Единственный заметный глюк: приложение галереи (Cooliris) сломано, я пробовал с последней ночной сборкой образа — стало немного лучше, но проблемы всё равно остаются.

Ещё одна странность: примерно в 10% случаев виртуальная машина не загружается и её приходится перезагружать. Так как загрузка происходит очень быстро, это не особо мешает, но я всё равно постараюсь понять в чём тут дело.

Скорость
Тут различия видны невооружённым глазом.

Вот немного цифр, чтобы было понятнее насколько всё ускорилось:



Эмулятор Android на ARM работает примерно наполовину медленнее чем Nexus One, а Android x86 — примерно в два раза быстрее.",kurokikaze
"
Мы обычно считаем что люди собирают информацию перед принятием важных решений, например — за кого проголосовать, но правда состоит в том что обычно это не так. Не иметь нужной информации — это одно, но люди постоянно дезинформирующие сами себя — совершенно другое дело. Если недавние исследования политологов верны, попытки изменить чью либо позицию часто просто приводят к ее усилению.

В 2003 году в Америке были проведены масштабные исследования. Политологи хотели выяснить — какую информацию население получает о войне в Ираке и терактах 11 сентября, и как ее интерпретирует. Выяснилось, что зрители некоторых каналов (например Fox news) были информированы куда хуже «среднего зрителя». Но это не главный вывод исследователей.

Большининство психологов скажет вам что переубедить взрослого человека невозможно. Можно заставить его согласиться с вами — но не более того. Но что будет если вместо переубеждения просто предоставлять людям факты, и позволить им самим сделать выводы?

Исследования показали печальную картину. Многие люди интерпретируют факты так чтобы утвердить свою точку зрения. Опровержение (даже логическое) неверных фактов переубеждает всего около десяти процентов людей. Остальные держатся за своё мнение дальше.

Эксперимент проводился двумя учеными — (Brendan Nyhan, Jason Reifler, 2003) и заключался в следующем. Испытуемым показывали специально подготовленные новостные блоки с неточностями, которые потом исправлялись в том же «выпуске». В основном исследователи делили людей по политической принадлежности — республиканцы и демократы. Выяснилось что информация противоречащая политическим убеждениям просто не бралась в расчет; попытки противопоставить факты идеологии вели к ее укреплению. Причем это было не просто переубеждение, а настоящий когнитивный диссонанс — людям с помощью логики и фактов доказывали несостоятельность их позиции. В результате из каждых 80 испытуемых, поверивших в неверную информацию, изменили свое мнение только 8.

Эти выводы, в случае подтверждения другими группами ученых, ведут к тревожным заключениям. Логические доказательства ничего не значат для большинства людей, и спорить с человеком имеющим другую точку зрения — попросту бесполезно, какими бы методами вы не пользовались.

Источник: Механический мир",kurokikaze
"На Хабрахабре есть блог Интервью, который позволяет собрать вопросы какому-либо специалисту, и задать их в порядке, определённым голосованием. Новый проект Google Moderator позволяет делать практически то же самое.


Moderator — еще один «20%-ный» проект Google, созданный Taliver Heath для внутреннего использования. Идея проекта проста — пользователи задают вопросы для какой либо встречи или события. Другие пользователи могут голосовать за наиболее важные темы, выстраивая вопросы в порядке значимости. Так же все вопросы может запостить журналист или организатор какой-либо конференции, и пользователи Google выберут лучшие (с их точки зрения, естественно).

Пока Moderator — довольно незатейливый сервис. Любой пользователь может создать «серию», привязанную к событию или интервью. Несколько пользователей могут быть назначены авторами и модераторами вопросов. Пользователи у которых нет аккаунта Google могут добавлять вопросы анонимно, если создатель «серии» разрешит такое. После этого пользователи голосуют за лучшие вопросы, примерно как за статьи на Digg.

«Серии» могут делиться на подразделы, группирующие вопросы по направлениям, и создатель «серии» может комментировать вопросы и отвечать на них. Вскоре будут добавлены дополнительные функции для уже закончившихся событий. В планах — публикация ответов после интервью и голосование за лучшие ответы.",kurokikaze
" Компании, предоставляющие сервисы большим корпорациям или группам людей, часто работают 24/7 по принципу «Follow the Sun» — когда одни часовые пояса только просыпаются, другие уже работают или ложатся спать. Эта волна идёт вокруг земного шара, следуя за восходом Солнца (её «фронт» идет как раз в 8 — 10 часов утра). Это же время — пора пиковой нагрузки на электрические сети.
 
Для компьютеров — и cloud computing в частности — была бы более уместна схема ""Follow the Moon"", когда сервера, обслуживающие конкретные компании, работают на другой стороне земного шара. Ночью намного лучше обстоят дела с охлаждением, и нагрузка на электрические сети не так велика. С распространением Cloud computing управлять потоком вычислений станет гораздо проще (почитайте например про технологию MapReduce).
 
Таким образом, вокруг Земли шли бы две волны — пик использования энергии (на дневной стороне) и пик компьютерных вычислений (на ночной) — в противофазе, а не складываясь, как это сейчас происходит.
 
Разумеется это справедливо в основном для тех систем, где время передачи данных меньше времени вычислений (или передаются уже готовые данные). Пример — вычислительная сеть Google, обрабатывающая страницы или веб-серверы. Там где время передачи критично, лучше использовать другой подход.",kurokikaze
"На прошлой неделе мы выпустили очередное крупное обновление — IntelliJ IDEA 2016.1. Ранее я уже писал подробно о доступных в нем улучшениях, а в этом посте лишь приведу их краткий список, дам ссылки на новые видео, и, конечно, буду рад ответить на ваши вопросы в комментариях.



Среди основных улучшений:


Отладчик
 
Выражения Groovy в Evaluate Expression и Watches теперь можно использовать при отладке Java кода
Более удобная отладка нескольких потоков
Предупреждения при несовпадении исходного кода с запущенной копией

 
Системы контроля версий
 
Поддержка Git worktrees
Более удобный мердж и сравнение, благодаря подсветке изменений на уровне слов

 
Редактор
 
Сдвиг выражений вправо и влево
Автоматический импорт статических методов и констант
Поддержка языков, записываемых справа налево (например, арабского и иврита)

 
Gradle
 
Поддержка custom source sets: теперь каждый source set представлен отдельным модулем и может иметь собственные зависимости (в результате было исправлено огромное количество проблем)
Автоматическая конфигурация EAR-артефактов

 
Java 8
 
Inline Method и Change Signature трансформируют method references в лямбда выражения
Инспекции, проверяющие корректность использования method references, лямбда-выражений и типа Optional
Инспекции, помогающие мигрировать код, использующий FluentIterable, Function, Optional и Predicate из библиотеки Guava, на соответстующий API Java 8

 
Kotlin
 
Поддержка Kotlin 1.0
Плагин Kotlin Edu для интерактивного изучения Kotlin

 
Scala
 
Автодополнение теперь учитывает тип символов, контекст и историю их использования. 
Автодополнение для выражений pattern matching теперь подсказывает имена свойств case-классов.

 
JavaScript
 
Улучшенные подсказки для ECMAScript 6, TypeScript и AngularJS 2
Удобная отладка асинхронного кода

 
Фреймворки Spring
 
Расширена функциональность подсказок для Spring Boot
Улучшенна поддержка Spring MVC
Исправлено много известных проблем

 
Thymeleaf
 
Подсказки для пользовательских диалектов
Поддержка Thymeleaf 3.0

 
Android Studio 1.5
 
Профилировщик утечек
Новые проверки lint

 
Docker
 
Поддержка Docker Machine
Отдельное окно (tool window)
На правой панели теперь отображаются логи и элементы интерфейса для управления переменными среды и привязками портов

 












Кроме того, вся плафторма IntelliJ мигрировала на Java 8: для разработки плагинов теперь можно использовать Java 8.

Начиная с IntelliJ IDEA 2016.1, схема версионирования всех продуктов JetBrains Toolbox меняется. Теперь вместо одного большого релиза в год планируется выпускать несколько равноценных релизов. Подробнее о том, почему и как именно новое версионирование будет работать, можно прочитать здесь.

Скачать новую версию IntelliJ IDEA можно на сайте JetBrains.",andreycheptsov
 ,Ekamelev
"Не знал, как опубликовывать подобный пост. Вроде бы это и перевод, а вроде бы и переводом назвать можно с натяжкой. В общем, в фэйсбуковском акшуровском сообществе лежит полезный топик со списком горячих клавиш. Я убрал из списка те горячие клавиши, о которых все уже и так знают, а также добавил перевод к тем, которые остались. В своё время знание этого материала увеличило мою производительность при работе в Axure минимум на 20%. Удачи в работе.

Быстрые команды
Generate Protoype (Сгенерировать прототип): F5
Generate Specification (Сгенерировать спецификацию): F6
Regenerate Current Page to Prototype (перегенерировать текущую страницу в прототип): Ctrl+F5

Рабочая область
Next Page/Master (Следующая страница/мастер): Ctrl+Tab
Previous Page/Master (Предыдущая страница/мастер): Ctrl+Shift+Tab
Close Page/Master (Закрыть страницу/мастер): Ctrl+W
Scroll Right (Скроллинг вправо): Shift + Mouse wheel down
Scroll Left (Скроллинг влево): Shift + Mouse wheel up
Zoom In (Увеличить масштаб): Ctrl+Mouse wheel up
Zoom Out (Уменьшить масштаб): Ctrl+Mouse wheel down

Редактирование виджетов
Group (Сгруппировать): Ctrl+G
Ungroup (Разгруппировать): Ctrl+Shift+G
Bring to Front (Поместить в самый верхний слой): Ctrl+Shift+]
Send to Back (Отправить в самый нижний слой): Ctrl+Shift+[
Bring Forward (Перенести на один слой вверх): Ctrl+]
Send Backward (Отправить на один слой вниз): Ctrl+[
Align Left (Выровнять по левому краю): Ctrl+Alt+L
Align Right (Выровнять по правому краю): Ctrl+Alt+R
Align Center (Выровнять по центру по вертикали): Ctrl+Alt+C
Align Top (Выровнять по верхнему краю): Ctrl+Alt+T
Align Middle (Выровнять по центру по горизонтали): Ctrl+Alt+M
Align Bottom (Выровнять по нижнему краю): ctrl+Alt+B
Distribute Horizontally (Равномерно распределить по горизонтали): Ctrl+Shift+H
Distribute Vertically (Равномерно распределить по вертикали): Ctrl+Shift+V
Increment Footnote (Увеличить порядковый номер ярлыка): Ctrl+Shift+Q
Decrement Footnote (Уменьшить порядковый номер ярлыка): Ctrl+Q
Lock Location & Size (Заблокировать позицию и размер): Ctrl+K
Unlock Location & Size (Разблокировать позицию и размер): Ctrl+Shift+K
Edit Location & Size (Редактировать позицию и размер): Ctrl+L",Ekamelev
"Пока я писал о проектировщиках и прототипах, внезапно выяснилось, что многие читатели не представляют, о чём идёт речь. Поэтому сегодня я решил рассказать о том, что такое интерактивный прототип, сделанный в Axure (произносится как «Экшер», а я привык говорить «Акшура»). И не только рассказать, но и показать.

Если совсем грубо, то интерактивный прототип — это набор связанных друг с другом html-макетов. Только работали над этими макетами не дизайнер с верстальщиком, а проектировщик в специализированной программе, позволяющей сделать эту работу в разы быстрее. В чём будет различие в результате? Прототип, подготовленный проектировщиком, в отличие от макетов, подготовленных верстальщиком, не предназначен для разработки. Он призван очень быстро и наглядно продемонстрировать то, что исполнитель будет воплощать в жизнь на следующих этапах. Это всё равно, что трёхмерная модель готовящегося к строительству здания. На её создание уйдёт гораздо меньше времени, чем на постройку, и она позволит виртуально побродить по будущему проекту.

Выгоды от прототипов сложно переоценить.


Простота и скорость создания. Первую версию прототипа хороший проектировщик может продемонстрировать через несколько часов после формализации задачи;
Хорошо сделанный прототип специально предназначен для последующих правок. Взглянув на получившийся результат, и клиент, и исполнитель, с помощью быстрых итераций верно пойдут к желаемой цели;
Это позволяет ещё до написания функциональной спецификации или технического задания очень точно договориться о том, что должно получиться на выходе. А документы только закрепят эту договорённость;
Благодаря наглядности прототипа, вероятность правок на следующих этапах создания сайта сводится к нулю. А с учётом того, в какие суммы могут обойтись правки на этапе программирования, этап проектирования ежедневно экономит огромное количество средств людям во всём мире.


Специально для Хабра я записал процесс создания простого типового прототипа. Я его взял из головы, целью было продемонстрировать, с какой скоростью проделывается подобная работа. Из видео можно понять, что за 20 минут опытный проектировщик может сделать уже что-то, что можно обсудить и дать обратную связь. Плюс видно, что все сквозные и списковые элементы сделаны с помощью мастеров, что позволит, редактируя один мастер, вносить изменения в весь прототип. Не нравится название пункта меню в шапке? Исправляем одно слово, и это исправление применяется ко всем страницам. Хочется изменить внешний вид отдельной работы в списке портфолио — то же самое. Редактируем отдельный мастер, а затем выравниваем результат на странице со списком работ.

Вы также заметите, что в ролике я пользуюсь вторым прототипом, в котором собраны основные типовые элементы интерфейса. Об этом я постоянно твержу участникам своей группы по Axure — заводите себе подобные «мега-прототипы» и сохраняйте в них все те вещи, которые явно повторяются от прототипа к прототипу. Это увеличит вашу скорость работы. И это удобнее, чем открывать разные свои старые прототипы в поисках нужного куска интерфейса.

Как я уже говорил, сгенерированный прототип представляет собой набор html-файлов, которые можно выложить либо на специальном сервисе, предоставляемом самой Axure, либо на любом своём хостинге. Клиенту лишь нужно будет дать ссылку. Вот ссылка на прототип, который я сделал в ролике:

http://share.axure.com/OHB5ZQ

Не знаю, готов ли тот хостинг к Хабраэффекту, но готов рискнуть.

Попробую предвосхитить некоторые ваши вопросы.


Axure предназначена не только для проектирования сайтов, но и подходит для мобильных приложений, десктопных приложений и других интерфейсов;
Позволяет делать адаптивные прототипы;
Не ограничивает проектировщика в создании интерактива и динамики на страницах;
Может генерировать прототипы не только в виде html-файлов, но и в виде набора картинок;
Может придать прототипу вид скетча одним нажатием кнопки.


Ну вот и видео. Использовалась бета-версия Axure RP Pro 7. Музычка ещё обрабатывается, скоро заработает.

",Ekamelev
" Многие знакомы с выступлением Алекса Мартелли (Alex Martelli) на Google Tech Talk под названием Python for Programmers (слайды) — в нём он чётко и лаконично рассказывает основы Питона для тех, кто уже умеет программировать, например на C, С++ или Java. По его презентации я сам учил Питон четыре года назад, перед тем как начать использовать его в преподавании программирования на матмехе СПбГУ.

Сегодня хочу представить вам интерактивный вариант этой презентации — онлайн мини-курс Python for Programmers, созданный и опубликованный под лицензией Creative Commons с разрешения Алекса. Мы добавили к его презентации интерактивных упражнений, обновили материал с Python 2.5 до Python 3.3, добавили информацию по актуальным библиотекам и разнице между 2 и 3 версиями Питона.

Также интересный момент платформы, на которой размещён курс: проходя урок, вы тут же получаете доступ к его редактированию. Поэтому, если вы заметили опечатку, либо хотите что-то добавить, то милости просим улучшать мини-курс. Курс пока на английском, но любой может создать курс и на других языках, в том числе на русском.",vyahhi
"Случалось ли Вам играть в игру вроде StarCraft или Supreme Commander и получать сообщение об ошибке вроде “Обнаружена рассинхронизация”, за которым следует закрытие игры? Хотите узнать отчего так происходит? Это наследие архитектуры игрового движка, часто используемой стратегиями в реальном времени.1

Мой опыт в этой области происходит из работы с движком Supreme Commander в студии Gas Powered Games. В период бета тестирования в Starcraft и Warcraft 3 тоже были проблемы с синхронизацией, так что можно сказать что в целом они работают так же. Для простоты я буду говорить именно о движке Supreme Commander. Нахождение сходства с другими играми оставлю как упражнение для читателя :) 

Требования

Во-первых, каковы требования к нашей игре? Чтобы дать Вам это понять, вот ролик для первой части Supreme Commander (2006 год).



Игра должна поддерживать 8 игроков в сетевой игре через Интернет, с сотнями юнитов в каждой армии. Это несколько тысяч юнитов в одной игре. Ёшкин кот. Типичный клиент-серверный подход для шутеров здесь явно не годится. С таким числом юнитов он потребует гораздо большей пропускной способности, чем доступно большинству игроков.

Так как же можно подступиться к задаче?..

Синхронная архитектура движка

… С полностью синхронной архитектурой с одновременным шагом! В синхронном движке
каждый клиент выполняет один и тот же код с одной и той же скоростью. Обдумайте это немного. В игре Supreme Commander на 8 игроков каждый игрок хранит одинаковое состояние игры и выполняет одинаковый код. Вместо передачи информации о состоянии юнитов (позиция, здоровье и т.п.) по сети можно передавать только команды, вводимые игроками2. Если у всех игроков одинаковое состояние игры и обрабатывается одинаковый ввод, полученное состояние тоже должно быть одинаковым.

По тому же принципу действуют запускаемые повторы игр, в том числе и в шутерах. Вам не случалось удивляться, почему размер файлов реплеев такой маленький? Это потому что такой файл должен хранить только пользовательский ввод. Потом мы просто запускаем игру, скармливаем ей ввод из файла повтора и получаем тот же самый результат что и при оригинальной игре. Именно поэтому файлы повторов часто перестают работать3 при обновлении игры и именно поэтому их часто нельзя перематывать назад4. Кстати, по той же причине многие стратегии не поддерживают подключение новых игроков по ходу игры — для подключения нового игрока ему должно быть передано полное состояние игры. Для игры с тремя тысячами юнитов это займет слишком много времени.

Уровни

Посмотрите видео в начале, если ещё не успели. Как вы думаете, с каким количеством кадров в секунду идёт игра? Правильный ответ — 10 fps. «Постойте, что? Она выглядит гораздо более плавно!», скажете Вы! Да — и одновременно нет. Вообще говоря, игра использует одновременно две частоты.

Движок SupCom использует два уровня — симуляции и пользовательский. Уровень симуляции работает на фиксированной частоте 10 кадров в секунду. Именно его можно считать “настоящей игрой”. Все юниты, все AI и вся физика обновляются в функции SimTick, которая запускается 10 раз в секунду. Каждый SimTick должен отработать менее чем за 100 мс, иначе игра будет идти в замедленном темпе. В сетевой игре, если какой то игрок не успевает полностью обработать SimTick за 100 мс, все остальные игроки вынуждены остановиться и ждать отстающего. 

Пользовательский уровень работает на полной частоте кадров. Этот уровень можно считать исключительно графическим. Интерфейс пользователя, рендеринг, анимация и даже позиция юнитов могут рассчитываться с частотой 60 fps. Каждый UserTick обновляется во время delta, которое используется для интерполяции состояния игры до промежуточного значения (к примеру, промежуточные позиции юнитов). Именно поэтому игра может выглядеть и играться плавно, хотя основное ядро движка работает на довольно низкой частоте.

Детерминизм

“Постойте ка минутку!”, воскликнет умный читатель. “Если каждый игрок независимо обновляет состояние игры, это должно означать что симуляция игры полностью детерминирована?” Так и есть. Сложно ли этого достичь? Да. Особенно в современном многопоточном мире.

Много неприятностей разработчикам движка доставляют числа с плавающей запятой. Вместо того чтобы описывать эту тему подробно, я дам ссылку на фантастический пост Гленна Филдера — Floating Point Determinism.

В комментариях к нему Elijah обсуждает именно Supreme Commander. Если заставить процессор чётко следовать стандарту IEEE754, это решает большинство проблем. Но такое решение означает снижение производительности и игра не может выполнять вычислений с неопределйнным результатом (впрочем этого и так не следует делать).

Внутренние задержки

У синхронной многопользовательской игры есть определённые минусы. Кроме сложности создания огромного полностью детерминированного симулятора существует задержка обработки ввода. Я уже писал как каждый пользователь в многопользовательской игре обновляет одинаковое состояние игры с использованием одинакового ввода. Это означает что любой новый ввод будет обработан только когда все клиенты согласятся в какой шаг симуляции его обрабатывать!

Например, три игрока — A, B и C — запускают SimTick[1]. В это время игрок A даёт юниту команду атаковать. UI сразу показывает отклик, т.к. UserTick отрабатывает 60 раз в секунду. В однопользовательской игре эта команда будет обработана в SimTick[2] (задержка 0-100 мс). Однако, все три игрока должны обработать команду в одном и том же запуске SimTick чтобы получить одинаковый результат. Вместо того чтобы пытаться обработать команду в SimTick[2], игрок A отправляет сетевые пакеты игрокам B и C с данными для выполнения в SimTick[4] (задержка 200-300 мс). Это даёт всем игрокам время получить команду. Игра может сорваться если информация о вводе не получена или не подтверждена вовремя. Я не знаю какой именно механизм использовался для этого в SupCom, но я обновлю этот пост если выясню. Конкретное число выполнений SimTick, через которое надо обработать ввод, определяется динамически с использованием топологии p2p5.

Задержка от клика пользователя до реакции юнита всегда будет составлять как минимум 0-100 мс (следующий SimTick). Это может быть замаскировано несколькими способами. Интерфейс обычно отзывается сразу — что нибудь мигает, раздаётся соответствующий звук: “Жизнь за Аюра!” или “Зуг Зуг”.

В однопользовательской игре это нормально, но в многопользовательском сражении задержка начинает становиться заметной, достигая нескольких сотен миллисекунд. Я всегда хотел поэкспериментировать с мгновенным ответом анимацией в UserTick. Например, если вы даёте команду двигаться, пользовательский уровень начинает медленно двигать юнит и “подмешивает” движение в направлении точки, указанной симуляцией, когда команда будет на самом деле выполнена. Это может оказаться очень полезным в более “дерганных” играх вроде DOTA или Demigod. Есть правда определённые крайние случаи, которые придётся обрабатывать особо, поэтому я так толком и не взялся за реализацию. Если кто то такое делал, отпишитесь в комментариях. :)

Рассинхронизации — Баги из Ада

Одни из самых сложных багов во Вселенной — баги рассинхронизации. Это довольно злобные сволочи. Основное предположение движка — что все игроки полностью синхронизированы. Что если это не так? Что случается если симуляции у разных игроков расходятся? Хаос. Гнев. Страдание6.

В SupCom всё состояние игры хешируется раз в секунду. Если у каких то клиентов хеши не совпадут — концерт окончен. Game over. Конец. Выскакивает окошко с сообщением “Ошибка синхронизации” и приходится выходить из игры. Что то в результатах SimTick не совпало и теперь состояния игры различаются. Пути симуляций разошлись и дальше будет только хуже. Восстановительного механизма тут не предусмотрено.

Рассинхронизации это обычно результат ошибки программиста. Рассинхронизация может воспроизводиться в 5% игр, продолжающихся более 60 минут. Нахождение и исправление такой ошибки обычно включает в себя двоичный поиск в хешах состояния памяти, распечатываемых в консоль при игре. При рассинхронизациях с низким шансом воспроизведения это приводит к огромному количеству сообщений в консоли пока полдюжины машин просчитывают симуляцию так быстро, как только возможно, ожидая пока она сломается. Если этого Вам недостаточно, добавлю что одна из самых частых причин рассинхронизации — необъявленная переменная.

История Полубога

Большинство моей работы над движком SupCom было сделано при работе над Demigod, в котором использовалась модифицированная версия движка.



В самом конце разработки долгое время присутствовал редко повторяющийся баг рассинхронизации, который был назначен на меня. В Demigod по картке бегала толпа мелкого пушечного мяса. И в очень редких случаях позиции отдельных леммингов на разных машинах различались на несколько сантиметров. Звучит безобидно, но по сути это было тем взмахом крыльев бабочки, с которых начинается ураган проблем.

Я точно помню что не был уверен, смогу ли пофиксить этот баг, и наш ведущий программист сказал “Я знаю, ты сможешь это починить. Я в тебя верю.” Никакого прессинга, правда? Каждое утро у нас было десятиминутное совещание и каждый день мой отчёт был короток и прост: “охота на рассинхронизацию”. После почти недельного спуска в пучины безумия я нашёл причину ошибки. Если Вы смотрели трейлер, Вы видели у некоторых героев способность подбрасывать противников в воздух. Когда огромный шагающий замок опускает свой молот, юниты вокруг разлетаются. Баг был в одном из указателей в системе поиска пути, который указывал в никуда, из за чего после приземления юнит просто исчезал.

Но для воспроизведения рассинхронизации этого было недостаточно. Для начала, юнит должен был быть убит одним из нескольких специальных умений. Это удаляло его из системы поиска пути и оставляло висящий указатель. Диспетчер памяти перемещал память удалённого компонента в связанный список свободных областей, не изменяя её содержимого. Потом, до того как юнит приземлялся, должно было произойти новое выделение памяти. Это выделение должно было затронуть тот блок, который был недавно удалён. Только после этого происходила рассинхронизация. Установка указателя в NULL решала проблему.

Финальные мысли

Это был очень короткий обзор синхронного движка, используемого в Supreme Commander. Я знаю что многие старые игры были устроены примерно так же. Последнее поколение наверняка применяет какие то новые трюки, в особенности для борьбы с задержкой ввода. Я знаю что рассинхронизации есть и в StarCraft 2, так что он скорее всего устроен похоже. Другие игры, на которые можно посмотреть это Heroes of Newarth или League of Legends. Они не так сложны как SupCom, и играются довольно плавно, но я не разбирал их и не знаю какие методы они для этого используют.


Halo использует синхронную модель с одновременным шагом в режимах Campaign Co-op и Firefight
В SupCom ввод обрабатывается как команды группам юнитов. Команды движения, атаки, защиты, использования способностей и т.п.
Старые файлы повторов могут поддерживаться если есть возможность запустить старый код со старыми данными
Перемотка в Halo была сделана с помощью “точек сохранения”, хранящих состояние игры на определённый момент. Плавно перематывать назад было нельзя, но можно было перейти на предыдущую точку сохранения и двигаться оттуда вперед. ЕМНИП.
SupCom полностью использует сетевую архитектуру peer-to-peer
Молния Силы, к сожалению, не прилагается
",kurokikaze
"В пятницу, 19 февраля, мы выпустили бета-версию IntelliJ IDEA 16. Учитывая то, что с момента выхода IntelliJ IDEA 15 прошло немногим более трех месяцев, вы будете приятно удивлены тем, что мы успели сделать за это время. Мы приглашаем вас скачать свежую версию прямо сейчас и самостоятельно попробовать все улучшения, о самых главных из которых я с удовольствием расскажу далее. 



Отладчик

Для Java проектов в Evaluate Expression и Watches теперь можно писать выражения и на Groovy, обладающим более компактным синтаксисом, что делает более удобной, например, работу с коллекциями. 



Если текущий поток заблокирован другим остановленным потоком, то IntelliJ IDEA предложит его разблокировать. 

Ранее, по нажатию Resume, возобновлялись все запущенные потоки. Теперь можно изменить это поведение, включив опцию Resume only the current thread.

Теперь IntelliJ IDEA предупреждает всякий раз, когда замечает, что исходники не соответствуют выполняемому коду. Это помогает избежать ошибок и сэкономить время.



Интеграция с Git и другими VCS

IntelliJ IDEA теперь поддерживает git worktrees – на случай если вы хотите работать с несколькими ревизиями репозитория одновременно и сэкономить место на диске.

Для Git в Branches popup появились две новые команды: Checkout with Rebase и Rename. Checkout with Rebase позволяет сэкономить время, если вы хотите выполнить эти две операции одну за другой.

Инструменты Diff viewer и Merge dialog стали удобнее за счет подсветки изменений на уровне конкретных частей строки.



Редактор

В редакторе появился новый инструмент: Move Element Right/Left (Alt + Ctrl + Shift + Arrows или Alt + Cmd + Shift + Arrows для OS X). С его помощью можно менять местами аргументы методов, элементы массивов и атрибуты тегов.



Мы добавили авто-импорт для статических методов и констант (ранее он работал только для классов). Опция Add unambiguous imports on the fly теперь также работает и для статических методов и констант.



Редактор поддерживает арабский, иврит и другие языки, где символы следуют справа налево.



В настройках стилей появилась опция для автоматического добавления пробела в начало комментариев.

Java 8

При вызове Inline method или Change signature, ссылки на метод (method references) преобразуются в соответствующие лямбда выражения. 

IntelliJ IDEA предупредит, если вы вызываете метод get() на java.util.Optional не проверив перед этим с помощью isPresent() содержится ли там значение. 



Добавлено много инспекций на использование функциональных интерфейсов, лямбда выражений и Optional. 



Если вы используете Guava, IDE предложат Вам заменить FluentIterable, Function, Optional и Predicate их аналогами из Java 8.



Быстрый поиск

Быстрый поиск (speed-search) теперь доступен в окне Terminal, также был улучшен поиск во всплывающем окне Show usages и в окне Find usages. 



Интерфейс Log viewer для Git и Mercurial теперь выглядит чуть приятнее.

Gradle

Теперь модель проекта IntelliJ IDEA полностью совпадает с моделью Gradle: каждый source set представлен в IntelliJ IDEA как отдельный модуль, и поэтому может иметь собственные зависимости (classpath). Это позволило решить огромное количество проблем. 

IntelliJ IDEA научилась автоматически импортировать EAR-артефакты из билд-скриптов.

Spring

Для Spring Boot проектов добавленны подсказки внутри файлов YML и banner.txt. Аннотация \@SpringApplicationConfiguration учитывается при создании конфигураций запуска для тестов. Для пользовательских свойств конфигурации теперь работает Find usages. 

Поддержка Spring MVC сильно улучшилась за счет поддежки аннотации \@EnableWebMvc. 



Исправленнно много старых проблем.

Thymeleaf 

Thymeleaf 3 Beta поддеживается “из коробки”. 



Добавлена поддержка пользовательских диалектов: для них теперь доступны те же посказки, что и для стандартных.



Исправленно много проблем с поддержкой Thymeleaf 2. 

Android

Профайлер утечек и новые инспекции, появившиеся в Android Studio 1.5, теперь доступны и в IntelliJ IDEA. 



Kotlin

Да-да, если вы еще не в курсе (или не верите своим глазам), неделю назад состоялся релиз Kotlin 1.0.

Kotlin совместим с Java 6, 7, 8, Android, и любыми Java фреймворками (такими как Java EE, Spring) и билд-системами (Gradle, Maven). Kotlin можно использовать в существующих Java проектах. С версии 1.0 Kotlin обратно-совместим со своими предыдущими версиямми. 

IntelliJ IDEA 16 включает плагиин для Kotlin 1.0.

Ранее на Хабре уже была проведена первая сессия вопросов и ответов. 

Scala

Работая над Kotlin, мы не забываем и о Scala: комплишен претерпел ряд улучшений. Во-первых, порядок предлагаемых вариантов теперь учитывает такие факторы, как тип символа, историю его использования и контекст. Предпочтение отдается локальным переменным, затем аргументам, затем полям класса, затем методам и т.д. Если в данном контексте ожидается тип, IntelliJ IDEA учитывает это в порядке предложенных вариантов. 



Во-вторых, появился комплишен для выражений pattern matching c подсказкой имен свойств case-классов.



ES6 и TypeScript

Поддержкка ES6 и TypeScript становится лучше с каждым днем. Добавлены рефакторинги Create method, Extract method, Inline method и Introduce field и интеншены Make class abstract, Make public/private и Remove modifier. Неиспользуемые import-выражения теперь подсвечиваются и убираются с помощью Optimize imports. Во время набора кода import-выражения добавляются автоматически.



Добавленна поддерджка TypeScript 1.8.

AngularJS

Для AngularJS 2 добавлен комплишн директив, переменных шаблонов, пользовательских обработчиков событий, путей в templateUrl и styleUrls полях, а также в event, data, и property bindings.



Также IntelliJ IDEA понимает компоненты, определенные с помощью module.component(), добавленного в AngularJS 1.5.

JavaScript отладчик

С новым отладчиком для Chrome гораздо лечге отлаживать асинхронный код и код с лямбда выражениями (arrow functions). Для асинхронного кода, стек фреймов включает место вызова асинхронного кода. При добавлении точек остановки, теперь можно выбрать конкреное лямбда выражение.

Также можно отлаживать main и render процессы Electron приложений.

JSON

Кроме этого теперь IntelliJ IDEA поддерживает JSON schema и предлагает на его основе комплишн внутри JSON файлов (tsconfig.json, .eslintrc, .babelrc и многих других).



Работа с базами данных

После релиза DataGrip мы продолжаем улучшать поддержку баз данных и инструменты для работы с ними. Добавлены поддержка некоторых операторов PostgreSQL 9.5 (hstore ?) а также User Defined Table и Column Types для SQL Server. С помощью Create/Modify Table теперь можно редактировать комментарии для колонок (если это поддерживается базой данных). 



Если вы хотите удалить данные из таблиц, вам поможет новый инструмент: Truncate, который позволяет очень быстро и вне транзакции удалить данные из одной или более таблиц.



Docker

И наконец, Docker стал отдельным окном (tool window) и его интерфейс понемногу становится лучше и лучше: теперь правая панель отображает логи и позволяет редактировать настройки контейнеров. Образы и контейнеры теперь показываются раздельно и более понятно. Также мы поддержали Docker Machine.



Если вы хотите чтобы я написал о каких-то из новых фич отдельно (или о каких-то старых фичах), – просите в комментариях, и я с удовольствием напишу. Также буду рад ответить на любые вопросы.",andreycheptsov
"Всем привет!

Меня зовут Андрей Чепцов, я работаю в JetBrains менеджером по маркетингу IntelliJ IDEA. JetBrains разрабатывает инструменты для программистов: IntelliJ IDEA, ReSharper, TeamCity, Kotlin и другие. Хотя я отвечаю за маркетинг продуктов, моя должность имеет очень опосредованное отношение к маркетингу в традиционном понимании этого слова. Мы уважаем разработчиков и не опускаемся до манипулятивного маркетинга. Лучший маркетинг наших продуктов – всегда честный рассказ о том, как они работают и как их использовать. Честность помогает заслужить доверие.

Сейчас мы ищем в команду IntelliJ IDEA технического евангелиста, который бы занимался созданием обучающих материалов: документации, уроков, примеров и статей для пользователей IntelliJ IDEA и просто Java-программистов. Тесно общаясь с разработчиками и пользователями IDE, технический евангелист берет на себя ответственность за написание и поддержку документации по IDE. Это означает ежедневную работу с технологиями и инструментами, поддерживаемыми в IDE, для создания примеров, инструкций и уроков.

У нас нет строгих требований, однако мы считаем, что евангелист должен иметь опыт разработки на Java, неплохой английский, и ему должно быть интересно заниматься обучением. Поскольку разработка связана с большим количеством технологий, важно не только учить других, но и самому постоянно изучать и пробовать новое.

В JetBrains нет строгой иерахической структуры. Чаще всего каждый, работая в команде, самостоятельно определяет круг своих задач, их важность и уровень собственной ответственности. Возможно, такая структура подходит не всем, но у нас в JetBrains она работает.

UPDATE: Вакансия открыта в Санкт-Петербурге, Россия.

Если мне удалось вас заинтересовать, мы ждем ваше письмо с рассказом о себе по этому адресу job@jetbrains.com. Я буду рад ответить на вопросы в комментариях и в личных сообщениях.",andreycheptsov
"Чтобы погрузиться в относительно новую для себя научную область, существует огромное количество самых разных мероприятий и проектов. В последние годы их количество и форматы значительно расширились: это открытые лекции и целые научные фестивали, онлайн-курсы и онлайн-программы, летние стажировки и школы, неформальные лекции в барах, опенсорсные проекты и так далее.

Уже пять лет Институт биоинформатики собирает ученых-биоинформатиков и студентов со всей страны и в течение недельной интенсивной учебы за городом на летней школе направляет биологов, медиков, информатиков и математиков в сторону биоинформатики — до сих пор очень динамично развивающейся области. С 2013 года мы записываем лекции на видео и собираем подборку полезных материалов для тех, кто не участвует в мероприятиях, но хотел бы развиваться в этой области. 
 
Программа школы разрабатывается таким образом, чтобы объединить мир биологии и программирования и стимулировать не только развитие профессиональное развитие, но и междисциплинарное общение.
 

 
Мы продолжаем делиться архивом видеозаписей лекций летних школ. Лекции, которые можно смотреть без дополнительной подготовки, отмечены «*». Просмотр остальных лекций требует знаний в области биологии и программирования. Под катом описание содержания лекций, ссылки на слайды и видеозаписи.

Статистика в биоинформатике



Статистический анализ биомедицинских данных (Михаил Пятницкий, НИИ биомедицинской химии им. Ореховича)
Видео | Слайды
 
Лекция посвящена практическим аспектам статистического анализа '-омиксных' данных. В частности, описаны методики разведочного анализа, распознавания образов, кластерного анализа. 
 
Как работать с данными и не чувствовать беспомощность? (Никита Алексеев, George Washington University)
Видео | Слайды
 
С одной стороны, естественные науки предоставляют огромные объемы данных и задают самые разные вопросы относительно этих данных. С другой стороны, статистика располагает множеством методов для решения таких вопросов. Такое изобилие, естественно, привносит с собой сложности – как выбрать метод, который подходит для решения именно вашей проблемы, как учесть все нюансы и не запутаться во всем этом. Универсального рецепта нет. В лекции обсуждаются различные подходы к этой проблеме.
 
Как правильно задать вопрос знакомому статистику (Никита Алексеев, постдок, George Washington University) 
Видео | Слайды

Лекция будет полезна всем, кто сталкивается с проблемами статистической обработкой данных. Какие для них возможны решения, какие возникают трудности, и что спрашивать у статистика, с которым удалось начать сотрудничать, чтобы получить максимальную пользу для своего проекта.
 
Иммуноинформатика


 Анализ репертуаров иммунных рецепторов (Вадим Назаров, Высшая Школа Экономики, Институт Биоорганической Химии РАН)
Видео | Слайды
 
Применение NGS технологий в иммунологии позволило очень глубоко секвенировать репертуары клеточных рецепторов. Но на полученные данных, к сожалению, нельзя просто смотреть и получать инсайты – необходимо разработать различные методы анализа репертуаров. О том, какие методы были разработаны, насколько они адекватны, куда движется этот мир, и где в нем можно себя приложить.
 
 Иммуноинформатика: алгоритмический подход к решению прикладных задач иммунологии (Яна Сафонова, Центр алгоритмической биотехнологии, СПбГУ)
Видео | Слайды
 
Анализ адаптивной иммунной системы является важнейшим этапом при разработке лекарств, оценке эффективности лечения, изучении различных заболеваний. Современные NGS технологии позволили делать глубокое сканирование репертуаров антител и Т-клеточных рецепторов, что способствовало развитию новой области биоинформатики: иммуноинформатика. 

Иммуноинформатика решает задачи, имеющие применение в различных иммунологических направлениях: мониторинг развития иммунного ответа, анализ эволюционного развития репертуаров, понимание разнообразия адаптивной иммунной системы. В рамках лекции рассматриваются задачи современной иммуноинформатики и обсуждаются перспективы ее развития.
 


 Молекулярное баркодирование, анализ репертуаров Т-клеточных рецепторов и антител (Дмитрий Чудаков, Заведующий лаборатории геномики адаптивного иммунитета в Институте биоорганической химии РАН, руководитель группы адаптивного иммунитета в CEITEC MU, Masaryk University)
Видео | Слайды
 
Высокопроизводительное секвенирование интересующих фрагментов генома (targeted resequencing) потенциально позволяет проводить глубокий анализ, выявляющий присутствие в образце редких подвариантов последовательностей, а также дающий полную картину о структуре разнообразия последовательностей в образце.

Однако, «бутылочные горлышки» на стадиях получения и приготовления образцов для массированного секвенирования, количественные искажения, связанные со стохастической природой ПЦР, неравной эффективностью амплификации и секвенирования различных последовательностей, а также накопление ошибок ПЦР и собственно секвенирования, существенно ограничивают возможности такого анализа.

Уникальное молекулярное баркодирование (unique molecular bacrodes, unique molecular identifiers, UMI) позволяет радикально повысить качество секвенирования, в том числе протяженного, эффективно корректировать накопленные ошибки без потерь реального разнообразия вариантов, устранить количественные искажения, а также практически идеально нормировать образцы для сравнительного анализа.

В лекции рассказывается о том, как работают подходы на основе молекулярного баркодирования с примерами из личного опыта работы с репертуарами рецепторов иммунных клеток – Т-клеточных рецепторов и антител. 
 
Системная биология
 Введение в системную биологию (Илья Серебрийский, Fox Chase Cancer Center, USA)
Видео | Слайды
 
В лекции дается общее представление представление о системных свойствах биологических объектов. Краткое описание основных составляющих системной биологии. Интерактомика, построение моделей. Некоторые достижения системной биологии (выборочно, в основном в области онкологии) и соответствующие общедоступные ресурсы (TCGA/cBioPortal, CCLE)
 


 Вычислительная системная биология для изучения и лечения рака (Андрей Зиновьев, Institut Curie)
Видео | Слайды
 
Вычислительная системная биология рака является применением общих подходов системной биологии, связанных с системным сбором полногеномных данных и их математическим моделированием, для изучения канцерогенеза, прогнозирования и разработки новых методов лечения раковых заболеваний. Данных подход связан с рядом особенностей таких как учет быстрой эволюции биологической системы в условиях геномной и эпигеномной нестабильности, взаимодействия с клетками нормальной стромы и воздействия различных факторов межклеточной среды, разнообразия и качества клинического материала. В лекции кратко описаны несколько характерных подходов к анализу и моделированию данных в биологии рака. В частности, принципы формализации и использования в моделировании знания о биохимии рака (Атлас Сигнальных Сетей в Раке), подходы к деконволюции полногеномных молекулярных профилей в раке, построение дискретных математических моделей с целью предсказания эволюции раковой опухоли.
 
 Проблема воспроизводимости результатов в системной и не только биологии (Илья Серебрийский, Fox Chase Cancer Center, USA)
Видео | Слайды
 
Проблема воспроизводимости результатов – ключевая для современной биологии, особенно для системной биологии. Лекция посвящена обзору нынешнего положения дел, основные проблемы воспроизводимости, их причины. Ответственность организаций, научных журналов, исследователей. Особенности проблемы в системной биологии. Основные направления разрешения проблемы воспроизводимости.
 
Разное
 «Мотивы» – паттерны в геномных последовательностях (Иван Кулаковский, ИМБ РАН; ИОГен РАН)
Видео | Слайды
 
С точки зрения молекулярной биологии в лекции обсуждается регуляция активности транскрипции генов у высших эукариот и роль регуляторных белков-транскрипционных факторов. С точки зрения биоинформатики лектор рассказывает, как компьютерное представление мотивов – характерных паттернов в геномных текстах – помогает распознать регуляторные сигналы, узнаваемые транскрипционными факторами в ДНК. С точки зрения информатики рассматривает проблему построения модели 'мотива' как задачу поиска локального сходства множества последовательностей.
 


 Аннотация промотерных последовательностей (Татьяна Татаринова, University of Southern California)
Видео | Слайды
 
В лекции затрагиваются вопросы закономерности и свойств промотерных последовательностей. Мотивы и метилирование промотеров. Алгоритмы предсказания и анализа промотерных последовательностей. Применение в биотехнологии.
 
Предсказание происхождения на основании Admixture Алгоритмы GPS и Readmix (Татьяна Татаринова, University of Southern California)
Видео | Слайды
 
Лекция посвящена генотипированию и отбору информативных позиций на геноме, обзору современных технологий, предсказанию био-географического происхождения человека и других организмов по анализу генома. А также анализу и сравнению существующих алгоритмов для биогеографии.
 
 Алгоритмы в биоинформатике (Антон Банкевич, Центр алгоритмической биотехнологии, СПбГУ)
Видео | Слайды
 
Вводная лекция по алгоритмам в биоинформатике, в которой рассматриваются основные подходы и примеры их использования. 
 
Связь между мозгом и Deep Learning (Дмитрий Фишман, Quretec, University of Tartu, Estonia)
Видео | Слайды
 
Лекция состоит из четырех частей: в первой рассматриваются пути обработки мозгом различных сигналов от внешнего мира, и формирование принятия решений на основе полученных сигналов. Во второй – эволюция методов машинного обучения, которые привели к возникновению технологии глубокого обучения (Deep Learning), осуществивших революцию во многих областях науки. В третьей части речь пойдет о сходствах и различиях между основными принципами Deep Learning. В заключении лектор приводит несколько примеров успешного применения Deep Learning в биоинформатике, и чего можно достичь в области медицинской визуализации с использованием Deep Neural Networks.
 
Эта лекция была создана представителями исследовательской группы по вычислительным нейронаукам Университета Тарту. В частности идея и слайды принадлежат Raul Vincente и Ilya Kuzovkin. Оригинал презентации на английском языке.
 


Перспективы искусственной модификации человеческих генотипов (Алексей Кондрашов, MГУ, MSU)
Видео
 
Никакие законы природы не запрещают синтез длинных молекул ДНК с заданной последовательностью. Каков будет фенотип человека, генотип которого не несет молодых производных аллелей? Это зависит от того, насколько распространены знаковый и сужающий эпистаз. В лекции рассматриваются рассмотрены подходы к изучению этого вопроса.
 
 Биоинформатика в синтезе генетических конструкций (Павел Яковлев, BIOCAD)
Видео | Слайды
 
Развитие методов in silico молекулярного дизайна позволяет строить любые белковые конструкции с заданными свойства. Полученные аминокислотные последовательности с большой вероятностью образуют белки с нужным функционалом. Но встает новая задача: построить клеточную линию, которая бы синтезировала такие белки. В лекции рассматриваются вопросы, возникающие при решении этой задачи: почему нельзя просто взять любой обратный транскрипт, как собрать требуемый ген, как вставить его в вектор, и, конечно, причем тут биоинформатика?
 


Обзор современных геномных измерений отдельных клеток (Петр Харченко, Harvard University)
Видео | Слайды
 
Изучение сложных тканей и классификация клеточных типов традиционно базировалось на морфологических и цитологических свойствах. Несколько видов новых экспериментальных технологий теперь позволяют изучать геномные характеристики индивидуальных клеток и одновременно измерять сотни или тысячи отдельных клеток. Лекция дает обзор таких технологий и биоинформатических методов, которые используются для классификации клеточных типов, состояний и генетических линий из подобных данных.
 
 Использование омиксных данных в изучении эволюции человека (Филип Хайтович, Shanghai Institutes for Biological Sciences, SkolTech) 
Видео | Слайды
 
По концентрации метаболитов и липидов можно оценить физиологическое состояния тканей. В лекции представлены несколько комплексных исследований уровня концентрации метаболитов и липидов в тканях человека и животных, которые дают новые знания о молекулярных механизмах, лежащих в основе физиологических особенностей, уникальных для человека.

Послесловие
В 2016 году летнюю школу по биоинформатике поддерживали компании  JetBrains, РВК, BIOCAD, EPAM Systems, Parseq Lab, за что им большое спасибо.

В 2017 году летняя школа по биоинформатике пройдет с 31 июля по 5 августа в Долгопрудном на базе МФТИ. Фокус школы в этом году – методы интеллектуального анализа данных (data mining) в биоинформатике. Дедлайн подачи заявок – 10 июня. Спешите подать заявку на участие.",vyahhi
"

Собственно, все ясно из названия — RSS-лента Хабра на Дашборде вашего Мака. Разработано в целях таймменеджмента — все таки на Дашборд я смотрю чаще, чем лажу по аггрегатору. Пользуемся на здоровье, вперед, пираты! :)

Скачать

P.S. Тестировалось на 10.4 — если не сложно, отпишитесь — работает ли оно под 10.5",r13
"Каждый чем-то хорош. Иногда — хорошая фотография, иногда — продуманностью.


Милый сетап, не смотря на вредные стеклянные столы :)



Просторненько.


Не смотря на то, что полная противоположность предыдущей — представляю как уютно сидеть в таком домашнем офисе зимой, когда валит снег :)


О… ну это классика жанра. Образец домашнего офисостроительства.


Женсковато — но отличный свет :)


Никаких стен. 


Не понаслышке знаю о том, когда рядом со столом стоит пара гитар и какие звуки они издают когда падают. Здесь — меньше шансов задеть.


Свет.


Цветоподбор. Может немного амебно — но не без любви.


Тут наверное круто, когда в окно идет дождь — а ты в тепле и занимаешься любимой работой :) Окно — на отличненько :)",r13
"Повсеместный переход на Болонскую систему даёт студентам возможность сменить ВУЗ после получения диплома бакалавра. Однако немногие студенты задумываются об этом. Во многих ВУЗах магистерская программа очень «разрежена»: присутствует множество непрофильных курсов (философия, культурология и т.д.), профильных же очень мало, и для того, чтобы их сдать, достаточно просто появиться на экзамене/зачёте.

Тех, кто ещё сохранил желание учиться, а также интересуется биоинформатикой и имеет образование в области математики и/или информатики, кафедра математических и информационных технологий Академического университета приглашает в новую магистратуру по биоинформатике в Санкт-Петербурге. 

Общая информация и поступление
Для выпускников бакалавриата и студентов 5 курса специалитета (при переводе) обучение бесплатное. Для лиц, имеющих диплом специалиста, обучение в магистратуре с 2010 года считается получением второго высшего образования и потому является платным. Специально для таких случаев в университете установлена минимальная плата за обучение — 10 тыс. руб. в семестр. Предоставляется отсрочка от службы в вооружённых силах. Иногородним предоставляется общежитие. 

Вступительное испытание — собеседование (можно skype). Желающим поступить, рекомендуется безотлагательно заполнить форму на сайте кафедры (до 1 августа) для согласования даты собеседования.

Любые вопросы о магистерской программе по биоинформатике и поступлении можно задавать здесь или по адресу bioinf@spbsu.ru.

Программа
Программа специальных (биоинформатических) курсов может существенно зависеть от набранной группы.
Общие курсы читаются на достаточно высоком уровне всем магистрантам кафедры (20-25 человек, включая computer science и software engineering). По общим курсам возможен перезачет.

5 курс:
Специальные курсы: 
Алгоритмы в биоинформатике
Молекулярная биология
Научный семинар
Статистика
НИР

Общие курсы: 
Алгоритмы
Комбинаторика и теория графов
Программирование на языке C++ (факультативно)
Семинар по UNIX и скриптовым языкам
Разговорный английский и физкультура по желанию.

6 курс:
Специальные курсы: 
Научный семинар
НИР
Дополнительные главы биоинформатики

Общие курсы: 
Базы данных
Машинное обучение
Параллельные и высокопроизводительные вычисления
Разговорный английский и физкультура по желанию.

Академический университет
О существующих магистерских программах кафедры, а также в целом об университете, можно прочитать в этом анонсе на хабре или на официальном сайте кафедры.

",vyahhi
" На прошлой неделе в Science: международная команда исследователей сообщила о нахождении генетических вариаций, ассоциированных с количеством образования, получаемого людьми с европейскими корнями.

Учёные провели полногеномный поиск ассоциаций (genome-wide association study) и обнаружили мутации в специфичных участках генома, появление которых коррелирует с образовательными достижениями. Найденные мутации отвечают лишь за два процента вариаций уровня образования и когнитивных способностей, но включают «перспективные» для дальнейших исследований однонуклеотидные полиморфизмы (single-nucleotide polymorphisms, SNPs). В частности, три независимые мутации (rs9320913, rs11584700, rs4851266) отвечают, приблизительно, за 1 дополнительный месяц обучения каждая.

Исследования проводились на данных о жителях штата Юта с северо- и западноевропейскими корнями (HapMap 2 CEU).

UPD by darkalexey: Само по себе образование от генов не зависит, его все равно получать приходится )",vyahhi
"

Магия это не просто набор хитростей — это отработанная технология формирования иллюзий. Сейчас исследователи извлекают из неё уроки.

В сентябре 1856, перед лицом разгорающегося восстания, Наполеон III отправил Жана-Эжена Робер-Удена в Алжир. Робер-Уден не был ни генералом, ни дипломатом. Он был волшебником — отцом современной магии. (Подающий надежды молодой артист по имени Эрих Вайс через несколько десятилетий взял себе сценическое имя, прибавив «i» к фамилии «Houdin»). Его миссией было превзойти алжирских отшельников-марабутов, заклинателей, чьё магическое искусство позволило убедить алжирский народ в том что Аллах против французского господства на их земле.



Французские колониальные власти собрали арабских вождей, и Робер-Уден организовал шоу, которое в своей основе было бы понятно всем присутствующим: он вытаскивал пушечные ядра из шляпы, доставал зажжённые подсвечники из воздуха и выливал кофе галлон за галлоном из пустой серебряной чашки.

После этого, как он вспоминает в своих мемуарах, Робер-Уден приступил к волшебству, рассчитанному на то чтобы запугать вождей.Он попросил принести маленький деревянный ящик с металлической ручкой. Выбрав самого мускулистого из присутствующих, он попросил его поднять ящик; человек сделал это без усилий. Потом Робер-Уден с угрожающим жестом объявил, что он забрал силу у этого человека. Когда доброволец снова взялся за ручку ящика, тот не сдвинулся — ассистент Робер-Удена включил мощный магнит под сценой. Доброволец навалился на ящик, пока по жесту Робер-Удена, его помощник не пропустил заряд электричества через ручку, заставив человека убежать в ужасе. Вожди были впечатлены, и восстание постепенно угасло.

История дипломатического надувательства Робер-Удена широко известна в истории магии, в основном потому что это единственный задокументированный случай (по крайней мере, после событий древности) влияния заклинателя на мировые дела. Сценическая магия, в конце концов, не столько искусство управления людьми, сколько спектакль и развлечение.

Однако в последние годы некоторые исследователи начали понимать, что магия представляет собой нечто большее: глубокий и нетронутый источник знания о человеческом разуме.

На большой конференции, прошедшей в прошлом году в Лас-Вегасе, в научном докладе психологи доказали что волшебники, в своих вековых способах обмана людей, невольно участвовали в непревзойдённом исследовании того как мы видим и воспринимаем мир вокруг себя. Также как изучение механизма болезни помогает понять работу защитных систем организма, психологи верят что изучение методов работы талантливого иллюзиониста, вызывающего «короткие замыкания» нашей системы восприятия, поможет лучше понять строение этой системы.

«Я считаю что перед магами и нейробиологами стоят похожие вопросы — но если нейробиологи изучают их несколько десятилетий, маги занимаются тем же столетия, а может и тысячи лет.», рассказывает Сюзанна Мартинес-Конде, учёный Нейробиологического института Барлоу и соавтор одного из исследований, опубликованных на прошлой неделе в журнале Nature Reviews Neuroscience. «То что делают иллюзионисты иногда превосходит по сложности и эффективности наши исследования.»

Как давно знали маги, и недавно открыли нейробиологи, человеческая система чувств — нестойкий механизм, полный пробелов и сравнительно легко управляемый. Сотрудничество между наукой и магией длится недолго, и заключения преждевременны, но интерес среди учёных к такому направлению растёт: Нью-Йоркская академия Наук пригласила иллюзиониста Аполло Роббинса для презентации о механизмах зрения, а другая группа магов должна выступить на следующем ежегодном съезде Society for Neuroscience, крупнейшего объединения исследователей мозга.

В мире, где внимание — скудный ресурс, лучшее понимание его действия может иметь миллионы применений, от приборных панелей до рекламы — а возможно, и новых магических трюков.

Большая часть успеха в магическом номере — это привлечение внимания аудитории и направлении его в другое место — на левую руку, в которой пляшет палочка, пока правая прячет мяч в карман или достаёт карту из рукава. Магические шоу — это шедевры дезориентации: они привлекают наше внимание яркими цветами и блестящими вещами, клубами дыма и постоянным запутыванием, которое маг должен поддерживать по мере фокуса.

Годами учёные-когнитивисты считали восприятие чем то вроде кинокамеры, воспроизводящей мир в деталях. В последние десять лет, однако, эта модель подверглась серьёзному пересмотру. Например, люди имеют явную тенденцию пропускать события прямо у них под носом. Даниэль Саймонс, психолог из Университета Иллинойса, провёл серию экспериментов в конце 1990-х годов, показавшую степень этой когнитивной слепоты. В одном из них, людей спрашивали как пройти в определённое место, но посреди разговора собеседник заменялся другим человеком. Подмену заметила только половина опрошенных.

В другом опыте, людям показывали ролик в котором две команды, одна в белых футболках, другая в чёрных, играли в баскетбол. Испытуемых просили сосчитать количество бросков, сделанных игроками каждой из команд. Половина из участников, как потом оказалось, не заметили женщину в костюме гориллы, появившуюся посреди ролика и бьющую себя кулаками в грудь (вот примерное воспроизведение опыта).

Благодаря таким исследованиям, в последние десять лет была разработана новая модель, в которой визуальное восприятие понимается не как камера, а как нечто большее — вроде прожектора, обшаривающего сумрачный пейзаж. В каждый момент времени мы можем видеть в деталях только небольшой кусочек общей картины, на котором мы концентрируемся. Остальное комбинируется из памяти, предсказания и грубого бокового зрения. Мы не столько воспринимаем окружающий мир, сколько постоянно его конструируем.

«Наша картина мира напоминает виртуальную реальность», говорит Рональд А. Ренсинк, профессор компьютерных наук и психологии Колумбийского Университета и соавтор доклада о магии и психологии, который готовится к публикации на следующей неделе в журнале Trends in Cognitive Sciences. «Это очень похоже на управляемую галлюцинацию».

Преимущество подобных когнитивных уловок в том, что они позволяют нам создать довольно подробное изображение окружающей действительности, несмотря на то что два оптических нерва имеют разрешение приблизительно как у камеры мобильного телефона. Нам необязательно, к примеру, тратить время, разглядывая каждую машину на шоссе чтобы понять что это действительно машины, и сделать догадку о том как они движутся — наш разум просто собирает образ из тысяч виденных нами в жизни машин.

Но из-за того что этот метод так сильно полагается на ожидание — не только чтобы заполнить декорации вокруг нас, но и определить куда послать то что психологи называют «прожектором внимания» — мы столь уязвимы перед тем кто знает наши ожидания и может манипулировать ими, например — фокусником.

«В магии,» говорит Теллер, участник знаменитого дуэта «Пенн и Теллер» и один из пяти иллюзионистов, упомянутых как соавторы в докладе Nature Neuroscience, «мы берём то что делает нас разумными, и обращаем это против нас самих.»

Обман, по сути, наиболее понятный из инструментов заклинателя — мы не замечаем некоторых вещей просто потому что не смотрим на них. Мартинез-Конде особенно интересуется обманом, и вопросом «что особенного в некоторых движениях, притягивающих и удерживающих наше внимание». Роббинс, иллюзионист-карманник и ещё один маг-соавтор доклада выяснили, что полукруговые жесты притягивают внимание людей лучше чем прямые. «Это лучше отвлекает человека,» говорит фокусник, «Я использую их когда вытаскиваю что либо из чужого кармана.»

Мартинез-Конде заинтересовалась этим различием, и выдвинула гипотезу что особенное притяжение непрямых движений может исходить из того факта, что они не так просто соотносятся с быстрыми, прямолинейными движениями глаз, или саккадами. В результате, как она полагает, слежение за такими движениями требует больших усилий и концентрации восприятия.

Другие эффекты, однако, ещё больше сбивают с толку. Исследования движения глаз часто показывали, что испытуемый может смотреть прямо на объект и не видеть его — выжившие в автокатастрофах часто рассказывают о таком же парадоксе. Или, с небольшим побуждением, человека можно заставить увидеть то чего на самом деле нет.

Иллюзия с исчезающим шаром — один из основных трюков, доступных фокуснику: мяч постоянно подбрасывается в воздух и ловится. Потом, во время финального броска, он исчезает прямо в воздухе. На самом деле, фокусник просто изобразил последний бросок, проследив траекторию воображаемого мяча глазами. Сам мяч при этом остался в его руке.

Но если технику объяснить легко, то сам феномен — нет. При правильном исполнении фокус действительно заставляет наблюдателей увидеть как мяч поднимается в воздух при последнем броске и исчезает в верхней точке. Как указывает Ренсинк, это куда сложнее чем просто заставить человека смотреть в другую сторону — это демонстрация того, как просто погрузить мозг в пространство чистой галлюцинации. И когнитивисты до сих пор не знают чем вызывается такое поведение.

Учёные-когнитивисты, наблюдающие за этими фокусами, ограничивают себя простыми эффектами и вытекающими из них фундаментальными вопросами. Со временем, Ренсинк составил своеобразную периодическую таблицу эффектов внимания: методов привлечения внимания, методов его рассеяния, методов, заставляющих человека не видеть то что находится у него перед глазами. Такая классификация, считает он, будет полезна и самим фокусникам. Контроль и управление вниманием важны во всех областях человеческой деятельности. Кокпиты самолётов и уличные знаки могут быть спроектированы лучше, охрана и полиция могут быть обучены управлению вниманием, компьютерная графика может стать более натуральной, обучение — менее принуждающим.

Тем не менее, если ничему из этого и не суждено случиться, исследование пробелов и ограничений восприятия представляет определённую ценность. Как и аудитория Робер-Удена, мы легко управляемы и скорее можем оказаться в неловкой ситуации, если не знаем этого.

«Главное в этом — знание, что у вас есть определённые ограничения,» говорит исследователь когнитивных процессов Даниэль Саймонс. «Большинство людей не понимают насколько разговор по мобильному телефону влияет на их вождение.»

Если верить Теллеру, магия более чем кто либо напоминает нам об этом. И это объясняет, почему несмотря на относительно скромные эффекты, она продолжает оставаться популярной в век кинотеатров и компьютеров.

«Мы каждый день вынуждены убеждаться в реальности происходящего вокруг нас, распознавать что обозначают сигналы, принимаемые нашими глазами,» говорит он. «Мы говорим ’Это забор, я не могу там пройти’, или ’Это машина выезжает из-за угла? Я хорошо её вижу? А, нет, это просто велосипед.’»

Он считает что в магии людей привлекает понимание того, насколько обманчивыми могут быть, казалось бы, простые суждения.

«Они понимают,» говорит он, «что лучший способ понять силу обмана — это подвергнуться ему самостоятельно.»

Источник: Механический мир",kurokikaze
"Circos — открытый программный пакет для визуализации данных и информации. Он визуализирует данные в форме круга, что идеально подходит для изучения связей между объектами. Также, это просто красиво.



Наверняка, каждому из вас хотя бы раз приходилось представлять информацию в графическом виде. И наверняка казалось, что на обычный график или диаграмму помещается слишком мало информации, а ведь хочется рассказать и показать так много. Особенно эта проблема (нехватки места) проявляется в тот момент, когда нужно показать связи одного объекта с другим, их схожести и различия. И тут нам на помощь приходит … круг.

Pie Chart
Многие из вас скорее всего использовали круговые диаграммы. Но даже если нет, то наверняка согласитесь, что из представленных ниже способов донести информацию, наличие у Вовы контрольного пакета акций нагляднее всего показывает именно круговая диаграмма:



Имя
Количество акций


Ваня
2345


Петя
3454


Вова
5989





Однако у стандартных круговых диаграмм очень узкая область применения и добавление еще одного столбца в таблицу делает их использование в данном примере невозможным.

Circos
Circos же легко справляется с такой задачей. Продемонстрирую преимущества их «кругового» подхода на следующем простом примере — пусть у нас есть три вида автомобилей (Small, Medium, Executive) и три страны где они продавались (A, B, C). Количество проданных автомобилей в зависимости от страны можно описать, например, такой таблицей:


Тип автомобиля \ Страна
A
B
C


Small
120
300
340


Medium
150
100
45


Executive
30
15
25


А вот в такую красочную картинку можно автоматически превратить эти цифры при помощи Circos:



По периметру круга располагаются метки наших столбцов и строк. Слева мы видим страны, а справа классы машин. Цвет, привязанный к каждой из меток, изображен на внутренней (самой толстой) окружности, так, например, стране А соответствует красный цвет, а классу машин Small — фиолетовый. Длина окружности пропорциональна доле данной страны среди всех стран или доле данного класса машин среди всех. Полоски, идущие через центр круга, демонстрируют в какой пропорции машины определенного класса покупались в какой стране, так по фиолетовым полосам видно, что машины малого класса практически одинаково популярны в странах В и С, а в стране А закупаются в два с лишним раза меньше. 

Для удобства, все полосы в правом полукруге начинаются с небольшого участка, покрашенного в тот цвет, куда эти полосы ведут. На диаграмме нанесены как абсолютная (в штуках машин, внутренняя окружность), так и относительная (в процентах, внешняя окружность) шкалы, позволяющие понять как долю различных классов машин в какой-то стране, так и распределение каждого класса по всем странам. 

 Конечно, рассмотренный пример является искуственным и может показаться, что Circos создан исключительно для развлекательных целей, однако это не так. Circos создавался как визуализатор для сложных данных в биоинформатике, в частности из области сравнительной геномики. Именно необходимость исследовать структурные различия между геномами вдохновила Мартина (Martin Krzywinski) из Canada's Michael Smith Genome Sciences Centre к созданию этого инструмента в 2004 году. С тех пор Circos использовался во множестве биоинформатических (и не только) проектов, а созданные с его помощью графики красовались на обложках крупнейших научных журналов.

Для создания иллюстрации из этой статьи я использовал онлайн версию визуализатора, но Circos можно установить и локально скачав дистрибутив с официального сайта.

Статью написал мой коллега AlexeyGurevich, но в силу отсутствия приглашения не смог опубликовать.



UPD: Ниже SergeiStartsev упомянул JavaScript библиотеку D3, которая тоже умеет делать подобные диаграммы, да ещё и с динамикой для веба.",vyahhi
"На прошлой неделе JetBrains объявила о выходе IntelliJ IDEA 15. Как всегда, IDE доступна в двух редакциях: коммерческая Ultimate и бесплатная Community Edition. Скачать новую версию можно на официальном сайте JetBrains. Этот пост вкратце о том, что в ней нового и интересного.



Kotlin
Главная новость заключается в том, что одновременно с релизом IntelliJ IDEA 15 вышел и Kotlin Beta — практически готовый к релизу JVM язык программирования, разрабатываемый в недрах JetBrains. В IntelliJ IDEA 15 поддержка Kotlin доступна “из коробки”.

Отладчик
Популярность Java 8 продолжает набирать обороты, а JetBrains продолжает делать отладчик более удобным для работы с лямбда-выражениями. При добавлении точки останова IDE теперь позволяет выбрать конкретное выражение. Перейти в конкретное лямбда-выражение теперь можно и при помощи Step Into и Run to Cursor.

Также в отладчик был добавлен инструмент Force Return. Он позволяет прервать исполнение текущего метода и вернуть выбранное значение. Это может быть удобно, если вы хотите поменять логику выполнения программы без изменения кода и без перезапуска.



Обнаружение дубликатов в коде
Раннее поиск дубликатов в IntelliJ IDEA осуществлялся через инструмент Analyze ⟶ Locate Duplicates. Результатов этой операции можно было ожидать несколько минут. Изменения, внесенные в алгоритм индексации в IntelliJ IDEA 15, позволили сделать поиск дубликатов мгновенным: с помощью инспекции Duplicated Code. Инспекцию можно настроить или отключить в Settings ⟶ Inspections.



Поиск текста
Поиск текста — относительно простая операция, тем не менее IntelliJ IDEA продолжает совершенствовать его с каждой версией (ранее была добавлена возможность выбора контекста поиска: комментарии, строковые литералы и т. п.). В IntelliJ IDEA 15 в диалог поиска добавлена панель с мгновенными результатами.



Запуск приложений и тестов
Теперь рядом с методами main, а также рядом с каждым тестом в левой части редактора отображается иконка, нажатием на которую можно быстро запустить соответствующий метод или тест. Для каждого теста иконка отображает результат последнего запуска.

Кроме того, конфигурации запуска получили индикаторы состояния: теперь легко отличить запущенную конфигурацию от остановленной, а кнопка Run на панеле инструментов выглядит как Restart для запущенной конфигурации типа Single instance only.

Также был полностью переработан интерфейс запуска тестов. Теперь он выглядит одинаково для всех языков, показывает время выполнения тестов и предлагает операции просмотру, импорту и экспорту результатов предыдущих тестов.



Системы контроля версий
Интеграция с Git, Mercurial, Perforce и другими системами контроля версий подверглась ряду улучшений. Rebase стала полноправной операцией в меню Branch operations на равне с Merge. Само меню Branch operations стало доступно в Log. 

По клику на маркере в левой части редактора для измененных строк теперь показываются непосредственные части, которые изменились (ранее показывалась вся строка полностью). Кроме этого, если изменения коснулись только форматирования, цвет маркера будет желтым вместо синего.

При реформатировании только измененных строк IDE теперь понимает необходимость реформатирования и контекстно-зависимых строк, например отступы в объявлении методов. В окне Merge стала доступна операция Undo.

Для Mercurial появилась возможность управления патчами MQ. Для Perforce появилась функция Shelve in Perforce. Для TFS появилась возможность работы с древовидными Work items, а также с Saved queries.



Серверные фреймворки
Поддержка фреймворков была также обновлена в соответствии с их последними версиями. Поддерживаются новые функции, добавленные в Spring 4.2: аннотация Bean на default методах, автодополнение и навигация для кода использующего аннотации EventListener; а также аннотация @AliasFor.



Кроме того, в IntelliJ IDEA 15 появилась долгожданная поддержка Grails 3.



Добавлена экспериментальная поддержка Arquillian: контейнеры можно конфигурировать на уровне IDE и указывать их при запуске тестов.

Scala
Плагин для Scala также обновился за счет поддержки SAM (Single Abstract Method), подсказки, позволяющей разворачивать макросы, постфикс автодополнений, Inline рефакторинга для Type aliases и некоторых других улучшений.



Фронтенд разработка
Веб-разработчики будут рады узнать о поддержке TypeScript 1.6, интеграции с TSLint и значительно улучшенной поддержке React фреймворка (включая разметки JSX и TSX):



В IntelliJ IDEA 15 доступны возможности, добавленные в Android Studio 1.3: Android Memory (HPROF) Viewer и Allocation Tracker. Более поздние изменения Android Studio скоро также появятся в минорных обновлениях IntelliJ IDEA 15.

Базы данных и SQL
Инструменты для работы с базами данных и SQL были значительно обновлены: теперь можно быстрее получать точную информацию об объектах баз данных для Oracle, PostgreSQL, MySQL и SQL Server, генерировать код для CREATE TABLE и INSERT конструкций; визуально редактировать существующие таблицы; строить план выполнения запросов; сравнивать результаты нескольких запросов и не только.



Цены и лицензирование
IntelliJ IDEA 15 является частью JetBrains Toolbox и доступна теперь по подписке. Кроме новых цен и условий лицензирования, это также означает, что, если раньше вы пользовались несколькими продуктами JetBrains одновременно, теперь вы можете купить их по более выгодной цене.

Если вы еще не попробовали IntelliJ IDEA 15 самостоятельно, приглашаем вас сделать это прямо сейчас.

Программируйте с удовольствием!
Команда IntelliJ IDEA",andreycheptsov
"Многие хабрапользователи наверняка знакомы с квайнами — программами, выводящими собственный исходный код. Сегодня я хочу показать как сделать интересный вариант квайна — ZIP-архив, который распаковывается сам в себя.



Алгоритм Lempel-Ziv

Алгоритм, используемый в ZIP-файлах (Lempel-Ziv) на самом деле довольно прост. В нём есть два вида инструкций: literal(n), за которым следует поток данных который надо вывести как есть, и repeat(d, n), который возращается назад на d байт и выводит n байт с этой позиции.

Соответственно, наша задача такова: используя этот алгоритм написать программу, которая выводит свой код при запуске. Другими словами, написать сжатый поток данных который разворачивается сам в себя. Программа-максимум: написать поток который разворачивается сам в себя с произвольными данными в начале и конце (чтобы его можно было использовать как настоящий zip- или gzip-файл, с заголовком и другими необходимыми данными).

Давайте договоримся использовать Ln и Rn в качестве сокращений для literal(n) и repeat(n, n), и программа предполагает что каждый код это один байт. L0, соответственно, это аналог NOP в Lempel-Ziv, L5 hello выведет hello; то же самое выведет L3 hel R1 L1 o.

Простой квайн будет выглядеть так:





Код

Вывод


no-op

L0




no-op

L0




no-op

L0




вывести 4 байта

L4 L0 L0 L0 L4

L0 L0 L0 L4


повторить 4 последних байта

R4

L0 L0 L0 L4


вывести 4 байта

L4 R4 L4 R4 L4

R4 L4 R4 L4


повторить 4 последних байта

R4

R4 L4 R4 L4


вывести 4 байта

L4 L0 L0 L0 L0

L0 L0 L0 L0



(Видно что содержимое столбцов «Код» и «Вывод» одинаково)

Интересная часть программы — последовательность из 6 байт L4 R4 L4 R4 L4 R4, которая выводит 8 байт: R4 L4 R4 L4 R4 L4 R4. То есть, выводит саму себя с одним байтом до и одним после.

Если мы пишем квайн на Питоне, обычно проблемой является то что оператор print всегда длиннее того что он выводит. Мы решаем эту проблему с помощью рекурсии, подставляя строку для печати в саму себя. Здесь мы можем использовать другой подход. Программа на Lempel-Ziv частично повторяется, таким образом что повторяемая подстрока содержит весь изначальный фрагмент. Рекурсия здесь в самом представлении программы, а не в выполнении. В любом случае, этот фрагмент критически важен. До финального R4 вывод программы отстаёт от ввода. После выполнения, вывод на один байт опережает ввод.

Операторы-пустышки L0 можно использовать и в более общем варианте программы, который может дополнять себя произвольными трёхбайтовыми префиксом и суффиксом:





Код

Вывод


вывести 4 байта

L4 aa bb cc L4

aa bb cc L4


повторить 4 последних байта

R4

aa bb cc L4


вывести 4 байта

L4 R4 L4 R4 L4

R4 L4 R4 L4


повторить 4 последних байта

R4

R4 L4 R4 L4


вывести 4 байта

L4 R4 xx yy zz

R4 xx yy zz


повторить 4 последних байта

R4

R4 xx yy zz

 

(Вывод равен коду плюс aa bb cc добавленные в начало и xx yy zz , добавленные в конец)

Мне пришлось потратить большую часть воскресенья чтобы добраться до этой точки, но когда у меня получилось, я уже знал что победил. Из своих экспериментов я выяснил, что довольно легко создать программу которая выводит саму себя без нескольких инструкций или даже такую которая выводит себя с префиксом, минус несколько инструкций. Дополнительные байты aa bb cc в выводе позволяют добавить к программе нужный фрагмент. Так же несложно написать код, который выводит себя плюс дополнительные три байта xx yy zz. Эти два приёма можно использовать чтобы добавить к архиву заголовок и дополнительные данные в конце.

Вот так выглядит программа с произвольными префиксом и суффиксом:





Код

Вывод


выводим префикс

[P]

P


выводим p+1 байт

Lp+1 [P] Lp+1

[P] Lp+1


повторяем последние p+1 байт

Rp+1

[P] Lp+1


выводим 1 байт

L1 Rp+1

Rp+1


выводим 1 байт

L1 L1

L1


выводим 4 байта

L4 Rp+1 L1 L1 L4

Rp+1 L1 L1 L4


повторяем 4 последних байта

R4

Rp+1 L1 L1 L4


выводим 4 байта

L4 R4 L4 R4 L4

R4 L4 R4 L4


повторяем 4 последних байта

R4

R4 L4 R4 L4


выводим 4 байта

L4 R4 L0 L0 Ls+1

R4 L0 L0 Ls+1


повторяем 4 последних байта

R4

R4 L0 L0 Ls+1


no-op

L0




no-op

L0




выводим s+1 байт

Ls+1 Rs+1 [S]

Rs+1 [S]


повторяем последние s+1 байт

Rs+1

Rs+1 [S]


выводим суффикс

[S]

S



(Вывод это P, потом байты из колонки «Код», потом S.)

ZIP-файл, распаковывающийся в себя

Теперь переходим к реальным действиям. Мы разрешили основную технологическую проблему создания рекурсивного ZIP-файла, но осталось ещё несколько деталей.

Первая проблема: перевести наш квайн, записанный в упрощённых опкодах, в реальные опкоды Lempel-Ziv. RFC 1951 определяет формат DEFLATE, используемый в gzip и zip; последовательность блоков, каждый из которых содержит последовательность опкодов закодированных кодированием Хаффмана. Кодирование Хаффмана назначает строки разной длины разным опкодам, что не совпадает с нашим предположением о том что у опкодов одинаковая длина. Но постойте! Мы можем, если постараемся, найти кодирование с фиксированной длиной, которое можно будет использовать.

В DEFLATE существуют блоки литералов и блоки опкодов. Заголовок блока литералов это 5 байт:



Если наши опкоды L занимают по 5 байт каждый, опкоды R тоже должны занимать по 5 байт, и каждый байт выше будет повторён пять раз (например, аргумент для L4 теперь занимает 20 байт, и R4 повторяет последние 20 байт вывода). Блок опкодов с одним repeat(20,20) занимает несколько меньше 5 байт:



К счастью, блок опкодов содержащий две инструкции repeat(20,10) делает то же самое и занимает ровно 5 байт:



Кодирование repeat с другой длиной аргументов требует несколько более сложных трюков, но похоже что мы можем разработать 5-байтовые коды которые повторяют строку длиной от 9 до 64 байт. Например, вот блоки повторяющие 10 и 40 байт:





Блок, повторяющий последние 10 байт на 2 бита меньше чем нужно, но за каждым блоком повтора следует блок литералов, который начинается с трёх нулевых битов и добивки до границы ближайшего байта. Если блок повтора заканчивается за 2 бита до границы и за ним следует блок литералов, добивка вставит недостающие два бита. Точно так же блок повторяющий 40 байт выходит за границу на 5 бит, но эти биты нулевые. Начиная блок на 5 бит позже мы отнимаем эти биты у добивки. Оба этих трюка работают потому что последние 7 бит любого блока повтора — нулевые, и биты в первом байте блока литералов тоже нулевые, так что граница не видна. Если бы блок литералов начинался с одного бита, этот хитрый приём бы не сработал.

Второе препятствие состоит в том что zip-архивы (и gzip тоже) хранят контрольную сумму несжатых данных. Так как несжатые данные представляют собой тот же самый zip-архив, контрольная сумма тоже участвует в расчёте. Стало быть, нам надо найти такое значение x, при котором контрольная сумма станет равна x. Рекурсия наносит ответный удар.

Команда CRC32 интерпретирует весь файл как одно большое число и вычисляет остаток при делении этого числа на определённую константу используя специальный метод деления. Мы могли бы выписать соответствующие уравнения и решить их для x, но мне на сегодня хватит рекурсивных загадок. Для x есть всего чуть более 4 миллиардов допустимых значений и мы вполне можем найти нужное прямым перебором.

Если Вы захотите повторить всё это самостоятельно, Вас ждёт ещё парочка несложных проблем, например сделать так чтобы длина tar-файла делилась без остатка на 512 и сжатие заголовка zip до 59 байт чтобы Rs+1 было не больше R64. Но это просто вопрос программирования.

Итак, у меня получились файлы r.gz (gzip-архив), r.tar.gz (tar-файл, сжатый gzip), и r.zip (zip-архив). Жаль, но я не смог найти программу, которая бы рекурсивно распаковывала эти файлы до бесконечности. Было бы забавно понаблюдать, но похоже намного менее сложные zip-бомбы уже испортили нам всё веселье.

Если чувствуете себя в форме, вот rgzip.go, программа на Go, генерирующая эти файлы. Интересно, получится ли у Вас создать zip-файл, содержащий gzip файл, содержащий в свою очередь оригинальный zip-файл). Кен Томпсон предложил попробовать создать zip-архив, распаковывающий свою копию но немного большего размера, чтобы при рекурсивном распакавывании размер архива рос до бесконечности (если у Вас получится то или другое, пожалуйста, оставьте комментарий).",kurokikaze
"Если кто еще не в курсе, сегодня вышла IntelliJ IDEA 2017.3. Продолжая традицию, я рассказываю о том, что новое и интересное было добавлено или поменялось в релизе: умные подсказки, рефакторинги, навигация, инструменты для работы с Git, базами данных, поддержка фреймворков и многое другое.



Поехали!

Приведение типов для цепочек вызова в Smart Completion

В предыдущем релизе (IntelliJ IDEA 2017.2) цепочки вызовов (method call chains) стали отображаться при первом вызове Smart Completion (до этого они были доступны только по второму вызову). В этом релизе эти цепочки также учитывают автоматическое приведение типов в зависимости от контекста:



Анализ потока исполнения кода

Пару лет назад IntelliJ IDEA научилась автоматически выводить аннотации Nullable и NotNull для параметров и возвращаемого значения методов классов библиотек. Этот вывод делался на основе анализа потока исполнения внутри методов. В версии 2017.3 вывод аннотаций для параметров работает не только для методов классов библиотек, но и для private или final методов классов внутри проекта.



В случае выведения аннотации в подобном методе IDE предлагает quick-fix для явной декларации аннотации:



Также IDE научилась обнаруживать потенциальные проблемы с Nullability внутри вызовов методов Stream API. В случае обнаружения потенциальной проблемы IDE сообщает об этом и там, где это возможно, предлагает автоматически внести изменения в код для избежания получения ошибки при исполнении:



Трансформация цикла for в цепочку вызовов Stream API

Циклы for, результатом которых является добавление строк в StringBuilder, теперь можно автоматически трансформировать в цепочку вызовов Stream API, использующих Stream.collect и Collectors.joining:



Инверсия логики boolean методов с помощью quick-fix

Invert Boolean рефакторинг теперь доступен как quick-fix для методов (ранее quick-fix был доступен только в batch mode, а также для переменных, констант и полей класса):



Отдельные вызовы методов на коллекциях и цепочки вызовов Stream API

Там, где это имеет смысл, теперь IDE предлагает заменить отдельные вызовы sort и toArray на коллекциях на соответствующие методы на цепочке вызовов Stream API:



Обнаружение повторяющихся ключей в инициализации Map и Set

Если вы случайно два или более раз указали значение для одного и того же ключа или пытаетесь добавить один и тот же элемент в Set, теперь IDE предупредит о возможной ошибке:



Обнаружение избыточных деклараций исключений

Обнаружение избыточных деклараций исключений ранее работало только для final и private методов. Теперь обнаружение работает для любых методов:



Эта конкретная инспекция может быть отключена для так называемых точек входа, например для тестов.

Миграция deprecated методов

Когда для устаревшего (deprecated) метода указана явная альтернатива, IDE предлагает quick-fix для автозамены:



Миграция с JUnit 4 на JUnit 5

Если в модуле присутствуют обе библиотеки JUnit 4 и JUnit 5, IDE предлагает quick-fix для автоматической миграции с JUnit 4 на JUnit 5:



Run Dashboard для любых типов Run Configuration

Run Dashboard ранее был доступен только для Spring Boot приложений, а теперь может использоваться для любых типов Run Configuration. Для этого необходимо открыть диалог Edit Run Configurations, выбрать пункт Defaults и в список Run Dashboard Types добавить соответствующие типы конфигураций:



Run Dashboard предлагает удобный интерфейс запуска и управления нескольких Run Configurations:



Отладчик для JVM

В этом релизе больше внимание было уделено учету и оптимизации затрат вычислительных ресурсов (overhead), которые Debugger вносит в запускаемый процесс из-за обработки точек останова (breakpoints) и отображения значений (при помощи Data Renderers) во вкладках Variables, Watches, Evaluate Expression, Inspect и других местах.

Для учета этих затрат ресурсов в окно инструментов Debug добавлена новая вкладка Overhead. Эта вкладка отображает кумулятивное количество вызовов Breakpoints и Data Renderers (учитывая опцию Enable 'toString()' object view, используемый по-умолчанию, если не указан конкретный Data Renderer):



Кроме этого любой Data Renderer может быть помечен как On-demand. Это будет означать, что значение будет посчитано и отображено только при необходимости (по клику):



Пометить Data Renderer как On-demand можно в настройках Java Type Renderers:



Либо выбрав Mute Renderers в контекстном меню на конкретном значении:



Также мы оптимизировали затраты ресурсов на расчет Async Stacktraces. Кроме этого, Async Stacktraces не надо дополнительно настраивать. Теперь они работают сразу, “из коробки”.



Плагин Java Stream Debugger, который помогал отлаживать цепочки вызовов Stream API, теперь является частью IDE и доступен во время отладки (кнопка Trace Current Stream Chain в окне инструментов Debug):



Подсказки и навигация для Java EE 8

Новый релиз полностью поддерживает стандарт Java EE 8 и предлагает дополнительные подсказки, навигацию и прочие приятные функции для Asynchronous CDI Events, CDI Bean Injection, PushBuilder, Disposes и Produces:



Поддержка Spring и Spring Boot

Теперь IDE умеет автоматически обнаруживать и конфигурировать MVC Context в настройках Spring Facet для приложений Spring Boot:



Вкладка Endpoints в окне запуска и отладки приложений Spring Boot, которая помогает мониторить запущенное приложение, теперь поддерживает Spring Boot 2.0 Actuator Endpoints.

Подсветка в файлах конфигурации Spring Boot приложений теперь учитывает тип значений:



В диаграммах зависимостей между бинами (Spring Beans Diagram) появился новый интересный режим: Neighborhood. В этом режиме отображаются только прямые зависимости. При выборе одной из зависимостей вы увидите прямые зависимости для выделенного бина и т. д. Таким образом удобно навигировать между зависимостями:



Работа с модулями

Если вы помечали некоторые модули как “выгруженные” (unloaded) и при обновлении проекта VCS создавались новые модули, ранее они автоматически помечались как “загруженные” (loaded). Теперь же в тех случаях, когда от этих модулей не зависят модули, помеченных как “загруженные”, эти модули автоматически помечаются как “выгруженные”.

Также перед коммитом IDE теперь проверяет, что “выгруженные” модули компилируются без ошибок.

Кроме того, изменился способ группировки модулей при отображении. Ранее для этого использовались группы модулей, которые можно было создать в Project Structure. Теперь используется тот же самый механизм, который используется для группировки структуры пакетов (packages): имя модуля разбивается символом точки и образует дерево:



Сборка проекта

Ранее при использовании Gradle запуск приложений и тестов в режиме сбора статистики о покрытии кода (Run with Coverage) не работал, если была включена опция Delegate IDE build/run actions to Gradle или Gradle Test Runner. Теперь Run with Coverage работает во всех случаях.

Процесс импорта, компиляции и сборки проекта для Gradle, Android/Gradle и SBT теперь можно наблюдать в новом окне инструментов Build:



Работа с REST-запросами

Теперь работать с REST-запросами можно при помощи нового инструмента на основе редактора. Для этого достаточно создать файл в проекте с разрешением .http и открыть его в редакторе. Если не хочется создавать файл в проекте, можно воспользоваться Scratch File:



Kotlin

Вслед за релизом Kotlin 1.2, который случился вчера, обновилась поддержка языка в IDE. Главным новшеством обновления является экспериментальная возможность “переиспользования кода” между JVM и JavaScript: 



С помощью ключевого слова expect любой класс или метод теперь может быть объявлен как “общий“. Реализация этого класса или метода для конкретной платформы может быть объявлена с помощью ключевого слова actual в модуле для соответствующей платформы. IDE проверяет, что реализация существует для сконфигурированных платформ, и позволяет переходить от декларации к реализациям и обратно:



Подробнее о работе «общих модулей» (common modules) можно прочитать в этом хабрапосте или в официальной документации (на английском). Обязательным условием работы таких модулей является сборка проекта Gradle.

Scala

Подсветка символа под кареткой (которая включена по-умолчанию, как и та, которая доступна по нажатию Shift+Ctrl/Cmd+F7) теперь подсвечивает также неявное (implicit) использование символа:



Сборка и запуск приложения или тестов теперь не завязаны на индексацию и работают даже, если индексация еще не закончилась.

В SBT проектах когда плагин замечает выражение импорта зависимости, не указанной в SBT конфигурации но присутствующей в локальном Ivy Cache, IDE предлагает добавить ее в SBT конфигурацию:



Новая версия плагина поддерживает Ammonite и предлагает подсветку синтаксиса, подсказки, навигацию, и отдельный тип Run Configuration:



Создание проектов Scala изменилось. Теперь вместо Lightbend Activator (прекративший существование в середине этого года) плагин предлагает использовать шаблоны проектов Tech Hub Project Starter.

Работа с Git и Mercurial

Теперь можно интерактивно ребейзить (rebase) последние изменения в Git, вызвав Interactively Rebase from Here из Log:



При переключении между ветками IDE сохраняет состояние workspace: расположение вкладок редактора, окон инструментов, и т. п.:



Для удобства работы изменениями, участвующими в слиянии (merge), в Log добавлен новый режим: Show Changes to Parents. В этом режиме правая панель в Log показывает не только изменения в файлах с конфликтами, но и отдельно неконфликтные изменения для каждой ветки, участвующей в слиянии:



Режим можно активировать в контекстом меню.

Для просмотра конфликтных изменений для Git в Log IDE теперь предлагает трехпанельный интерфейс.

При отправке изменений из патча IDE автоматически проставляет имя, почту автора и описание изменения, если они были в патче:



Синхронизация настроек IDE между разными компьютерами

Иногда бывает, что IDE установлена на работе и дома, на стационарном компьютере и на ноутбуке и т. п. Раньше приходилось настраивать IDE на каждом компьютере. Некоторые время назад для автоматизации этого процесса можно было воспользоваться плагином. При использовании этого плагина настройки хранились в указанном Git репозитории. В IntelliJ IDEA Ultimate 2017.3 встроен новый механизм, который не требует наличия Git репозитория: все настройки хранятся в защищенном виде на сервере JetBrains. Еще одним преимуществом нового механизма является синхронизация не только настроек, но и непосредственно установленных плагинов. Для использования нового механизма требуется наличие JetBrains Account.



Изменения в Docker плагине

В этом релизе мы продолжаем совершенствовать плагин для Docker. Из наиболее заметного:


Docker Deployment Run Configuration разделен на 3 отдельных Run Configurations: Dockerfile (сборка образа из Dockerfile и запуск контейнера на основе полученного образа), Docker Image (запуск образа, эквивалент команды “docker run”) и Docker Compose (запуск сервисов).
В Docker Image Run Configuration теперь можно указывать командную строку напрямую (ранее IDE требовала создания специального JSON-файла). 
В Dockerfile Run Configuration теперь можно только собрать образ и не запускать его как контейнер.
Собрать образ или запустить контейнер на основе этого образа теперь можно прямо из редактора Dockerfile (по клику на панели слева от редактора).
IDE поддерживает альтернативные названия Dockerfile и docker-compose.yml файлов.
Окно инструментов Docker теперь скрыто по умолчанию, пока не будут добавлены настройки Docker в Settings. 

Превью для SVG файлов

Теперь при открытии SVG-файла в редакторе IDE предложит с правой стороны визуальный предварительный просмотр этого файла:



Визуальные границы в редакторе

Ранее в IDE была настройка Right margin, которая отображалась в редакторе и учитывалась в правилах оформления кода (code styles). В новом релизе эта настройка была переименована в Hard wrap at, а вдобавок к ней была добавлена новая опция Visual guides. С ее помощью можно указать через запятую значения сразу для нескольких визуальных границ. Эти границы будут также отображаться в редакторе: 



Главным образом, это необходимо в тех случаях, когда правила оформления кода ссылаются на несколько таких границ (такое возможно, например, для Python и в PHP).

Инструменты для работы с базами данных (DataGrip 2017.3)


Если вы работаете с большим количеством источников данных (data sources), эти источники данных теперь можно организовать в группы.
Для удобства работы с числовыми данными в таблице теперь они выравниваются по правому краю.
Для PostgreSQL в окне инструментов Database отображаются Users и Roles, а также поддерживаются Foreign Data Wrappers.
Данные в таблицу можно теперь вставлять из Excel.
Несколько значений таблицы теперь можно сравнивать между собой.
Экспорт в DDL теперь поддерживает больше опций и доступен через (Context menu | SQL Scripts | SQL Generator).
Автодополнения для JOIN стали еще чуть сообразительнее.
Поддержка Exasol базы данных.
Подсветка для XQuery and XPath для Sql Server через Language Injection.

Поддержка JavaScript и TypeScript (WebStorm 2017.3)


Для Vue.js появилось автодополнение кода и навигация для props, свойств и методов, а также новая коллекция шаблонов кода. 
Новые рефакторинги Pull member up и Extract superclass для JavaScript — и TypeScript-классов.
Новые рефакторинги Extract type alias и Extract interface для TypeScript.
Обновленная документация и улучшенное автодополнение для стандартных методов и объектов JavaScript. Открытие проектов стало быстрее благодаря предварительно построенным индексам для этих методов.
Поддержка watch mode для Jest и Mocha, отчеты о покрытия кода тестами для Jest и возможность легко обновить Jest-снепшоты в один клик.
Импорты в JavaScript — и TypeScript-файлах теперь добавляются автоматически при копировании и вставке кода из одного файла в другой.
Для отладки клиентских приложений в WebStorm больше не требуется установка дополнительного расширения для Chrome. Но расширение все еще нужно для Live Editing, который теперь отключен по умолчанию.

Как видно из этого поста, в IntelliJ IDEA 2017.3 много нового и интересного, не считая несколько сотен багфиксов и фич поменьше, которые просто бы не уместились в один пост.

Скачать обновление можно через Toolbox App либо с официального сайта. Буду рад ответить на любые вопросы. Вопросы, на которые я не смогу ответить сам, отправлю команде.

UPDATE: Вышел GoLand 2017.3, и теперь его можно купить. Пользователи IntelliJ IDEA Ultimate получают функциональность GoLand бесплатно с помощью плагина: plugins.jetbrains.com/plugin/9568-go

Программируйте с удовольствием!",andreycheptsov
"Закончились праздники и выходные, но не поводы радоваться. Что может быть приятнее, чем узнать о долгожданном обновлении любимой Java IDE? Мы с нетерпением ждали четыре долгих дня, чтобы удивить вас этим приятным сюрпризом. Встречайте IntelliJ IDEA 14!



Рассказывая о том, чем мы занимались большую часть года, мы всякий раз переживаем и волнуемся. Каждая новая версия IntelliJ IDEA поднимает планку всеобщих ожиданий. И все-таки каждое обновление — еще один шанс для нас доказать, что совершенству нет предела. Удалось ли на этот раз — судить вам!

Декомпилятор
Чтобы избавить пользователей от необходимости устанавливать дополнительные плагины, в инструментарий IDE был добавлен декомпилятор для Java-классов. Теперь посмотреть код библиотеки можно, даже если у вас нет исходников.

Отладчик
В новой версии значительно улучшен Java-отладчик. Одно из главных нововведений — опция «Show values in Editor», позволяющая видеть значения переменных во время отладки прямо в редакторе, в контексте их использования.



Кроме того, теперь для каждого экземпляра вы можете посмотреть список всех ссылающихся на него объектов: с помощью новой команды “Show referring objects”.



Еще одним улучшением является вычисление выражений, содержащих лямбды и анонимные классы. Это особенно пригодится тем, кто уже перешел (или планирует перейти) на Java 8. 



Стоит отметить, что это работает как для Java, так и для Scala.

Редактор кода
Также ряд улучшений коснулся и редактора кода, где разработчик проводит (или, как минимум, должен проводить) большую часть своего времени. Теперь при нажатии клавиши Backspace IDE самостоятельно удаляет отступы в соответствии с настройками форматирования и перемещает курсор в нужное место, беря на себя еще одну мелкую обязанность и освобождая от нее вас.



Еще одним улучшением редактора является автоматическое обнаружение настроек форматирования в редактируемом файле на лету. То есть, если настройки форматирования в файле отличаются от тех, что выбраны в IDE, оригинальное форматирование файла будет сохранено даже при редактировании.



Также в редакторе появилась новая функция «Scratch files». Эта функция открывает новую вкладку, не связанную ни с одним файлом в проекте. При редактирования содержания вкладки IDE будет предлагать помощь (coding assistance) в соответствии с типом файла (выбранным при открытии вкладки). Одновременно вы можете открыть любое число таких вкладок и переключаться между ними командой «Recent files».



Множественное выделение
Функция «множественное выделение» (multiple selections), появившаяся не так давно, также была переработана. Дополнение кода теперь включает варианты с учетом всех позиций курсора; функция работает также для встроенных языков (injected languages); обеспечивается правильно поведение функции при копировании, вставке, удалении строк, комментировании и т. п.

Кроме того, добавились новые сочетания клавиш, что значительно упростило работу с этой функцией:


Клонировать выделение (Clone caret): двойное нажатие Ctrl и затем, удерживая Ctrl, стрелки вверх или вниз (Cmd для OS X);
Следующее совпадение (Add Selection to Next Occurrence): Alt+G (Ctrl-G для OS X)
Убрать выделение (Unselect Occurrence): Shift+Alt+G (Shift-Cmd-G для OS X)
Выделить все (Select All Occurrence): Ctrl+Alt+Shift+J (Ctrl-Shift-G для OS X)
Пропустить совпадение (Next Occurrence): Alt+G (Cmd-G для OS X)


Копирование кода в HTML/RTF
Теперь при копировании кода в любой HTML/RTF-редактор сохраняется внешний вид и форматирование кода, и, что самое важное, для этого не требуется никаких дополнительных плагинов.



Поиск по файлам проекта (Find in path) стал быстрее за счет добавленных оптимизаций. Также появилась возможность пропускать совпадения в комментариях и текстовых выражениях.



Анализ кода
Статический анализ кода (code analysis), представленный в IntelliJ IDEA инспекциями, пополнился новой очень мощной функцией, а именно выводом NotNull, Nullable и Contract аннотаций из байткода подключенных библиотек. Это значит, что теперь вам необязательно прописывать аннотации NotNull, Nullable и Contract самостоятельно — IDE cделает это автоматически при подключении библиотеки!



Системы сборки
Интеграция с системами сборки, такими как Maven и Gradle, также претерпела ряд положительных изменений: при запуске тестовых задач Gradle IDE теперь отображает стандартное окно выполнения тестов, позволяющее видеть результаты в удобном виде, а также перезапускать или отлаживать тесты по выбору.



Кроме того, теперь вы можете указывать задачу Gradle в поле «Before the launch» в конфигурациях запуска (run configurations).

Интеграция с Maven получила улучшенную поддержку профайлов и автоматическую генерацию MANIFEST.MF файла.

Системы контроля версий
Интеграция с системами контроля версий продолжает развиваться, главным образом, для Git и Mercurial. Журнал изменений (вкладка Log в окне Changes) стал еще быстрее, графы стали отображаться даже при использования фильтра, а в журнале появилась новая команда «Git reset from the log».



Также для Git и Mercurial был переделан Push-диалог: теперь он содержит дополнительную информацию об исходящих изменениях, сгруппированную по репозиториям, с возможностью выбора изменений, которые вы хотите отправить. Опция «Force push» доступна из выпадающего меню кнопки Push.



Отдельно по Mercurial стоит отметить добавленную поддержку Subrepositories, а также синхронное управление ветками, ранее доступное только для Git.



JavaFX
Разработчики десктопных приложений будет рады узнать, что JavaFX Scene Builder теперь доступен прямо из IDE. Теперь для редактирования формы в визуальном редакторе необязательно переключаться из IDE в Scene Builder — достаточно перейти на другую вкладку в редактируемом файле.



Фреймворки
Поддержка фреймворков и серверов приложений обновлена в соответствии с последними версиями. В частности, добавлена поддержка Super Dev Mode для GWT, вместе с улучшенной интеграцией с Source Maps и новой опцией в конфигурации, автоматически запускающей сеанс отладки JavaScript.



Также ряды поддерживаемых фреймворков пополнились Thymeleaf. Работает дополнение кода, навигация (navigation to declaration), переименование (рефакторинг Rename), поиск вхождений (Find Usages), анализ кода и др. Поддержка распрастраняется не только на файлы шаблонов, но и на контроллеры.



Scala
Scala-разработчики также не будут разочарованы, их ждет много приятных изменений. Во-первых, мы наконец отказались от Scala Facet для конфигурации Scala-проекта, заменив ее на расширенные настройки Scala-библиотеки: (которые теперь, кроме путей к библиотекам, содержат также путь и версию компилятора):



Поддержка фреймворка Play 2.x стала частью основного Scala-плагина (и по-прежнему доступна только в IntelliJ IDEA Ultimate).

Появилась возможность менять сигнатуру методов с помощью встроенного рефакторинга «Change signature»:



Продолжая тему интеграции с системами сборки, стоит отметить улучшенную поддержку SBT: 


Дополнение (code completion) для SBT keys и зависимостей
Quick documentation для SBT keys
Шаблон (live template) “dep” для объявления зависимостей
Проверка правильности указания зависимостей (с учетом указанных репозиториев)
Поддержка android-sbt-plugin плагина
Инспекция, предлагающая заменить Project() на project.in(), где это возможно
Навигация в подпроекты (subprojects) с помощью Ctrl + клик (Cmd + клик для OS X)


Кроме того были добавлены новые инспекции и, конечно же, улучшена производительность.

Android
Если вы разрабатываете для Android, то будете рады узнать, что все самые последние функции, добавленные командой Google в Android Studio (находящуюся пока еще в стадии Beta), уже доступны в IntelliJ IDEA. Это включает в себя поддержку Android Wear и TV. Подробнее о нововведениях можно узнать на официальной странице Android Studio.



Веб-разработка
Все нововведения для веб-разработки, представленные не так давно в WebStorm 9, теперь также есть и в IntelliJ IDEA 14:


Постфиксное дополнение для JavaScript
Интеграция с Gulp: просмотр, запуск и отладка задач
Улучшенная поддержка spy-js для трассировки (tracing) и профилирования Node.js приложений
Загрузка изменений (live edit) для запущенного Node.js приложения
Плагины для полноценной разработки Meteor и PhoneGap/Cordova/Ionic приложений


Работа с базами данных
И, наконец, обновились инструменты для работы с базами данных и SQL, а точнее унаследовали обновление от 0xDBE, нашей новой IDE, все еще находящейся в разработке. Обновления включают:


Улучшенный редактор таблиц и результатов запросов: обнаружение картинок в полях BLOB
Команды Quick Value и Quick Documentation теперь объединены вместе и показывают примерное кол-во записей в таблице
Подробная информация об ошибке в запросе в окне Event Log
Настраиваемое поле Auto-Commit
Выполнение больших SQL-файлов
Опция Auto Increment в диалоге создания колонки и таблицы
Команда Navigate to Table/Procedure
Поддержка Integrated Windows Authentication для SQL Server


Получить еще более подробную информацию об IntelliJ IDEA 14, а также скачать IDE вы можете на официальной странице релиза.

Программируйте с удовольствием!",andreycheptsov
"Ответ топику  Spore — самая пиратская игра в истории (из-за DRM)
 
 Редакторы блога Ars Technica, который я читаю, решили проверить — что будет, если установить Spore более трёх раз?



В результате эксперимента выяснилось, что считаются только установки на разные компьютеры. На один и тот же можно устанавливать игру сколько угодно. В общем, это было ожидаемо. 

После установки на четвёртый компьютер (Mac Pro) игра выдала следующее:


 
После этого редакторы позвонили в техподдержку EA и сказали, что игра не устанавливается. Более того, они сказали что взяли диск в аренду (rented the game). После этого техподдержка выдала им новый ключ без лишней волокиты. Правда, чтобы его использовать, пришлось переустановить игру.
 
Итак, ужасная DRM защита на проверку оказалась не столь ужасной.",kurokikaze
"Всем привет!

Меня зовут Андрей Чепцов, я работаю в JetBrains и занимаюсь маркетингом IntelliJ IDEA и GoLand (нашей новой IDE для Go). Официально моя должность называется Product Marketing Manager. Если в двух словах, я рассказываю пользователям о том, чем занимается команда продукта. В данный момент в команду GoLand как раз разыскивается еще один такой человек. Чтобы было понятно, чем он (или она) будет заниматься, в этом посте я вкратце расскажу о своей работе.

Прежде, пара слов о JetBrains. Мы создаем инструменты для разработки программного обеспечения. За счет “продвинутого” статического анализа кода наши инструменты позволяют читать и писать код более эффективно. JetBrains является международной компанией с центральным офисом в Праге, крупным центрами разработки в Санкт-Петербурге и Мюнхене. Ежемесячно нашими инструментами пользуются четыре миллиона разработчиков по всему миру. Приятным является тот факт, что многие пользователи выбирают наши коммерческие продукты даже в тех случаях, когда на рынке доступны опенсорсные альтернативы. Последнее позволяет мне считать, что наши пользователи ценят то, что мы делаем. 

Большую часть наших инструментов составляют интегрированные среды разработки (IDE). Мы поддерживаем Java, PHP, Python, JavaScript, C#, SQL и многие другие языки. Недавно, благодаря запуску GoLand, список поддерживаемых языков пополнился Go. Go активно развивается и грозит “потеснить” некоторые популярные языки, такие как Java, Ruby, Python и C/C++. И хотя команда GoLand составляет три “полных” человека, а сам продукт был запущен совсем недавно, у GoLand уже шестьдесят тысяч пользователей и это число быстро растет. Именно поэтому в команду и требуется теперь собственный, “выделенный” Product Marketing Manager.

Что из себя представляет Product Marketing Manager в JetBrains, ранее уже рассказывал мой коллега Андрей Бреслав (главный дизайнер языка Kotlin) а также paullarionov (проходивший в JetBrains курс летней школы PMM). Я попробую рассказать своими словами по возможности избегая слова “единорог”.

Как выглядит мой обычный день:


Я добираюсь до кухни и делаю себе латте (кофе с молоком).
Пока кофе остывает, я открываю почту, отвечаю на письма и комментарии в YouTrack (YouTrack — это наш багтрекер для разработчиков, а по совместительству и система управления задачами) и Zendesk (централизованная система, куда попадают все письма от пользователей). 
Проверяю непрочитанные сообщения в десятке Slack-каналов.
Кофе остыл, можно проверить новые комментарии в блоге, Twitter и Facebook и ответить на наиболее важные. Вопросы, на которые ответить я не могу, отправляю своим коллегам: разработчикам, тестерам, юзабилити-инженерам, специалистам поддержки, тим лидам, техническим писателям, евангелистам или любым другим людям в команде, которые могут помочь.
Сегодня выходит EAP билд IntelliJ IDEA. Мне необходимо написать пост про важные исправленные “баги”, а также про новые “фичи”. Чтобы это сделать, вначале нужно собрать информацию о них, а значит проверить страницу Confluence, где мы собираем информацию о релизах, проверить release notes и соответствующие задачи в YouTrack и, наконец, поговорить с разработчиками и тестерами из команды продукта, SDK (это наша собственная версия JDK) и платформы. Информация о билде собрана, а значит нужно проверить “фичи” в действии и написать текст, снять скриншоты и отправить на вычитку разработчикам и копирайтерам (копирайтеры помогают убеждаться в “несовершенстве” моего английского, а иногда и русского). Если какая-то из фич не работает или не нравится, я захожу в YouTrack и подробно сообщаю об этом. Блог-пост готов. Осталось подготовить текст для об обновлении для IDE, текст для сайта и текст для социальных сетей.
Опубликовал пост в блог. Выложил изменения на сайт (Git). Убеждаюсь, что TeamCity (это наша система Continuous Integration и Continuous Delivery) проверил, что я ничего не сломал. Нажимаю “выложить на сайт”. Позже нужно будет проверить комментарии к посту, твиту и сообщению в Facebook. 
Теперь пора проверить новые тексты для документации, написанные техническими писателями. Проверяю и как можно “конструктивнее” сообщаю о найденных “несовершенствах”. 
Вспоминаю, что нужно проверить несколько “старых” разделов документации. Иду в Google Analytics. Создаю задачу на анализ “тепловых карт”. Анализом данных займусь позже.
Вижу несколько сообщений от моей коллеги из команды евангелистов (Developer Advocates). Созваниваюсь и обсуждаю, какой контент нам нужен на ближайшее время. Видео или блог-посты? Не забыть про Tips of the Day для Twitter. Нужно будет снять скриншоты, сделать тексты и запланировать твиты.
Пауза на кофе. В коридоре встречаю коллегу и застреваю на полчаса, обсуждая улучшения, которые мы сделали в прошлом релизе, а также те, которые мы планировали в следующем месяце. Обсуждаем обратную связь от пользователей, статистику об использовании этих фич, а также пару идей, о том, как сделать их еще лучше. Напоминаю о паре важных багов, которые висят уже несколько месяцев.
Что у нас с конференциями? Похоже, нужно подготовить список “вещей”, которые нужно успеть сделать к конференции. Какой спонсорский пакет возьмем в этом году? Куда стоит поехать, куда нет? Согласовать дизайн будки. Кто поедет? Еще нужно не забыть заказать футболки с новым дизайном, который мы вместе с командой придумали пару месяцев назад.
С конференциями покончено. Как раз вовремя для ежедневного митинга с продуктовой командой. Митинг проходит 5-10 минут. В митинге участвуют через Polycom (это решение, которое мы используем для видео конференции) сотрудники из разных офисов, а некоторые и из дома. На митинге каждый рассказывает, чем занимался сегодня. Я случайно узнал о паре интересных вещей. Коллега переделывает элемент интерфейса IDE, чтобы ускорить его работу и улучшить внешний вид. Нужно будет расспросить его подробнее в Slack.
После митинга можно пообедать. На обеде сталкиваюсь с коллегами из “смежного” продукта. Обсуждаем, что у кого “нового” и кто чем занимается. Ребята из PyCharm рассказывают о поездке в Китай и визитах в компании заказчиков для общения с пользователями IDE. Обсуждаем тесты, которые проводили для оптимизации рассылок, а также новые лендинг-страницы, разделы документации и проведенные “вебинары”. Делаю пометки, что нужно сделать для IntelliJ IDEA. Вспоминаю, что уже давно планировал запустить автоматическую продуктовую рассылку для GoLand. Нужно будет созвониться с отделом email маркетинга.
Возвращаюсь на рабочее место. Проверяю Confluence. Оказывается, на носу крупное обновление IntelliJ IDEA. Это значит, нужно собрать всю информацию, протестировать новые фичи и запланировать ряд контента. Это занимает большую часть дня.
Ближе к вечеру решаю переключиться на блог-пост для Medium, который я планировал написать уже давно. В этом посте я планирую рассказать о новом плагине, которым занимаюсь самостоятельно в “свободное” время, отвлекаясь от рутинных задач. Пост практически готов, осталось “вычитать”. Завтра можно будет опубликовать.
Перед уходом вспоминаю про “созвон” с разработчиками технологии, которую мы поддерживаем в IDE. Обсуждаем планы, записываем пожелания. Завтра с командой обсудим, что мы планируем из намеченного сделать в этом релизе.
Уже вечер. Пора идти домой!

Примерно так выглядит мой обычный день. 

Если в целом, я…


занимаюсь написанием контента для блога, социальных сетей и сайта;
общаюсь с разработчиками, тестерами, специалистами поддержки, инженерами юзабилити, техническими писателями, специалистами по маркетингу, евангелистами, копирайтерами, ребятами из отдела продаж и многими другими;
отвечаю на сообщения пользователей в социальных сетях и YouTrack;
планирую и посещаю мероприятия и конференции;
помогаю команде опираться на данные при принятии решений 
помогаю пользователям в использовании продукта;
представляю интересы пользователей внутри команды.

Что команда ожидает от меня понимание продукта на уровне пользователя, а также желание и умение…


писать много контента о продукте и технологиях
общаться с пользователями
писать и читать программный код на Go
изучать новые технологии
передавать конструктивную обратную связь
убеждать и аргументировать свою точку зрения
учиться и развиваться

Если вас не пугает работа, о которой я написал выше, вам интересно программирование и маркетинг и вы хотите принимать активное участие в создании и продвижении продуктов с мировым именем, мы ждем вашего резюме. В комментариях буду рад ответить на любые вопросы по вакансии и в целом по работе продуктовых команд JetBrains.",andreycheptsov
"Возьмём понятный всем пример. Интернет-магазин. Вот вы встретились с клиентом в первый раз, обсудили, что должен и не должен делать их будущий проект. После этого сформировали список функциональных требований и сопроводили его предварительной картой сайта. Всё это дело будет потом помещено в приложение номер один к договору на проектирование, но сегодня речь не об этом. Давайте для начала взглянем на карту сайта, которая у нас получилась.


Главная
Каталог
Страница товара
Блог
Отдельный пост
О нас
Доставка и оплата
Акции и спецпредложения
Личный кабинет
Мои заказы
Мои данные
Настройки
Корзина
Оформление заказа
Результаты поиска по сайту

При первом приближении у нас тут 15 экранов. Опытный проектировщик скажет, что их тут будет до 30-ти. Давайте ответим на вопрос, с чем стоит прийти к клиенту на первую встречу, чтобы осчастливить его, а заодно минимизировать риски и издержки в процессе проектирования. И тут небольшое лирическое отступление.

Здесь мы не будем рассматривать персонажей и сценарии взаимодействия как нечто задокументированное, т.к. предполагаем, что прототип типовой и нам не нужно синхронизировать наши с клиентом представления о целевой аудитории и их действиях на сайте. Вся эта информация хранится в голове проектировщика и основана она на других десяти интернет-магазинах, сделанных ранее.

Шаг первый
Придумываем навигационное решение и определяемся с сеткой. Я работаю в Axure (и помогаю работать другим), поэтому под прототипом будет пониматься набор интерактивных html-страниц. Методология простая: на одну страницу вытаскиваем все сквозные элементы (логотип, корзина, меню навигации, копирайты в подвале, поисковая строка, выбор языка, иконки с типами приёма платежей и т.д. и т.п.), перемещаем их до тех пор, пока не получим целостную и понятную картину, после чего создаём мастера для шапки, подвала и ещё чего угодно, что будет повторяться от страницы к странице (особо любопытные могут ознакомиться с моим видеоуроком, демонстрирующим этот процесс).

Затем создаём структуру будущего прототипа, копируем и вставляем на каждую страницу наши сквозные элементы и перелинковываем всё это дело. Таким образом у нас получается интерактивный прототип, в котором мы можем пройтись по всем разделам, но в разделах этих будет пусто. Если бы речь шла не об интернет-магазине, а о чём-то более сложном, то именно на этом моменте можно было бы останавливаться и демонстрировать результат клиенту для промежуточного согласования. Но в нашем случае в этом нет необходимости, поэтому двигаемся дальше.

Шаг второй
Берём из головы самый распространённый сценарий взаимодействия и, двигаясь по нему, детализируем страницы, которые попадаются на пути. В случае с интернет-магазином чаще всего это будет выглядеть так:


Пользователь из поисковика (или каталога) попадает на страницу отдельного товара;
Добавляет товар в корзину. В этот момент интерфейс должен ему подсказать, куда двигаться дальше, чтобы продолжать покупки или оплатить товар;
Переходит в корзину для оплаты, редактирует содержимое, знакомится с дополнительной информацией, связанной с акциями;
Указывает личные данные, информацию о доставке, выбирает способ оплаты;
Оплачивает товар во внешнем гейте оплаты;
Возвращается на сайт магазина, в список своих оплаченных заказов и следит там за их статусами.

Когда сценарии взаимодействия описаны, такой список есть у нас перед глазами. Но чаще всего он у нас перед мысленным взором. Давайте теперь посмотрим, какие разделы из карты сайта нам нужно проработать и в какой последовательности.


Каталог
Страница товара
Корзина
Оформление заказа
Подтверждение оплаты
Мои заказы в личном кабинете

Шесть экранов! И это с учётом того, что мы уже проработали навигационное решение. То есть, нам не нужно выдумывать навигацию личного кабинета или придумывать, куда структурно воткнуть тупиковые (или разводящие, т.е. те, где сценарий закончен и надо бы направить пользователя куда-нибудь дальше) страницы.

Шаг третий
Мы приходим к клиенту с промежуточным результатом, который состоит из полностью проработанного и перелинкованного навигационного решения и шестью детализированными страницами. Наша демонстрация прототипа выглядит завершённой и полноценной, т.к. мы двигаемся по сценарию, попутно обсуждая тонкие моменты и уточняя, насколько сценарий соответствует реальным возможностям клиента. Правки в результате комментариев нам здесь не страшны, т.к. совсем мелкой детализацией мы не занимались. Никакой динамики, никаких украшательств. А вот клиент будет просто в восторге. Ведь прошло совсем немного времени, а проектировщик уже демонстрирует ему путь от попадания пользователя на сайт до выкладывания своих денежек из кармана.

После этого мы уходим довольные и прорабатываем оставшиеся несколько сценариев, которые тоже демонстрируем клиенту. А в самом конце уже занимаемся детализацией и добавлением динамических элементов там, где это необходимо. Профит.

А напоследок давайте вспомним, что обычно показывают проектировщики на первой демонстрации прототипа.

— Это главная страница!
На главную страницу обычно попадает до 10% трафика, если речь не идёт о каком-нибудь исключении в виде популярного сервиса, поэтому не стоит с неё начинать

— Каталог товаров и карточка отдельного товара. Мы можем добавить товар в корзину прямо из каталога. Я кликаю по этой кнопке, у нас в корзине появляется плюс один и стоимость, а кнопка превращается в «Добавить ещё один».
А здесь пример преждевременной проработки динамических элементов. Клиент может сосредоточиться на комментаровании этой страницы и создать много сложной работы по переделке, хотя это всего лишь первый шаг в нашей сценарной цепочке

— Это блог, отдельный пост, раздел о нас, доставка и оплата и акции.
Сделаны разделы, которые создают иллюзию того, что над прототипом много работали, хотя по трудозатратам они вместе взятые сопоставимы с оформлением заказа в корзине. Клиент получит на первом этапе не совсем то, что ожидал увидеть, если из-за этих разделов не будут доработаны другие, более важные

— Вот страница оформления заказа, а затем пользователь попадёт в личный кабинет, но это я покажу позже, в следующей итерации.
Сценарий не доведён до конца, хотя сделать тупиковую страницу или просто набросать что-нибудь блочное не составило бы большого труда у проектировщика

Все мы через это проходили. И в роли клиентов, и в роли проектировщиков. И поначалу все наступали на похожие грабли. Поэтому желаю вам побольше практики и удачных рабочих отношений. Любая инструкция будет действовать только в рамках определённых условий, а практика подарит опыт, который поможет под эти условия подстраиваться.",Ekamelev
"Поискав на Хабре материалы на тему проектирования и составления технических заданий, я обнаружил, что их очень немного, и те, которые есть, довольно поверхностны и содержат лишь ключевые рекомендации по производственному процессу…
Нет, слишком сложно начал. Люди, где примеры технических заданий? Где клёвые детальные прототипы? Где примеры решений задач с разработкой сложных сайтов, с различными ролями пользователей, с интерактивными приложениями? Где кейсы?
Да, часть из того, что я перечислил, — сверхсекретная информация, которой профессионалы делятся неохотно. Да, производственные процессы разнятся от сайта к сайту. И понятно, что сейчас уже мало кто занимается разработкой собственных систем управления контентом. Ведь есть Битриксы, Джумлы, Вордпрессы, хорошо заточенные под те или иные задачи. Но…
Многие мои знакомые называют разные цены на разработку сайтов при наличии и отсутствии ТЗ. Если есть техническое задание — остальные процессы обходятся дешевле и реализуются быстрее. Кто-нибудь из вас работал по такой проектной документации, что не возникало ни одного серьёзного вопроса по реализации? Я — нет.
В этом случае каждый из участников этого процесса привносит в проект что-то своё. Причём это «что-то» зачастую не согласовывается с другими. Дизайнер нарисовал псевдоссылку. Проект уже осмечен, и деньги выделены заказчиком. А псевдоссылка увеличивает трудозатраты, например, на 10%. Верстальщик по привычке делает «резину» лишь потому что в ТЗ об этом вообще ничего не сказано. А заказчик хотел, чтобы сайт на всех разрешениях отображался одинаково, а не «тянулся». Программист ориентируется на дизайн, вёрстку и собственную интуицию при создании таких вещей, о которых заказчик имел другое представление при разговоре с аккаунтом.
Друзья-айтишники, скажите мне, пожалуйста, среди вас есть люди, которые занимаются исключительно проектированием, а не совмещают эту профессию со всеми остальными лишь потому что проектирование как таковое ещё не до конца сформировалось на российском рынке?
Я даже не могу найти здесь блога, куда мог бы скидывать мануалы по Акшуре, например, или примеры структур ТЗ под те или иные типовые решения. А ведь есть множество интересных «тонких» мест в проектировании и задач, с которыми проектировщики сталкиваются с завидной периодичностью.
Как наименее трудоёмко отобразить поведение сайта с зарегистрированными пользователями и гостями? Какие для этого нужно использовать инструменты? Как оптимизировать тексты в ТЗ под эти задачи? И ещё сотни вопросов, на которые есть сотни ответов, но они по-прежнему остаются не озвученными.",Ekamelev
"Ура, товарищи! Почта Яндекса сильно изменилась. Многие вещи стали действительно крутыми и полезными, но в глаза сразу попало именно то, чего я никак не ожидал от Яндекса.

Иконки.



Они стали более яркими, блестящими, глянцевыми. Они теперь загораются при наведении. Но по сравнению со старыми, привычными иконками, — это нечто несуразное. Оранжевое пламя в кнопке «Удалить», ненужные блики и артефакты на кнопках «Написать», «Проверить почту», «Переслать» и «Это спам» (кстати, куда дели клёвый восклицательный знак после «Фу»?), и, наконец иконка для контактов. Там огромный синий чувак, поджав коленки, висит на плечах у других маленьких чуваков — зелёного и жёлтого.

Папки и метки



Почему на иконке, разворачивающей папки и метки, изображена стрелочка вверх? Она что, вверх развернётся? Зачем нужны эти закругления сверху? Раньше всё было так строго и ровно, а теперь создаётся ощущение, что к почте приложил руку дизайнер — любитель красивостей ради красивостей.

В целом мой почтовый ящик стал более пёстрым, типографика привлекает внимание к некоторым элементам, значимость которых довольно сомнительна.



В сгруппированном по обсуждениям списке писем почему-то исчезла старая постраничная навигация. При этом мы можем перейти к «простому списку писем», где она, ура, возвращается на своё привычное место, но почему нельзя было их объединить?

Плюсы Яндекс.Почты описывать не буду, потому что они и так пришли всем пользователям в сочном презентационном письме.

Какое-то двойственное чувство. Вроде, и большой шаг вперёд, а, вроде, часть изменений совершенно непонятна.",Ekamelev
" Открыт набор на курсы по биоинформатике в Санкт-Петербургском Академическом университете РАН на 2011/2012 год.

Курсы бесплатны и ориентированы на студентов средних и старших курсов информатических и математических специальностей, интересующихся биоинформатикой.

Основные цели — научить участников:

ориентироваться в современных задачах биоинформатики и уметь их решать,
понимать биологические термины и формулировать новые задачи на стыке информатики / биологии,
разрабатывать специфические для биоинформатики алгоритмы и эффективно их программировать.
Отличия от прошлого года:
включено больше курсов по алгоритмам и программированию,
из биологической программы выкинуты некоторые темы, слабо связанные с биоинформатикой, а также добавленны новые темы по биотехнологиям.
больше практики
Основная информация
Требования: математический склад ума, умение программировать на любом популярном языке программирования, базовые знания алгоритмов и структур данных. Предварительные знания в биологии не требуются.

Срок обучения: 1.5 года.
Начало занятий: 10 сентября 2011.
Интентивность: 6-7 пар в неделю (в основном по субботам).
Количество мест: 10.

Программа включает курсы по молекулярной биологии, биотехнологиям, алгоритмам в биоинформатике, статистике и многие другие. Необходимо сдавать экзамены.

Для участия в конкурсном отборе на курсы, пожалуйста, заполните форму приёма (до 31 августа)!

Ссылки: 
Сайт курсов по биоинформатике
Форма приёма (открыта до 31 августа 2011!)
Страница на Facebook
Страница «В Контакте»
Анонс набора прошлого года на хабре
Сайт курсов прошлого года (можно посмотреть программу и материалы)
Анонс набора на курс «Введение в индустрию IT» (GameChangers)
При поддержке компании JetBrains и лаборатории алгоритмической биологии СПбАУ РАН.",vyahhi
"Секвенирование генома человека десять лет назад явилось причиной вычислительной революции в биологии. Оно стало стимулом для создания бо́льшего числа новых алгоритмов, чем в любой другой фундаментальной области науки.

21 октября мы с Филлипом Компо и Павлом Певзнером из Университета Калифорнии запускаем онлайн-курс по алгоритмам в биоинформатике на Coursera. Уже до 21 октября можно посмотреть содержание первой главы курса и порешать задачи на нашем новом образовательном проекте Stepic, над которым работает команда широко известного в узких (биоинформатических) кругах проекта Розалинд.

Секвенирование генома является лишь одной из сотен биологических задач, которые стали неразрывно связаны с вычислительными методами, необходимыми для их решения. В этом курсе будут рассмотрены алгоритмические идеи, которые являются фундаментальными для понимания современной биологии. Такие вычислительные понятия, как динамическое программирование и теория графов, помогут изучить алгоритмы, применяемые в широком спектре биологических задач: сборке геномов, сравнении последовательностей ДНК и белков, поиске регуляторных мотивов, анализе перестроек генома, идентификации белков, восстановлении дерева жизни и многих других. На протяжении всего курса, участники будут применять реальные алгоритмы из биоинформатики к реальным генетических данным.


Каждая глава курса содержит отдельно взятую биологическую тему. Например, первая глава посвящена поиску точек начала репликации (позиций в геноме, с которых ДНК начинает делиться в клетке), и как эту с первого взгляда сугубо биологическую задачу можно решить с помощью простого программирования и анализа геномных последовательностей.

Программа курса по неделям

Поиск точек начала репликации: Where Does DNA Replication Begin? (Algorithmic Warm-up)
Вычислительная масс-спектрометрия: How Do We Sequence Antibiotics? (Brute Force Algorithms)
Поиск часто повторяющихся последовательностей (регуляторных мотивов): Which DNA Patterns Act As Cellular Clocks? (Greedy and Randomized Algorithms)
Сборка геномов: How Do We Assemble Genomes? (Graph Algorithms)
Геномные перестройки: Are There Fragile Regions in the Human Genome? (Combinatorial Algorithms)
Выравнивание строк: How Do We Compare Biological Sequences? (Dynamic Programming Algorithms)
Быстрый поиск подстроки, индексирование строк: How Do We Locate Disease-Causing Mutations? (Combinatorial Pattern Matching)

Вступительное видео профессора Певзнера


Massive Open Online Research
Важной составляющей курса являются открытые научные задачи, сформулированные к каждой главе. Дискуссию по каждой задаче будет курировать ведущий учёный-биоинформатик в каждой конкретной области. Например, открытые задачи из первой главы курса курируют Михаил Гельфанд (ИППИ РАН, МГУ), Uri Keich (University of Sydney) и Glenn Tesler (UCSD).

Ссылки по теме

Coursera:  Bioinformatics Algorithms (Part 1)
Stepic: Bioinformatics Algorithms: An Active-Learning Approach
Пресс-релиз курса от University of California, San Diego
Пресс-релиз курса от California Institute for Telecommunications and Information Technology
UC San Diego Team To Intro Massive Open Online Research
Предварительная детализированная программа курса (pdf)
Розалинд — платформа для изучения биоинформатики
Институт биоинформатики
",vyahhi
"Питер Симонсен с командой инженеров из Дании разработали новую технологию трехмерного изображения, Cheoptics360, позволяющую проецировать трёхмерные объекты или видео в воздухе. Демонстрационные прототипы Cheoptics напоминают голографические проекторы из фантастических фильмов.

Cheoptics360 использует четыре 3D-проектора, проецируемые изображения собираются в одно внутри прозрачной призмы-пирамиды, отображающей висящее в воздухе видео.

Прототип может показывать компьютерную анимацию и фильмы, и масштабировать их в размере от полутора до тридцати метров.

",kurokikaze
"Понмаю, что штука не первой необходимости — но почему до сих пор нет Linux-дистрибутива заточенного под использование с мультимедийных целях — как ОС для домашнего кинотеатра? Что б все сразу стояло — MythTV, Elisa итд; или есть?",r13
"

Вчера на сайте JetBrains стала доступна для скачивания новая версия среды разработки на Java – IntelliJ IDEA 11.1. 

Как всегда IntelliJ IDEA доступна в двух версиях: Ultimate – полная платная версия, а также Community Edition – бесплатная Open-source версия. Владельцы лицензии IntelliJ IDEA 11 Ultimate имеют возможность бесплатного обновления до 11.1.

Попробуем ознакомиться с тем, что нас ждет в новой версии продукта. 

Subversion 1.7
Поддержка Subversion (SVN) 1.7 на мой взгляд – одна из самых ожидаемых возможностей в IntelliJ IDEA за последнее время.



Работа с ветками в Git
Работа с веткми в Git стала удобнее. Новое меню, доступное для любого уровня проекта, теперь позволяет просматривать список доступных удаленных и локальных веток, а также выполнять над ними простые о перации, такие как Checkout, Compare, Merge и Delete.



Теперь статус бар всегда показывает текущую ветку редактируемого файла.

Также появился режим синхронизации веток для проектов с несколькими Git репозиториями. Если ветки в разных репозиториях имеют одинаковое название, операции над ними можно выполнять синхронно.

Разработка под Android
В IntelliJ IDEA 11.1 появилась поддержка инспекций на базе Android Lint. Кроме этого утилиты DDMS, Hierarchy Viewer and Draw 9 Patch теперь можно запускать прямо из среды.



Синхронизация проекта в IDE с Gradle
В IntelliJ IDEA 11.1 появилась возможность сравнивать и синхронизировать структуры проекта в IDE и в Gradle, чтог может спасти от головной боли и избавить разработчиков от механической работы.



Поддержка EcmaScript 6
Появилась поддержка EcmaScript 6 (Harmony) с возможностью предпросмотра кода, написанного на EcmaScript 6, скомпилированного в обычный JavaScript с помощью Traceur.



Разработка ActionScript и Flex
В IntelliJ IDEA 11.1 появилась гибкая возможность управления конфигурациями ActionScript и Flex проектов для различных платформ (Adobe Flash Player, Adobe AIR, Adobe AIR Mobile). Теперь любой Flash модуль может иметь несколько независмых конфигураций, для которых указываются собственные опции компиляции, упаковки и т.п.



Другое
Кроме описанных выше изменений IntelliJ IDEA 11.1 содержит ряд других:


Поддержка SQL диалектов Sybase и DB2
Поддержка Hibernate 4.0
Быстродействие
Обновление интерфейса

Более подробный список новвоведений можно посмотреть на странице What’s New.",andreycheptsov
"

Так вышло, что в офисе я работаю за Маком, а вот ноут — «17 MacBook Pro — не самый лучший, на мой взгляд, вариант в разрезе производительность/цена. Anyway, это тема другого разговора. Ноут под Ubuntu.
А теперь вопрос: если кодить на Ruby/RoR — кто ваш лучший ТекстовыйПриятель? Все верно, Textmate — Великий Фетиш и Идол всех программистов на Ruby под Mac. Итак задача была предельно проста — найти инструмент под Linux, максимально приближенный к Textmate по тому объему функционала который я использую в работе.


Мне было сложно определить, куда постить эту небольшую заметку потому что оно касается сразу трех тем: Linux, Ruby, юзабилити. По большому счету, все нижесказанное будет касаться приемов настройки и работы в Linux. Для пользователей Linux со стажем до 1 года :)
Как ни странно, после некоторых блужданий выбор пал на редактор лежащий „под носом“ — gedit. Плюсов прилично: входит в дефолтный комплект Ubuntu, легок на подъем, GTK, гибок за счет плагинов, бесплатен/opensource.

Итак, начнем подгонять под высокие стандарты :)



Прежде всего установил в дополнение к Monospace и два других не менее любимих шрифта:

MONACO.TTF — тот самый, который по дефолту в Textmate (качать отсюда, но я не уверен в легальности этого действа)

И CONSOLAS.TTF от MS. Тут немного сложнее:

1) Кчаем вьювер PowerPoint презентаций
2) Если не стоит, то ставим sudo apt-get install cabextract
3) Экстрактим: cabextract PowerPointViewer.exe
4) Еще экстрактим: cabextract ppviewer.cab

Все шрифты у нас должны лежать в ~/.fonts (если ее нет, то создаем такую директорию в домашней папке)

5) find -iname ‘*ttf’ -exec cp {} ~/.fonts/ \;

Далее в gedit: Правка — Параметры — Шрифт и Цвета

Теперь добавляем цветовые схемы и подсветку синтаксиса. 

У gedit все это хозяйство должно лежать в:
/usr/share/gtksourceview-2.0/styles/

По этому идем на замечательный ресурс, качаем, следуем инструкциям и переписываем в целевую директорию под администраторскими правами. Конечно же, что бы добиться максимального сходства с Textmate, прежде всего качаем одну из темных тем — Darkmate



С цветом тоже разобрались, переходим к самому вкусному — к функционалу. Это плагины. Прежде всего, если раньше не делали, делаем:

sudo apt-get install gedit-plugins

(Правка — Параметры — Модули)
Что добавляет нам парочку вкусных вкусностей в лице:

1. Встроенного терминала (как-то привык все руками делать — вот почему я не люблю NetBeans Ruby и Aptana)
2. Снипетов (нажимаем CTRL-SPACE и получаем быстрый доступ ко вводу шаблонов конструкций, или набираем первый оператор конструкции + TAB и получаем то же самое)
3. Файловой структуры (о да!) в боковой панели. На самом деле комфортная работа без этого с Ruby/RoR не возможна по определению.
4. Структура классов в текущем открытом файле
5. Таблицу символов.

Это основные плагины. Много всего другого можно найти там же. По умолчанию, плагины к gedit должны лежать в:

~/.gnome2/gedit/plugins
(Если какой-то директории нет — создаем)
Вся прелесть плагинов в том что они могут копать, а могут не копать. Это я к тому, что вы для комфортной работы, скорее всего, найдете еще десятка два нужных именно вам надстроек. (Между прочим, можно и самому чего-то дописать)



Теперь почти все хорошо. Но. Если синтаксис .rb файлов gedit последних версий поддерживает „искаропки“, то с для работы с .rhtml и .rjs необходимо предпринять парочку телодвижений — как и все под Linux, это очень просто:

wget grigio.org/files/x-rhtml.xml
sudo mv x-rhtml.xml /usr/share/mime/packages
wget grigio.org/files/rhtml.lang 
sudo mv rhtml.lang /usr/share/gtksourceview-1.0/language-specs/

В итоге, выходит очень мило и архиудобно для работы. Пользуйтесь на здоровье. Возможно я про что-то забыл или не учел… так напомните! Ведь, вроде, для этого и нужны комментарии, м?

P.S. Кстати. Если будет интересно, могу написать и про то как vim превращается в хардкорный и кроссплатформенный инструмент для Ruby-девелопера, девелопящего на не очень мощной машине или фанатеющего от vim как от такового. Let me know :)",r13
"Давайте сначала расскажу, что я вкладываю в понятие проектировщика.

Очень редкого человека я могу назвать проектировщиком. Чаще приходится использовать другие термины, сразу дающие понять в какой из областей проектирования он хорош.

Если он хорошо общается с клиентом и выведывает у него информацию о компании, производственных процессах, целевой аудитории, а затем превращает их во вводные и договоры, то это в первую очередь аккаунт или продавец (из нашей дискуссии в комментариях получается, что сюда больше подойдёт термин «бизнес-аналитик»). Он умеет не только слушать, но и говорить. Он делает так, чтобы клиент понимал, что они работают над проектом по одну сторону баррикад.

Если он формирует эту информацию в список функциональных требований, создаёт по ним структуру разделов будущего проекта, а потом превращает это в интерактивный прототип, то это UX-дизайнер.

Если получившийся прототип не только демонстрирует принципы пользовательского взаимодействия, но и учитывает SEO, отображение на разных типах устройств, сетку, размеры тех или иных элементов и расстановку акцентов, — это уже UI-дизайнер. Частенько UI-дизайнер оказывается просто дизайнером, который работает уже в фотошопе по прототипу, предоставленному UX-дизайнером.

Если же специалист в состоянии взять такой прототип и написать по нему функциональную спецификацию, а то и техническое задание (на проектах посложнее) с диаграммами данных, то это уже технический писатель.

Так вот проектировщик в моём понимании может обладать одновременно всеми этими компетенциями плюс дополнительным набором качеств, которые помогут ему делать успешные проекты. Вот основные:


Осведомлённость обо всех дальнейших этапах разработки после проектирования и способность оценить их себестоимость и, по результатам, эффективность;
Набор знаний по психологии. Это нужно и для общения с клиентом на нулевом этапе и для понимания того, как будут себя вести пользователи проектов и почему;
Про поисковую оптимизацию я уже говорил, но не будет лишним повториться;
Опыт предпринимательской деятельности. Это, конечно, высший пилотаж, но пункт очень важный. Это позволит разговаривать с клиентом на одном языке. Те, кто работают в студиях, меня легко поймут: часто в критических ситуациях, когда исполнители и клиенты не могут договориться, в бой вступает сам собственник студии и дело идёт на поправку. Этого бы не понадобилось, если бы менеджер проекта (или аккаунт, если угодно), сам обладал какими-нибудь своими, пусть маленькими, проектами, и уже расставлял приоритеты в работе в соответствии с желанием помочь клиенту поскорее заработать, а не сделать проект понавороченнее (а значит и дороже).


А теперь давайте представим себе, что произойдёт, если такой проектировщик будет менеджером проекта. Просто перечислим плюсы и минусы.

Плюсы

Отсутствие «испорченного телефона» при сборе требований к проекту в самом начале пути. Потому что передавать их нужно будет самому себе;
Знакомство и постоянное общение с клиентом позволит быстро получать недостающую информацию, напрямую обращаясь к нему (сейчас большинство студий и так не боятся знакомить клиентов со своими исполнителями, но доверительные отношения чаще возникают именно между проджектом и клиентом);
Отсутствие «испорченного телефона» при передаче прототипа в разработку. Проектировщик не только осведомлён о потенциальных тонких местах проекта, но и заинтересован в том, чтобы их устранять, ведь ему не на кого переложить ответственность за них (в отличие от сценариев, где менеджер проекта и проектировщик — это разные люди);
Скорость реакции на комментарии клиента. Не нужно говорить: «Сейчас спрошу у Васи, когда он внесёт ваши правки». Можно сразу сказать: «Я внесу правки тогда-то». Плюс исчезает необходимость сводить Васю с клиентом для уточнения непонятных моментов в новых комментариях.

 
Минусы

Возникает сложность в написании функциональных спецификаций. Потому что если ты менеджер проекта, то считаешь, что всегда можешь донести непонятные моменты до разработчиков на словах, по мере их возникновения. Несмотря на это, писать функциональные спецификации всё-таки нужно. Но мотивация ниже, чем у просто технического писателя;
Таких людей сложно найти. Проектировщиками в большинстве случаев становятся технари (дизайнеры всё-таки чаще останавливаются на UI). Им часто тяжело общаться с клиентами. Ко мне периодически обращаются незнакомые люди, которые хотели бы со мной поработать, и показывают неплохие прототипы в качестве примеров. Но они начинают общение запанибратски, либо чрезмерно официально и заискивающе, что демонстрирует их неумение эффективно наладить первый контакт. А для меня это очень важно, потому что в большинстве случаев я ищу именно тех людей, которые потенциально станут проектировщиками-менеджерами. Пока не существует таких кузниц кадров в виде курсов или интенсивов, где давалась бы комплексная информация по всем областям, которые я перечислил в начале статьи. Кандидату в проектировщики сейчас пришлось бы посетить параллельно несколько курсов, что было бы затратно и по времени, и по деньгам. Студии тоже частенько не в состоянии самостоятельно выковать такого специалиста. Ими становятся люди определённого склада ума, высокой замотивированности и любви к своей профессии.

 
Поэтому вся идея выглядела бы утопичной, если бы мне не удалось однажды воплотить её в жизнь и протестировать в рамках компании, в которой я работал, а впоследствии и в своём бюро проектирования. Людей, которые со мной работают, я искал на протяжении пяти лет (их можно пересчитать по пальцам одной руки), и мне не приходилось их обучать. Мы просто делились друг с другом опытом в процессе работы.

Если вы один из таких универсалов, то у меня для вас хорошие новости. Впрочем, вы и так об этом знаете.",Ekamelev
"Санкт-Петербургская группа пользователей технологий Google приглашает на хакатон по Google Chrome в Санкт-Петербурге, который состоится при поддержке Google и движения GTUG (Google Technology User Group) в России и СНГ 27 и 28 августа 2011 года (ближайшие выходные!).

Цель этого конкурса — создать новые веб-приложения и расширения для браузера Google Chrome, которые сделают его еще более удобным для пользователей.

Ключевые докладчики из Google: Ilmari Heikkinen (Developer Programs Engineer) по видеосвязи из Москвы и Mike West (Chrome Advocate) в Санкт-Петербурге.

Мероприятие бесплатное, но требуется регистрация.

Место проведения: бизнес инкубатор QD.

Трое победителей получают ноутбуки Mac Book Air, которые будут вручены во время церемонии награждения на Google Developer Day 2011 Russia. Дополнительные 4-ые и 5-ые места будут награждены ценными призами.

Подробности обо всей серии хакатонов, в том числе в других городах России и СНГ, в официальном блоге.

Организационные партнёры: QD.",vyahhi
"Чтобы считаться грамотным в широком смысле этого слова, человек должен не только писать без ошибок и уметь считать, но и разбираться в истории, политике, быть начитанным и так далее. Сейчас в этом списке прочно укрепилась и компьютерная грамотность — было бы очень странно ее там не встретить, учитывая, что мы на каждом шагу имеем дело с компьютерами уже несколько десятилетий.

Но компьютерные технологии — не единственные, которые получили такое бурное развитие за последнее время. Например, космические корабли бороздят просторы Вселенной… правда жизнь произвольно взятого человека далека от исследований космоса. Да и адронный коллайдер никак не вмешивается в существование большинства людей (запустили, конец света не настал, вот и собственно всё).

Совсем другое дело — биотехнологии, и вообще вся область знаний, из которой у них растут ноги (биология и генетика в частности). Биология уже прочно заняла место в повседневной жизни, но, к огромному сожалению, разбираться в ней пока не считается необходимым.

Поэтому мы и создали русскоязычный открытый онлайн-курс ""Молекулярная биология и генетика"", к которому ещё можно присоединиться до 24 ноября 2014, либо проходить потом в свободном режиме. Ниже немного расскажем о нём.

Примеры заблуждений
Немного обидно приводить такой заезженный пример, но деваться от него некуда: ГМО (генетически модифицированные организмы). Очень популярная тема обсуждений — что это такое, насколько это вредно, противоестественно или оправданно. И очень правильно, что эта тема популярна: ее стоит обсуждать. Но для этого надо в ней разбираться. Или наоборот — есть темы, которые не обсуждаются, а должны бы. Например, усиленное самолечение антибиотиками вирусных инфекций.

Я сейчас пишу этот текст, а в соседнем окне открыта русскоязычная Википедия, в которой черным по белому написано, что антибиотики обычно используются при борьбе с вирусами. Это провал. И если по поводу критериев образованности еще можно спорить, то на то, как люди друг друга не лечат, а калечат, уже просто больно смотреть.

Самое смешное, что для того, чтобы избежать таких досадных заблуждений, достаточно самых базовых знаний биологии. Не надо иметь красный диплом биологического факультета; не нужно даже проходить длинные углубленные онлайн-курсы вроде замечательного ""Introduction to Biology — The Secret of Life"" от Эрика Лендера на EdX — хватит простого вводного курса, чтобы освежить школьные знания и освоить азы клеточной биологии и генетики.

Формат курса
Молекулярная биология и генетика – массовый открытый онлайн-курс (MOOC) на платформе Stepic, представляет из себя три недели коротких лекций на русском языке, перемежающихся разнообразными тестами. Как и на большинстве других MOOC-платформ, видеозаписи доступны в любое время дня и ночи, тесты проверяются автоматизированной системой, а курс проходят тысячи людей одновременно.

Содержание курса соответствует первому месяцу программы, разработанной для студентов-программистов Института биоинформатики, поэтому мы будем особенно рады видеть среди слушателей людей из сферы IT. Кстати, про этот и два других курса по Python и Linux также есть кратко на хабре.

За время курса слушателям в нескучной форме рассказывается, как устроена живая клетка и какие процессы в ней происходят, чем отличаются от клеточных организмов вирусы, как устроен ген, как организуется генетическая информация и многое другое.

Конечно, за три недели невозможно рассмотреть все применения этих тем в повседневной жизни, поэтому мы сделали акцент на теории. Наша главная цель — дать участникам курса комплекс знаний, который поможет самостоятельно отвечать на возникающие вопросы. Присоединяйтесь! 

Программа курса

Клеточная биология
Биологическая систематика
Структура мембран
Прокариоты: строение клетки
Прокариоты: организация генетического материала
Эукариоты: строение клетки
Эукариоты: организация генетического материала
Структура нуклеиновых кислот
Генетический код
Белки
Биологические макромолекулы
Митохондрии и хлоропласты
Вирусы

Молекулярная биология
Центральная догма молекулярной биологии
Репликация
Транскрипция
Сплайсинг, альтернативный сплайсинг
Трансляция, рибосомы
Фолдинг белков
Прионы

Генетика
Наследование, роль ДНК в наследственности
Рекомбинация
Наследственные заболевания
Вертикальный и горизонтальный перенос генов
Мутации
Естественный отбор
Эволюция: микро- и макроэволюция



Внимание, опрос!",vyahhi
"Показательно, что в целом — тенденция на упрощение. Дизайнеру на заметку.





























(Отсюда)",r13
"
Нактнулся на проект TCOD — на мой взгляд, одна из самых продвинутых по графике roguelike. Я говорю о классическом (единственном?) виде roguelike — ASCII-графике. 
Красота — абалденная! Конечно, не совсем честное ascii, но все же… Да, есть один минус — релизов еще небыло, но что-то мне подсказывет что такого LOS и света, я еще ни где не видел. Ждем-с…",r13
"
Технология Triggerfish, также известная как «симуляция сотовых сетей», не так уж нова. В 1990 подобные устройства использовались при поимке Кевина Митника. Представляясь сотовой вышкой, оборудование triggerfish ждет когда ближайшие телефоны отправят серийный номер, телефонный вызов или другие данные прямо в компьютер наблюдающих. Первые описания технологии говорят что из за ограниченного радиуса действия она применима как последний этап определения положения сотового телефона. До этого сотовые провайдеры сначала должны предоставить примерное местоположение (например, последнюю использованную соту).

Этим летом Американский союз защиты гражданских свобод и Electronic Frontier Foundation обратились в суд с требованием предоставить документы по отслеживанию мобильных телефонов. С августа они получили множество документов в рамках Freedom of Information Act (последний из них датирован 6 ноября), и разместили их в Интернете. В блоге Daily Kos Рейчел Майерс обратила внимание на несколько мест в документах, из которых следует что технология Triggerfish может применяться гораздо шире, чем считалось ранее.

Небольшое отступление. Чтобы провайдер выдал правоохранительным органам информацию об интересующем их телефоне, им недостаточно просто прийти и потребовать — надо представить доказательства (Communications Assistance for Law Enforcement Act, Stored Communications Act). И требования к доказательствам становятся всё строже с каждым годом. Чтобы использовать средства слежения за телефоном, также необходимо разрешение суда.

Судя по руководству по электронной разведке, выложенному в сеть согласно Freedom of Information Act, устройства triggerfish могут обходить ограничения, налагаемые на такого рода устройства в США. Как указано в этом руководстве, «эти ограничения относятся только к сбору данных о входящих и исходящих звонках посредством собственных средств провайдера — но не к информации, собранной непосредственно правоохранительными органами». Скорее всего, определение положения мобильного телефона теперь технически возможно даже без содействия со стороны оператора.

UPD: спасибо за минусы в карму.",kurokikaze
"

Томас Бискап запустил проект по сбору средств (на IndieGoGo) по воскрешению оригинальной roguelike-игры ADOM
Необходимое финансирование для разработки: $48K

Обещают:


Стабильный релиз под Windows, Linux, MacOS, Amiga, NetBSD, FreeBSD (Android и iPad/iOS — в долгосрочных целях)
Постоянный багфиксинг
Балансировка внутриигровых систем и детализация мира
Обновленный UI
Тайловая графика
Аудио эфекты и музыка
Переписанное руководство пользователя
Новый игровой контент




Не смотря на то, что сейчас Томас нуждается в средствах игра останется бесплатной и возможно (скрестим пальцы) с открытым исходным кодом.

Для некоторых из нас эта новость покруче грядущего Baldur's Gate для iPad.

P.S. Хотите своего личного Томаса Бискапа на выходные и исходники оригинального ADOM? Запросто! Достаточно сделать пожертвование в $50K!

P.P.S. Нашел свой пост от 2008 про ADOM. Смешно. Пророчески.

UPD. У Томаса все вышло! Ждем новый АДОМ!

",r13
"Привет, Хабр! Мы рады сообщить о выходе крупного обновления IDE – IntelliJ IDEA 2017.2. Поскольку далеко не все следят за новостями в нашем официальном блоге (а также потому, что многим удобнее будет прочитать об этом на русском), в этом посте я расскажу что ждать от новой версии IDE. Кто спешит попробовать обновление самостоятельно, качайте с сайта JetBrains, либо из Toolbox App. Все остальные, добро пожаловать под кат.




Java
Автодополнение остается одной из самых востребованных функций IDE и поэтому продолжает улучшаться от релиза к релизу. В этот раз, улучшения коснулись функции Smart Completion. 

Во-первых, IDE научилась подсказывать выражения использующие Builder паттерн:



Во-вторых, подсказки содержащие цепочки вызовов, ранее доступные по второму вызову Smart Completion, теперь показываются при первом вызове, а кроме того сортируются на основе их популярности проекте:



Последнее улучшение пока доступно только после компиляции проекта компилятором IDE (иначе говоря, функция пока недоступна, если компиляция делегируется Gradle).

Анализ потока выполнения кода (control flow analysis) также стал умнее и теперь находит большее количество потенциальных ошибок в коде, незаметных с первого взгляда.

Во-первых, IDE замечает условия, противоречащие или повторяющие друг друга. Напрямую такой код не является причиной ошибки, однако часто он свидетельствует о ней косвенно.



Кроме того, IDE теперь научилась понимать контракт многих методов, и использовать это для нахождения логических проблем в коде. Например, если метод Collection#isEmpty() возвращает true, это означает, что итерация по этой коллекции не будет выполняться, а вызов метода List#get(int index > 0) приведет к ошибке.



Новые инспекции включают: Replace with Set.of, Add Thread#onSpinWait() (обе требуют Java 9), а также Extract set from comparison chain.

Последняя может быть очень полезна, т.к. она помогает избавить от громоздких конструкций и сделать код гораздо читабельнее:



Java 9 продолжает медленно но неумолимо двигаться вперед. Поэтому в обновлении мы добавили диаграммы модулей, которые, надеемся, сделают работу с модулями еще удобнее:



Окно Run для Spring Boot теперь отображают информацию о состоянии запущенных приложений, полученную с помощью Endpoints: Beans, Health и Mappings.



Отладчик теперь позволяет удобно фильтровать массивы и коллекции в окне Variables, Evaluate Expression, Watches, Inspect и других.



Kotlin 1.1.3
Кроме поддержки более свежей версии языка, IDE получила подсказки имен параметров методов (Parameter Hints, знакомые по Java и Groovy), подсказки выведенных типов (Type Hints), семантическую подсветку (также знакомую ранее по Java и другим языкам), а также подсветку TODO элементов.

Подсказки выведенных типов – принципиально новая функция, делающая код более читаемым.



Groovy 2.5.0
Поддержка Groovy 2.5.0 главным образом включает поддержку новых аннотаций: groovy.transform.builder.Builder#includeSuperProperties, groovy.transform.AutoImplement, и groovy.lang.Delegate для методов.

Контроль версий
Окно инструментов Log для Git предоставляет две новые функции: Revert Commit (откат изменений), а также Reword Commit. Последняя позволяет изменить описание неотправленного изменения.



Кроме этого, IDE получила возможность автоматического форматирования описаний изменений согласно настройкам (Version Control | Commit Dialog): blank line between the subject and the body, limit body line, и limit subject line. При редактировании описания изменения в Commit диалоге стали доступны инспекция и функция Reformat:



Пользовательский интерфейс
Область редактора внутри попапа Find in Path получила левую панель с элементами навигации и индикаторами локальных изменений. Попап отображает прогресс поиска. Результаты поиска с одних и тех же строк объединяются в один результат.



Элементы интерфейса на Window 10 стали выглядеть нативно.



В случае нескольких мониторов с высоким разрешением (HiDPI), теперь IDE правильно определяет разрешение: в зависимости от того, на котором мониторе элемент отображается (ранее всегда использовалось разрешение главного монитора).

Размер шрифтов теперь также автоматически корректируется в зависимости от разрешения.

JavaScript и TypeScript
В TypeScript-коде, как и в Java, теперь показываются имена параметров. Также стало доступно действие Expression Type (ранее знакомое по Java):



Действие Rearrange Code, знакомое тем, кто работал с Java-кодом в IntelliJ IDEA, стало доступно для JavaScript и TypeScript. Оно позволяет упорядочить код внутри классов.



С помощью нового Move Symbol рефакторинга можно безопасно переносить классы, методы и переменные из одного ES6-модуля в другой. IDE автоматически обновит все импорты и экспорты. 



В новой версии мы улучшили поддержку Angular Material, — библиотеки UI-компонентов для Angular. Теперь IDE понимает и подсказывает специальные атрибуты из Angular Material.



При тестировании JavaScript-приложений с Mocha теперь можно узнать, насколько хорошо код покрыт тестами. А при работе с Karma теперь можно запускать каждый тест отдельно.



Автодополнение и навигация в JavaScript-коде теперь учитывает конфигурацию проекта (например, aliases), описанную в webpack.config.js.



Производительность
Любой модуль теперь можно указать как “незагруженный” (Unloaded). В этом случае IDE исключит его из индексации и компиляции.



Эту функцию рекомендуется использовать только для исключения модулей, от которых не зависят модули, с которыми вы планируете работать. Если вы выполняете рефакторинг, поиск или другую операцию, на которую потенциально может повлиять незагруженный модуль, IDE сообщит об этом:



Кроме модулей, теперь также стало возможно исключить файлы из индексации по выражению. Это может быть полезно, если вы хотите исключить файлы определенного типа, в именах которых повторяются определенные паттерны (например, *_min.js).

Процесс индексации теперь можно приостанавливать. Это может быть полезно, когда нужно срочно высвободить ресурсы CPU.

Вкратце, это все важные изменения. Подробнее об изменениях можно узнать на странице What’s New. Там же можно скачать обновление.

Буду рад ответить на любые вопросы.

Программируйте с удовольствием!",andreycheptsov
"Привет Хабр! Спешу поделиться хорошей новостью. Работа над IntelliJ IDEA 2017.1 закончена, и новую версию IDE можно наконец скачать и попробовать. В этом обновлении исправлены многие важные баги а также появились улучшения для многих поддерживаемых языков, фреймворков и встроенных инструментов. Ниже краткий обзор наиболее важных изменений.



Java 9: полностью поддерживаются последние билды JDK 9, работает помощь при импорте проекта и подсказки при редактировании деклараций модулей. Встроенные инспекции позволяют валидировать декларации модулей и корректировать зависимости проекта с помощью quick-fixes.



Java 8: улучшены quick-fixes для переноса циклов for в вызовы Stream API — теперь поддерживаются более сложные случаи. Также добавлен quick-fix, превращающий вызовы Stream API обратно в циклы for, что удобно для отладки или изучения кода.



Отладчик с поддержкой асинхронного кода: появились stacktraces для асинхронного кода — данные из места вызова асинхронного кода подставляются в stracktrace, связанный с исполнением этого кода. Это позволяет сосредоточиться на отлаживаемом коде. Улучшенная команда Smart Step Into теперь также поддерживает асинхронный код и лямбда-выражения, выполняемые в других потоках.



Улучшена поддержка VCS: на панель Log для Git и Mercurial добавлены новые параметры отображения, в диалоговом окне Diff появился параметр Ignore imports and formatting, а функция File History для Git теперь работает быстрее. Также в окно Branches для Git добавлены избранные ветки и speed search



Поиск: диалоговое окно Find in Path, в которое ранее уже была добавлена вкладка Preview, полностью переделано — теперь сразу отображаются мгновенные результаты. Что еще важнее, простым нажатием клавиши Enter любой выбранный результат теперь можно открыть в редакторе.



Spring: обновление Spring Testing принесло поддержку Spring Boot 1.4.3 и будущей версии Spring 5.0. Инструменты Spring Data обновлены до версии 2.0 (в т. ч. MongoDB, Redis, Solr, KeyValue, Gemfire, Apache Cassandra, REST, Neo4j, Couchbase и Elasticsearch). В окне инструмента Spring появилась новая вкладка Data с удобной навигацией по репозиториям.



Gradle: поддержка Composite Builds усовершенствована — теперь IDE автоматически находит includeBuild в конфигурации Gradle и соответственно настраивает проект.

Kotlin 1.1: среди прочего в новой версии этого языка для JVM появились coroutines — новый неблокирующий асинхронный API. Также полностью поддерживается компиляция в JavaScript. Это значит, что строки, коллекции, последовательности, массивы и другие стандартные API можно использовать в приложениях на JavaScript.

Scala: новый Scala плагин предлагает обновленный и более удобный Project Wizard, много улучшений поддержки SBT, дополнительные подсказки для Akka, и новый REPL режим в Worksheet.

JavaScript: реализована первоклассная поддержка Vue.js, множество новых настроек Code Style для JavaScript и TypeScript, более быстрые и надежные интеграции с Angular, ESLint и TSLint (в т. ч. поддержка языковых сервисов и quick-fixes, использующих TSLint). Кроме того, редактировать зависимости проекта в package.json стало проще благодаря автодополнению имен и версий пакетов, тесты Mocha и Jest стало удобнее запускать, а на иконке Run в гаттере теперь отображается состояние теста.



Инструменты для баз данных: IntelliJ IDEA теперь позволяет переносить схемы таблиц и данные между любыми базами данных (да, даже из MySQL в Microsoft SQL Server и обратно).

Эмодзи: редактор теперь поддерживает символы Unicode для эмодзи (например, в комментариях).

Android Studio 2.2.2: в новую версию включены все изменения из Android Studio 2.2.2.

Docker: плагин Docker теперь поддерживает Docker for Mac и работает через «unix://».

Windows: 64-разрядный установщик для Windows позволяет выделить IntelliJ IDEA больше оперативной памяти.

Go: Gogland, новая Go IDE анонсированная несколько месяцев ранее стала также плагином для IntelliJ IDEA Ultimate.

Подробнее об IntelliJ IDEA 2017.1 можно узнать на странице What’s New.

P.S. Также вам может быть интересно попробовать приложение Toolbox App — с его помощью удобно устанавливать и обновлять IDE и открывать проекты. Toolbox App позволяет быть в курсе последних релизов и, если что-то пойдет не так, откатить установку до стабильной версии.

Как всегда, буду рад ответить на ваши вопросы. Баг-репорты можно отправлять через баг-трекер.

Программируйте с удовольствием!",andreycheptsov
"Хороший проектировщик – на вес золота. Остальные участники производственного процесса создают тело сайта. Проектировщик – его душу. Так каким же должен быть проектировщик, гордо называющий себя профессионалом?

Должен быть немножко продажником. Не краснеть и не запинаться во время общения с заказчиком. Уметь слушать, беспристрастно анализировать услышанное и тут же задавать нужные вопросы. Проектировщик, сгорбившийся за компьютером и не показывающий носа из офиса, не сможет презентовать свою работу.

Должен быть немножко типографом. Ему знакомы разноуровневые заголовки, поведение текста и графики, ширина строк, форматы вывода дат и чисел и прочая ерунда, которая кажется ненужной на этапе проектирования. Но потом оказывается, что Константин Илларионович Константинопольский не уместился на одной строке, а жаловаться не на кого.

Должен быть немножко дизайнером. Первая сетка сайта, которую увидит заказчик, – это сетка, предложенная в прототипе. Может оказаться так, что заказчик будет в восторге, а дизайнер и посетители будущего сайта сойдут с ума.

Должен быть немножко программистом. Очень часто при разработке сложных проектов, необходимо учитывать, что со временем они станут ещё сложнее. Архитектуру придумает программист, но основываясь на прототипе проектировщика. Если там не будет явного указания на то, что проект будет усложняться со временем, это выльется в многомесячные переделки сайта из-за какого-нибудь непредусмотренного пустяка.

Должен быть немножко сеошником. Любой сможет объяснить, почему карта сайта, тупой текст на главной и переполненное меню навигации – это отстой. Но мало кто объяснит, куда делись тысячи посетителей после переделки устаревшего сайта.

Должен быть немножко контент-менеджером. Сложно иметь представление об админках большинства современных cmsок, но ещё сложнее каждый раз разрабатывать функционал оных с нуля.

Должен быть грамотным техническим писателем. Отмазки вроде «я делаю крутые прототипы, а техническую документацию по ним пусть пишут другие лохи» прокатят только в студиях, специализирующихся на дизайне. Программистом нужны качественные ТЗ, а кто сможет написать его лучше него, проектировщика сайта?

Должен быть немножко политиком. Нет смысла убеждать заказчика в том, что он не прав, если последний платит тебе деньги за реализацию сайта своей мечты, а не сайта-инструмента для заработка. И, с другой стороны, не нужно соглашаться со всеми решениями заинтересованных, но не компетентных людей и молча править прототип, когда речь идёт о внутренних проектах компании. Принципа золотой середины никто не отменял.

Должен быть немножко Лермонтовым и немножко Пушкиным. Пушкины – это люди, которые с первого дня получения задания садятся за компьютер и фигачат, фигачат, фигачат прототип, исправляя результат по десять раз на дню. А Лермонтовы из семи дней пять думают, а два делают всё начистовую с первого раза. Хороший проектировщик не ударится ни в одну из этих крайностей.

Должен быть немножко мамой и немножко папой. Хороший проектировщик не бросит своё детище после принятия прототипа и технического задания. Он будет следить за каждым этапом разработки сайта, вплоть до бета-тестирования, искореняя ошибки и несоответствия. Ведь кто может знать о проекте больше, чем он?

Ты считаешь себя хорошим проектировщиком?",Ekamelev
"Санкт-Петербургский Академический университет РАН при поддержке компании JetBrains запускает открытые курсы по биоинформатике в Санкт-Петербурге.

Курсы ориентированы, преимущественно, на студентов старших курсов математических и технических специальностей, интересующихся биоинформатикой. 

Курсы открыты для вольнослушателей и бесплатны (но необходимо заполнить форму). Для вольнослушателей возможна аттестация (проверка домашних заданий, проведение и проверка экзаменов) с последующей выдачей дипломов.  Программа составлена с возрастанием сложности, поэтому для понимания лекций будет необходимо знакомство с уже прочитанным материалом.

Лекции и семинары будут проходить на базе СПбАУ (ст.м. Площадь Мужества) по субботам.

Осенью 2010 планируются:

Молекулярная биология для биоинформатиков — saba.spbsu.ru/courses/molbiol 
Основы биоинформатики — saba.spbsu.ru/courses/bioinf 
Семинар (приглашенные лекторы) — saba.spbsu.ru/courses/seminar 
Алгоритмы в биоинформатике (если будет время, если нет — то на весну) — saba.spbsu.ru/courses/bioalgo 

Вся информация по курсу, расписание, материалы и программы лекций размещены и обновляются на сайте saba.spbsu.ru/courses/info.

Расскажите, пожалуйста, своим знакомым, которых это может интересовать.

Читайте так же о курсе «Введение в индустрию IT», об открытии осеннего семестра в Computer Science клубе и наборе в Академию Современного Программирования.",vyahhi
"
Возможно, для многих завзятых фанатов это уже и не новость — но я был обрадован узнав, что труд Питера Джексона можно будет считать полностью завершенным. Во всяком случае в плане творчества Толкиена. «Приквел» киноэпопеи «Властелин Колец» — «Хоббит» будет находиться под заботливым крылом до 2010 года и скорее всего будет разделен на две части. Можно любить|быть нейтральным|ненавидеть то, как Джексон воспроизвел знаменитую классическую фентези-трилогию Толкиена — но чего отнять нельзя — так это маленького переворота, который произвел фильм в индустрии кино. Та планка которую задал фильм для всех последующих фильмов насыщенных спецэффектами, те новшества в технологии построения батальных сцен с большим количеством виртуальных актеров — все это уже стало вехой. 

Практически уверен, что из под этого питерджексеновского крыла, вылетит еще один блокбастер достойный занять место в учебниках по современной кинематографии. Режиссер который будет заниматься «Хоббитом» еще не объявлен. Известно только то, что скорее всего мы увидим какую-то часть старого съемочного и актерского состава и в новом фильме. 

Ждем официальных новостей.",r13
"

Речь пойдёт о начинающих проектировщиках, которые делают интерактивные (и не очень) прототипы, и дизайнерах.
Рассмотрим классический сценарий. Исполнитель получает заказ, оценивает сроки своей работы и садится за неё в последний возможный момент. У кого-то этот момент находится в начале календарного плана, у кого-то — в ночь перед сдачей проекта, всё зависит от степени самоорганизации и ответственности.

Почему я сказал, что речь пойдёт именно о начинающих? Дело в том, что они чаще всего не до конца осознают, что этап проектирования и дизайна по умолчанию рассчитан на большое количество правок. Ведь именно на этих этапах исполнитель превращает некое абстрактное видение в реальные картинки и макеты. И клиент, увидев эти картинки, начинает понимать, как бы ему хотелось их изменить, чтобы достичь своих целей. Кстати, такое же понимание приходит и к исполнителю, потому что редкий человек способен держать перед внутренним взором десятки отрисованных детальных макетов.

Таким образом эти проектировщики и дизайнеры уже в первых версиях своих работ стараются уделить максимум внимания деталям и мелочам, при этом забивая на организацию проекта в целом, не думая о том чтобы его можно было легко редактировать в будущем.

Если речь идёт о прототипе, то ближе к сроку сдачи работы, проектировщики начинают забивать на мастера и стили, добавляя на страницы всё больше элементов, сделанных на скорую руку, лишь бы красиво стояло и показывало суть.

Дизайнеры частенько забивают на папки, слои, придумывают непонятные названия элементов. Картинка в итоге получается неплохая, но вот редактировать её потом замучаешься. Всем когда-нибудь приходилось перерисовывать какой-нибудь смердженный элемент заново, разбивая на слои.

И вот вроде бы здорово получилось в итоге. В прототипах всё кликается, в макетах всё красиво, но вдруг приходит пачка из пятидесяти комментариев от клиента. И наши горе-исполнители понимают, что для внесения этих правок для начала придётся проделать кучу работы по ликвидации хаоса в первых версиях.

Вот тут и начинает накапливаться негатив к клиенту, который никак не отступится со своими бесконечными комментариями, часть из которых ещё и абсолютно неадекватные. И чем меньше исполнителю хочется вносить эти комментарии, тем более неадекватными они ему кажутся априори. В результате — по несколько дней на внесение пятнадцатиминутных правок, отсутствие желания вступать в дискуссии с клиентом, потеря интереса к собственному проекту, лишь бы поскорей абы как добить его.

Могу дать несколько советов:


Учитесь создавать такие макеты, которые изначально предназначены для внесения большого количества правок;
Оперативно вносите правки в контентные области ваших проектов, потому что эти изменения не повлияют на весь проект в целом, а вот скорость работы порадует клиента;
Правки в навигацию и сквозные модули вносите только после сбора всех необходимых дополнительных вводных и обсуждения с клиентом;
Научитесь демонстрировать клиентам изменения от версии к версии проекта. Первоначальный вариант всегда должен быть под рукой наравне со всеми последующими;


В этом случае вы перестанете негативно относиться к правкам и комментариям, вам это даже начнёт нравиться. У вас это не будет занимать много времени, зато в глазах клиента вы проделаете огромное количество работы, которая делает его счастливым. После этого клиенты, столкнувшись в будущем с новыми дизайнерами и проектировщиками, которые неделями вносят правки и в результате выдают не очень хороший результат, обязательно вернутся к вам.",Ekamelev
"
Наткнулся вот на такой аппарат. Случилось это в связи с поиском кртриджей на NES и острым деффицитом оных у меня. С наружи, вроде как DVD плеер (с возможностью играть DivX с внешнго носителя подключенного через USB) — что тоже приятно. Сознательно не останавливаюсь на очевидных функциях плеера, потому что главное внутри — эмулятор NES, который умеет работать с .nes — образами. Два джостика. Цена $25-50. Все это на столько приятно, что даже и не знаю что может быть лучше (с учетом того, что мест откуда можно скачать буквально *все* игры существовавшие на NES достаточно. http://www.freeroms.com/ например)… пожалуй, только Speccy в таком же форм-факторе с возможностью подключать по USB клавиатуру. Качество эмуляции хорошее (есть некоторый лаг, но приемлимо), качество картинки на выходе по SCART — однозначно лучше чем через композитку с NES последних редакций.
Однозначно рекомендую ностальгирующим и их детям! Столько счастья за $50 я не получал пожалуй очень давно :)+ не стоит забывать что XORO HSD2020 умеет работать как вполне-себе-ничего-такой плеер мультимеда-контента.

Мне такого устройства давно не хватало…",r13
"
Еще один год прошел, а текстовые roguelike-игры и не думаю загибаться под натиском Кризисов и прочих Биошоков. Напротив, ситуация диаметрально противоположная — на мой взгляд движение рогаликов сейчас на много сильнее и шире, чем скажем 3 года назад. Хоть еще не совсем конец года, но уже сейчас можно подвести некие итоги и заглянуть в следующий календарный год. Итак, самое интересное что ждет фанатов roguelike в 2008 году.

На мой взгляд, одно из самых вкусных заявлений от Kornel Kisielewicz — создателя знаменитых DoomRL, Berserk! прочего.

AlienRL — обещает довести до ума и выпустить финальную версию;
DoomRL — о да! Версия 1.0 и графическая версия
Darkness и StarDreamer — два новых загадочных проекта

Так же, я очень жду публичной беты TCOD — очень красивой игры, образчика ascii-арта. Обещают.

Очень много обновлений и (да! да!) Mac OS X порт Incursion — рогалика с *самой* тщательно проработанной ролевой системой (порт ADnD) и моего фаворита 2007 года. Новые расы, псионика, новые континенты, открытые пространства, пересмотренный AI монстров, новый алгоритм построения городов… ох, всего и не перечислить.

Новый, 2008 год, обещает быть очень насыщенным для храброго ""@""! Удачи вам рыцари ascii и пусть ни когда не ломаются ваши numpad-ы :) С наступающим! :)",r13
"Почти год назад, летом 2017 года, на базе МФТИ состоялась традиционная летняя школа от Института биоинформатики. Основной темой школы в этом году стал интеллектуальный анализ данных. Почему? Количество получаемых данных в биологии и медицине растет с невероятной скоростью. В то же время обнаружить ранее неизвестные вещи в таком объеме информации вручную физически невозможно (да и классическими алгоритмами уже тоже сложновато), поэтому приходится использовать статистику и дополнять естественный интеллект искусственным.

Именно этим активно и занимались участники летней школы. В этом посте собрано 22 видеозаписи лекций со слайдами и описанием для всех интересующихся темой анализа данных в биоинформатике. Лекции, которые можно смотреть без дополнительной подготовки, отмечены звёздочкой «*» (таких половина).



1*. Введение в биоинформатику (Александр Предеус, Институт биоинформатики) 

Видео | Слайды

В лекции рассмотрены основные области, в которых работают биоинформатики в науке и индустрии, особенности биоинформатики и причины ее популярности сегодня. 



2*. Введение в машинное обучение (Григорий Сапунов, Intento)

Видео | Слайды

Постоянный рост количества данных способствует развитию все более и более сложных процессов обработки, поиска и извлечения информации. Один из способов решения подобных задач заключается в использовании искусственного интеллекта. Эта лекция посвящена краткому введению в основы машинного обучения. Григорий рассказал общую терминологию в этой области, а также описал виды задач, решаемых машинным обучением. Помимо этого, лекция знакомит с основными этапами машинного обучения, видами моделей и метриками качества полученных данных.

 3*. Введение в Deep Learning (Григорий Сапунов, Intento) 

Видео | Слайды

Глубокое обучение (или deep learning) в настоящее время набирает популярность из-за возможности не прописывать конкретные алгоритмы для решения задачи, а использовать обучение представлениям. Развитию этих методов также способствует увеличение вычислительной мощности процессоров. Лекция посвящена основам нейросетей: их видам (полносвязные нейросети, автоэнкодеры, свёрточные, рекуррентные) и решаемым ими задачам. Отдельно Григорий обрисовал современное состояние и тренды.



 4*. Введение в онкогеномику и анализ омиксных данных в онкологии (Михаил Пятницкий, НИИ биомедицинской химии им. В.Н.Ореховича) 

Видео | Слайды

Секвенирование человеческого генома, изучение человеческих генетических вариаций, секвенирование метагенома человека, транскриптомный анализ человеческих тканей — все эти биологические методы в приложении к “Big Data” дали ученым большой объем ценной информации о том, что отличает человека от других животных. Эта лекция посвящена «омикам» и их практическому использованию. Отдельно Михаил затронул использование этих данных в онкологии.



5. Мультиомика в биологии: интеграция технологий (Константин Оконечников, German Cancer Research Center)

Видео | Слайды

Бурное развитие экспериментальных технологий в молекулярной биологии, таких как например, секвенирование, позволили совместить в себе изучение большого спектра функциональных процессов происходящих в клетках, органах или даже целом организме. В лекции рассмотрено как правильно совмещать массивные экспериментальные данные, полученные из геномики, транксриптомики и эпигеномики для установления связей между компонентами происходящих биологических процессов. Наглядные примеры применения мультиомики выбраны из высоко востребованной области исследований раковых заболеваний с фокусом на педиатрическую онкологию.



6. Количественная генетика: история и перспективы (Юрий Аульченко, лаборатория теоретической и прикладной функциональной геномики ФЕН НГУ, группа методов генетического анализа, ИЦиГ СО РАН)

Видео | Слайды

Количественная генетика — точная наука, которая основывается на небольшом числе ключевых наблюдений и базовых моделей, позволяющих дать количественное описание природных (микро)эволюционных явлений и предсказать результаты генетических экспериментов. Она использует мощный математический аппарат. Многие современные методы статистики были изначально разработаны для решения проблем количественной генетики. Прорывное развитие молекулярно-биологических технологий за последнее десятилетие позволило характеризовать сотни тысяч живых организмов по миллионам геномных и других «омиксных» параметров. Общее количество проведенных экспериментов и уже накопленных данных колоссально. Актуальная задача современной количественной генетики — разработка моделей, которые позволят описать наследования многоуровневых фенотипических высокой размерности. В своей лекции Юрий дал краткий обзор истории количественной генетики и проблем, которые стоят перед этой наукой.



7*. Технологии секвенирования (Кирилл Григорьев, Caribbean Genome Center, University of Puerto Rico)

Видео | Слайды

Развитие и эволюция процессов секвенирования неразрывно связаны с эволюцией технологических возможностей. Лекция показывает историю и процесс развития технологий секвенирования от Сэнгера до наших дней. Отдельно Кирилл рассказал про преимущества и недостатки каждого из существующих в настоящее время методов, а также о характере получаемых данных и их применении в различных областях.


8. Транскриптомика: практические методы и применяемые алгоритмы (Александр Предеус, Институт биоинформатики)

Видео | Слайды

Транскриптомика уверенно заняла место в списке самых популярных задач, встающих перед NGS-биоинформатиками. Дифференциальный анализ экспрессии генов, кластеризация экспрессионных данных, и интерпретация полученных данных в терминах метаболических и сигнальных каскадов позволяют получить богатейшую информацию о практически любой системе. В лекции рассмотрены лучшие пайплайны, основные проблемные места в дизайне экспериментов и обработке, а также практические случаи удачного применения транскриптомных подходов.



9. Анализ данных NGS в медицинской генетике: определение, аннотация и интерпретация генетических вариантов (Юрий Барбитов, СПбГУ, Александр Предеус, Институт биоинформатики)

Видео | Слайды

Использование секвенирования нового поколения давно ушло за пределы классической науки и успешно применяется во многих других областях, в том числе в здравоохранении. Лекция посвящена ключевым аспектам анализа данных секвенирования нового поколения в медицинской генетике. Юрий показал весь путь от получения сырых ридов до постановки диагноза, с упоминанием трудностей, возникающих при определении, аннотации и интерпретации генетических вариантов. Отдельно он затронул распространенные ошибки, допускаемые на каждом из этапов обработки данных. В заключение дан краткий обзор перспективных направлений исследований, способных улучшить точность постановки диагноза с использованием методов высокопроизводительного секвенирования

10. Практическое применение ChIP-Seq и родственных методов (Александр Предеус, Институт биоинформатики)

Видео | Слайды

Методы ChIP-Seq, а также «геномного футпринтинга» (ATAC-Seq, FAIRE-Seq, DNase-Seq) широко применяются для нахождения механизмов регуляции биологических процессов, в частности, для транскрипционной регуляции. Потенциальное пространство изучаемых факторов очень многомерно, однако селективный подход позволяет получить богатую информацию о регуляции в системе на основании всего нескольких экспериментов. На примере конфликтующих современных теорий, Александр показал основные сложности интерпретации регуляторной информации, и способы консолидации полученных результатов.



11*. Что можно делать с данными iScan (Татьяна Татаринова, University of La Verne )

Видео | Слайды

Компания Illumina выпускает большое количество приборов под различные нужды. Чипирование позволяет быстро обнаруживать однонуклеотидные полиморфизмы (SNP) для большого количества образцов. Лекция посвящена обзору данных чипов iScan и их применению в клинической диагностике. 



12. Глубокое обучение в вычислительной биологии (Дмитрий Фишман, University of Tartu)

Видео | Слайды

Глубокое обучение активно используется не только для улучшения машинного перевода или распознавания речи, но и позволяет решить многие проблемы в области вычислительной биологии. Лекция посвящена применению методов глубокого обучения на конкретных биологических примерах. Дмитрий рассказал о том, что нового происходит в биологии и медицине с использованием глубокого обучения, и можно ли говорить о том, что машины революционизируют медицину и биологию.



13*. Применение методов машинного обучения для поиска потенциальных патогенных мутаций в геноме человека (Анна Ершова, МФТИ, НИИ физико-химической биологии МГУ им. М.В. Ломоносова, ФНИЦ эпидемиологии и микробиологии им. Н.Ф. Гамалеи)

Видео | Слайды

Поиск патогенных мутаций стал актуальным в связи с секвенированием генома человека. Однако, вручную такую задачу решить просто невозможно. Лекция посвящена тому, как машинное обучение может помочь справиться с этой задачей. 



14*. Иммуноинформатика (Вадим Назаров, НИУ ВШЭ, ИБХ РАН)

Видео | Слайды

Машинное обучение уже довольно давно активно применяется в самых разных сферах жизни, но в иммунологии для него нашли место совсем недавно. В этой лекции Вадим рассказал о нескольких примерах применения машинного и глубинного обучения в иммунологии, включая задачу предсказания связывания МНС-пептид комплексов и анализа репертуаров Т-клеточных рецепторов. 



15*. Изучение адаптации к хозяину и развития резистентности в вирусах ВИЧ и гепатита С с помощью методов структурной биоинформатики (Ольга Калинина, Институт информатики общества Макса Планка)

Видео | Слайды

Вирус иммунодефицита человека (ВИЧ) и вирус гепатита С вызывают тяжелые заболевания, которые с трудом поддаются терапии. Как и многие другие ретро- и РНК-вирусы, эти вирусы быстро эволюционируют и, таким образом, могут приспосабливаться как к воздействию специфических антивирусных препаратов, так и к адаптивному иммунному ответу со стороны организма хозяина. В этой лекции Ольга показала, как с помощью комбинирования анализа последовательностей вирусных белков с анализом их пространственной структуры можно делать предсказания о развитии механизмов резистентности и взаимодействии вирусов с иммунной системой хозяина.



16. Предсказание эффекта мутаций (Василий Раменский, МФТИ)

Видео | Слайды

Современные методы секвенирования дают огромный объем информации о полиморфизме генома, то есть отличиях индивидуальных геномов друг от друга. Эти отличия (варианты) возникают в результате мутаций при репликации ДНК и частично фиксируются в популяции. Распространенность, локализация и функциональный эффект геномных вариантов сильно различаются – от полной летальности до отсутствия какого-либо влияния на индивидуальный фенотип. В лекции рассмотрены современные подходы к предсказанию функционального эффекта вариантов, используемые в персонализированной медицине, медицинской и популяционной генетике. 



17. Многомасштабное моделирование и дизайн биологических молекул (Николай Дохолян, University of North Carolina at Chapel Hill)

Видео

Жизнь биологических молекул охватывает масштабы времени и длины, соответствующие шкалам времени и длины от атомного до клеточного. Следовательно, новые подходы к молекулярному моделированию должны быть по своей сути многомасштабными. В своей лекции Николай описал несколько методологий, разработанных в его лаборатории: алгоритм быстрого дискретного молекулярного динамического моделирования, белковый дизайн и инструменты структурной доработки. Используя эти методологии, можно описать несколько приложений, которые проливают свет на молекулярную этиологию кистозного фиброза и находят новые фармацевтические стратегии для борьбы с этим заболеванием, моделируют структуру трехмерной РНК и разрабатывают новые подходы к контролю белков в живых клетках и организмах.



18. Гомологичный фолдинг белков (Павел Яковлев, BIOCAD)

Видео

В современной структурной биологии есть ряд вычислительных методов, позволяющих с высокой достоверностью характеризовать биологические молекулы, их схожесть и различия, способы взаимодействия и функции. Для построения подобных вычислений входным параметром всегда выступает пространственная структура белка, однако ее получение может быть затруднен, несмотря на полувековой прогресс в области кристаллографии. Лекция посвящена решению этой проблемы с помощью гомологичного моделирования структур белков — построения трехмерных структур из схожих фрагментов. Для примера рассмотрены вариабельные домены антител — белков, обладающих уникальным структурным разнообразием вариабельных петель.



19. Как перестать медитировать и начать моделировать (Артур Залевский, МГУ им. М. В. Ломоносова)

Видео | Слайды

Большое количество данных, получаемых методом NGS, позволяет не только получать из этого биологические выводы, но и использовать их для моделирования. Построенные модели позволяют лучше понять биологические данные и получить еще больше биологического смысла из эксперимента. Лекция посвящена моделированию и начальным этапам этого процесса. 



20*. Стоя на плечах гигантов, или зачем нужны консорциумы (Герман Демидов, Centre for Genomic Regulation, The Barcelona Institute of Science and Technology, Universitat Pompeu Fabra)

Видео | Слайды

За последние десятилетия развитие биологии было связано с накоплением массивов данных, огромных настолько, что отдельные исследовательские группы уже не справлялись с их биоинформатическим анализом. С целью решить эту проблему начали создаваться консорциумы из десятков лабораторий, такие как Human Genome Project, 1000GP, ENCODE и другие. Благодаря таким коллаборациям, в открытом доступе есть данные разнообразных типов, полученные с помощью различных технологий. Как результат, сравнение новых экспериментальных данных с уже существующими стало стандартной частью любого исследования. Консорциумы производят не только данные, но и биоинформатические пайплайны для их обработки, и стандартные форматы, и процедуры оценки качества. На этой лекции обсуждается, как работают консорциумы, как пользоваться результатами их работы и что делать, если вы вдруг обнаружили себя членом такого консорциума и вам нужно обрабатывать терабайты данных, а потом обмениваться результатами со всеми остальными участниками.



21*. Обзор биоинформатических компаний в России и мире (Андрей Афанасьев, yRisk)

Видео | Слайды

В современном мире наука и бизнес все более и более переплетаются. Не обошел этот тренд и область биоинформатики. Андрей рассказал об ожиданиях и реальности рынка, об историях успеха и историях провалов, о людях и местах, связанных с биоинформатикой.



22. Продвинутый анализ вариаций (SNV, InDel, SV) с помощью геномного браузера NGB (Геннадий Захаров, EPAM, Институт Физиологии им. И.П. Павлова, РАН)

Видео | Слайды

Лекция охватывает процесс визуального анализа простых (SNV, InDel) и структурных вариаций в геномном браузере. Все примеры демонстрируются с использованием браузера NGB, отвечающего большинству требований и рекомендаций анализа структурных вариаций, в том числе различные виды визуализаций и получение аннотаций из внешних баз данных. В лекции на реальных примерах показаны сценарии валидации и анализа последствий простых и структурных вариаций.


Послесловие
Для тех, кто ничего не понял хочет развиваться в области биоинформатики — до 27 мая ещё открыт прием заявок на летнюю школу в этом 2018-м году. Сама школа пройдет 23–28 июля под Санкт-Петербургом. Есть шанс вскочить в последний вагон и гордо всем показывать пост с обзором лекций следующего года, говоря, что видели это лично.

В 2017 году школа проводилась при поддержке наших постоянных партнеров – компаний  JetBrains, BIOCAD и EPAM Systems, за что им огромное спасибо. 

Кстати, пост с лекциями позапрошлых школ.

Всем биоинформатики!

",vyahhi
"Хорошая новость для тех, кто ждал новые интересные функции в IntelliJ IDEA. Мы наконец-то рады сообщить, что Early Access Program для IntelliJ IDEA 12 официально открыта. Кодовое название нового релиза – Leda. Итак, встречайте IntelliJ IDEA 12 Leda!



Чтобы попробовать IntelliJ IDEA Leda, нужно скачать EAP дистрибутив для вашей платформы.

Новые функции в IntelliJ IDEA 12:


Дизайнер UI для Android
Совершенно новый подход к компиляции проекта
Поддержка jBPM 5.0 (BPMN 2.0)
Поддержка Play Framework 1.2.4
Поддержка Hibernate 4.0
Поддержка Groovy 2.0
Интеграция с TomEE
Поддержка iOS Simulator для AIR Mobile
Интеграция с CloudFoundry
Улучшена поддержка Spring Framework для Core, Security и Web Flow
Улучшена поддержка CDI
Многочисленные улучшения для Subversion, Git and Perforce
Улучшена работа с диаграммами UML для Flash и Flex

Более подробная информация об этих и других новых функциях скоро будет опубликована в нашем блоге.

Мы уверены, что самые лучшие инструменты для разработчиков можно создать, только прислушиваясь мнению пользователей. Именно поэтому для нас важно, чтобы вы попробовали новые функции как можно раньше и сообщили нам свои пожелания!

Пожалуйста делитесь своими впечатлениями на нашем EAP форуме и отправляйте информацию о найденных ошибках в YouTrack.

Напоминаем, что многие функции находятся на стадии разработки. Поэтому убедитесь, что вы сохранили своей проект, перед тем как открывать его в новой версии.

Develop with pleasure!
IntelliJ IDEA Team",andreycheptsov
" У математиков есть интересная вещь — число Эрдёша. По сути это расстояние от любого математика до Пола Эрдёша через совместные работы. У самого Эрдёша это число равно нулю. У его соавторов число Эрдёша равно единице, у соавторов соавторов — двойке и так далее.

Недавно меня посетила мысль — а что если сделать что нибудь подобное для Хабра? Только не по соавторству (как это считать вообще, по комментариям?) а по друзьям. Эдакая теория шести рукопожатий на практике. В качестве опорной точки был выбран всем наверное известный пользователь boomburum. Расстояние от него до других пользователей я, не мудрствуя лукаво, назвал числом Бумбурума.

Узнать насколько Вы далеки от Бумбурума можно здесь.

Краткий пересказ итогов: из почти 60000 пользователей Хабра с Бумбурумом связаны чуть более 25 тысяч, у большинства из них число Бумбурума 3 либо 4. Максимальное зарегистрированное число Бумбурума — 10 (хабрадевушка festgo). Небольшое замечание: для целей исследования приглашённые человеком на сайт люди приравниваются к друзьям, даже если явно в друзья не занесены.

Сбор данных занял чуть более двух суток, с краулером написанным на Node.js + Redis. Пост с остальными техническими деталями здесь.",kurokikaze
"Вчера JetBrains опубликовал превью IntelliJ IDEA 15.

Для тех, кто не участвует в EAP, это возможность познакомиться с новой версией. Для нас это возможность рассказать о том, над чем мы работали в последнее время.



Во-первых, продолжая адаптировать IDE к Java 8, мы улучшили взаимодействие дебаггера с лямбда выражениями. Теперь при установке брейкпоинта вы можете указать не всю строку, а конкретное лямбда выражение, которое в ней содержится. Точно также вы можете применять Run to cursor по отношению конкретному лямбда выражению вне зависимости от того, на какой строке оно находится. И наконец если вы вызываете Step Into, IDE предложит перейти к лямбда выражению, являющемуся параметром.



Кроме того в дебаггер был добавлен экшн Force return, который позволяет прервать исполнение текущего метода и вернуть выбранное вами значение. Это удобно, если вы хотите поменять логику выполнения кода в целях отладки.

Во-вторых, недавние улучшения алгоритма индексации позволили реализовать инспекцию для мгновенного обнаружения дубликатов кода. Теперь если напишете или скопируете код, уже содержащийся в другой части проекта, IDE сразу же вам об этом сообщит и покажет совпадения. Чтобы сделать инспекцию ненавязчивой, мы показываем только совпадения длиннее 5-ти строк.



Интерфейс также подвергся изменениям. Run configurations теперь имеют индикаторы состояния. Если конфигурация типа Single instance only, кнопка Run будет выглядеть как Restart.



Гаттер теперь позволяет запускать приложения и тесты. Более того, для тестов, он теперь умеет отображать результаты последнего запуска.

 

Появилась возможность скрывать ненужные Tool windows не отключая при этом плагин. Для этого достаточно выбрать пункт Remove from Sidebar в меню соответствующего Tool window.

Функция поиска текста также стала удобнее. Когда вы вызываете Find in Path, теперь IDE умеет отображать результаты мгновенно в закладке Preview. Это позволяет тратить меньше времени на переход в окно поиска и обратно.



Rebase стала полноценной операцией и доступна в меню Branches, унаследовав синхронные операции над несколькими репозиториями, автоматический стешинг (stashing) локальных изменений и резолв конфликтов. Само меню Branches стало доступно из закладки Log. 



При нажатии на гаттер, IDE теперь выделяет изменения отдельных частей строки. Также гаттер научился отличать изменения whitespace от других изменений: грязно-желтый цвет вместо синего.

Во время операции по резолву конфликтов теперь можно пользоваться командой Undo. В Diff viewer был добавлен экшн Annotate.

Пользователи Mercurial получили инструменты для работы с патчами. Пользователи Perforce получили возможность хранить локальные изменения на сервере Perforce: операция Shelve in Perforce.

Плагин для работы с Docker улучшился за счет удобного редактирования настроек контейнера; быстрого создания контейнера для выбранного имаджа; и поддержки Docker Toolbox.



Мы поддержали новые возможности добавленные в Spring 4.2: @Bean на дэфолтных методах в интерфейсах; @Import для обычных классов; аннотации @EventListener, @AliasFor, и @ContextConfiguration.



Улучшена поддержка Spring Boot проектов: добавлены подсказки в application.yml и additional-spring-configuration-metadata.json файлах; добавлена автоматическая настройка фасета на основе аннотаций; улучшено создание проектов через Spring Initializr.

Для Arquillian мы добавили возможность конфигурации контейнеров. Затем контейнер можно указать при запуске тестов.

В Scala плагине были добавлены поддержка SAM (single abstract method); интеншн для развертывания макросов; Postfix комплишн; Inline рефакторинг дла Type aliases; а также распознавание динамических имен тестов (например “test(variable)” или “test(stringExpression)”).

Язык Kotlin, разрабатываемый в недрах JetBrains, приближается к скорому релизу, внося последние важные изменения в синтаксис, совместимость с Java, и поддержку IDE. Результатом этой работы стало то, что плагин для Kotlin теперь поставляется вместе с IDE. Для тех, кто не знаком с Kotlin, а также тех, кто давно не интересовался им, это прекрасная возможность исправить это. Подробнее о последних изменениях можно прочитать в блоге Kotlin.

Работая над Kotlin и Scala мы не забываем и про Groovy. Для него мы добавили поддержку Builder AST трансформации.

Фронтенд разработчики, использующие React, будут рады узнать об улучшенной поддержке в JSX файлах: добавлены комплишн, инспекшны, Surround with экшн, и навигация.



Также добавлена поддержка новых языковых конструкций TypeScript 1.6 и некоторые EcmaScript 7 (например async/await).

Не секрет, что JetBrains трудится над новой IDE для работы с SQL и базами данных. Поскольку IntellIJ IDEA включает этот функционал, стоит упомянуть его улучшения. Главным из них является нативная и быстрая интроспекция: получение информации об объектах базы данных с учетом специфики неучтенной в JDBC драйверах. Также появился удобный редактор таблиц, и возможность смотреть Execute plan для запросов.



Кроме прочего превью включает изменения Android Studio 1.3, включая Android Memory (HPROF) Viewer и Allocation Tracker.

Буду рад ответить на любые вопросы!",andreycheptsov
"

Рад представить вам 27 лекций по биоинформатике (включая описания, слайды и полные видеозаписи). Лекции читались на летней школе по биоинформатике, которая проходила в июле 2014 под Санкт-Петербургом, собрала вместе 100 студентов со всей России и СНГ, а также лекторов из МГУ, МФТИ, Сколтеха, РАН, СПбАУ, СПбГПУ, СПбГУ, Yale University, Fox Chase Cancer Center, George Washington University, Pennsylvania State и других прекрасных организаций.

Школу традиционно проводила команда Института биоинформатики, а поддерживали ее СПбАУ РАН, СПбГУ, JetBrains, РВК, BIOCAD, EMC, Фонд «Династия» и РФФИ, благодаря чему удалось сделать мероприятие абсолютно бесплатным для всех участников.

В этом году школа пройдёт 20-25 июля под Москвой (информация тут, дедлайн скоро), все лекции также будут записываться.

Организация материалов
Если список ниже покажется вам слишком сложным для поиска и выбора лекций, то можете воспользоваться также программкой школы, плейлистом на ютубе и страницой со всеми слайдами.

1. Введение в биоинформатику (Алла Лапидус, СПбАУ РАН, СПбГУ)
[Видео] [Слайды]

Революция в ядерной физике привела много лет назад к накоплению огромного количества данных, которые надо было хранить и обрабатывать. Это оказалось под силу только компьютерам, а за ними и супер-компьютерам.

Бум геномики последних 10-15 лет продолжил эту традицию и приумножил ее: медико-биологические исследования касаются каждого из нас, а значит и данных будет производиться все больше и больше особенно в свете идеи персонализированной медицины и требований большой фармы. Тут уж без компьютерных знаний и программных продуктов и вовсе делать нечего. Но кроме того, надо хорошо знать что изучать, как, как анализировать данные и насколько им можно верить. Как хранить и обрабатывать. Где применять и где использовать. 

В лекции освещено большинство этих «как». Алла ставит своей целью рассказать о значимости и широте приложений биоинформатики.

2. Мутационный процесс и методы его изучения (Алексей Кондрашов, МГУ)
[Видео] [Слайды]

Мутационный процесс — первый из двух необходимых факторов дарвиновской эволюции. В лекции рассмотрены причины и механизмы возникновения мутаций, методы измерения параметров мутационного процесса на малых, средних и больших временах, данные о скоростях мутирования и простейшие модели влияния мутирования на генетическую структуру популяции.

3. Естественный отбор и методы его изучения (Алексей Кондрашов, МГУ)
[Видео] [Слайды]

Естественный отбор — второй из двух необходимых факторов дарвиновской эволюции. В лекции рассмотрены причины и механизмы возникновения отбора, методы и параметры, применяемые для его описания и изучения, данные об отборе в природе и простейшие модели влияния отбора на популяцию. 

4. Детское развитие и биоинформатика: задачи и решения (Елена Григоренко, Yale University)
[Видео] [Слайды]

В лекции рассказано о нескольких «стыках» наук о развитии и биоинформатики.
Обсуждаются проблемы пренатальной диагностики и пренатального секвенирования, а также экзомного секвенирования новорожденных.

Рассказывается об изучении влияния ранней среды развития на состояние метилома, и о геномной этиологии детских расстройств развития. В заключение рассмотрены этические вопросы, связанные с использованием геномной информации в принятии диагностических и индивидуализированных решений о развитии ребенка.

5. Секвенирование нового поколения: принципы, возможности и перспективы (Мария Логачева, МГУ)
[Видео] [Слайды]

Секвенирование нового поколения (NGS) преобразило многие области биологических и биомедицинских исследований. Оно позволяет относительно быстро и недорого получать последовательности генов и геномов ранее не изученных видов, а также – на материале большого числа индивидуумов одного вида – выявлять внутривидовую изменчивость, проводить поиск генов, ассоциированных с интересующими признаками. Помимо собственно определения последовательностей геномов NGS позволяет проводить детальный анализ экспрессии генов в разных тканях организма или при разных условиях, широко используется в эпигенетических исследованиях.

В лекции дан обзор основных методов секвенирования, их физико-химические принципы, особенности пробоподготовки, характеристика получаемых данных, их стоимость и типичные ошибки. Особое внимание уделено применимости разных методов для решения биологических задач, и даны рекомендации по планированию экспериментов, связанных с NGS.

6. Структурная биология белка: обзор проблем и подходов (Павел Яковлев, BIOCAD)
[Видео] [Слайды]

Использование только первичных последовательностей позволяет решить большинство вопросов, связанных с нуклеиновыми кислотами (ДНК и РНК). При изучении функций белков знание только первичной последовательности уже не позволяет решить большинство задач. Какие белки будут взаимодействовать между собой и как сильно? Повлечет ли замена аминокислоты смену функции белка? Как убрать побочные эффекты от лекарственного белка или увеличить его эффективность? На эти вопросы призвана ответить область биоинформатики, занимающаяся разработкой алгоритмов для моделирования пространственной формы белков и их взаимодействий.

7. De novo сборка транскриптомов (Артем Касьянов, МФТИ)
[Видео] [Слайды]

В связи со значительным удешевлением и повышением производительности технологий число проектов, посвященных de novo секвенированию геномов немодельных организмов, значительно возросло. В ряде случаев de novo секвенирование и сборка генома затруднена — к примеру, в случае его значительных размеров. В таких случаях прибегают к изучению транскриптома. Также de novo анализ транскриптома может понадобиться в случае изучения видов с большим количеством альтернативно сплайсирующихся генов, так как даже при наличии генома достаточно сложно определить полный перечень изоформ.

Лекция посвящена вопросам сборки транскриптомных данных в отсутствии генома. Рассмотрены такие темы, как сплайс-графы, программы trinity и newbler, сравнение и анализ сборок, сборка транскриптомов полиплоидных организмов.

8. Эволюция алгоритмов сборки генома (Антон Банкевич, СПбАУ РАН)
[Видео] [Слайды]

На данный момент существует уже несколько поколений методов секвенирования ДНК. Однако новые технологии бессмысленны без алгоритмов, способных обработать их результаты. Постоянно возникающие новые методы секвенирования ставят всё новые алгоритмические задачи. Одной из важнейших таких задач является сборка генома. В лекции рассказано об эволюции методов секвенирования и алгоритмических подходах к сборке генома, возникавших и продолжающих возникать с каждым шагом этой эволюции.

9. Введение в молекулярную биологию и генетику (Павел Добрынин, СПбГУ)
[Видео] [Слайды]

Лекция посвящена структуре и организации ДНК у прокариот и эукариот, молекулярным механизмам, отвечающим за сохранение и воспроизведение генетического материала. Разобраны основные механизмы, стоящие за генетической изменчивостью, и варианты реализации генетического материала.

10. Задача множественного локального выравнивания и построения синтенных блоков (Илья Минкин, Pennsylvania State University)
[Видео] [Слайды]

В лекции рассматривается две похожие алгоритмические задачи в сравнительной геномике: множественное локальное выравнивание и построение синтенных блоков. Эти алгоритмы играют крайне важную роль в сравнении полных последовательностей геномов. Рассказано о постановке задач и о базовых идеях, на которых построены некоторые современные алгоритмы.

11. Зачем и как делать презентации (Андрей Афанасьев, iBinom)
[Видео] [Слайды]

В лекции обсуждаются типы презентаций, зачем они на самом деле нужны, и рассказывается, как выступить так, чтобы слушатели все поняли и не заснули, а также каких ошибок надо избегать и с кого брать пример при подготовке своего выступления.

12. Бизнес в биоинформатике (Андрей Афанасьев, iBinom)
[Видео] [Слайды]

В лекции рассказано, какие биоинформатические компании существуют в России и в мире, кто их создал и на чем именно они зарабатывают деньги.
Обсуждены планы крупных игроков и тренды в индустрии.

В завершающей части лекции Андрей дает пищу для размышлений об организации собственного стартапа или выборе нового места работы.

13. Перспективы и проблемы системной биологии (Илья Серебрийский, Fox Chase Cancer Center)
[Видео] [Слайды]

Лекция призвана дать общее представление о системных свойствах биологических объектов. Илья Серебрийский рассказывает об основных составляющих системной биологии, об интерактомике и построении моделей, об основных проблемах в системной биологии и попытках их разрешения. Обсуждаются некоторые достижения системной биологии (главным образом из области онкологии). Также рассматриваются общедоступные ресурсы для системной биологии (TCGA/cBioPortal, CCLE).

14. Лабораторная по системной биологии (Илья Серебрийский, Fox Chase Cancer Center)
[Видео] [Слайды]

Занятие посвящено построению сетей взаимодействия на основе общедоступных баз данных. Использованы такие базы данных и веб-сервисы, как Entrez, GeneMANIA, BioGRID и другие. Рассмотрены различные методы визуализации сетей взаимодействия, в частности с помощью программы Cytoscape.

15. Метагеномика (Алла Лапидус, СПбАУ РАН)
[Видео] [Слайды]

Микробы везде, микробы правят миром, но далеко не со всеми из них мы можем познакомиться в лабораторных условиях. Подавляющее большинство из них мы не знаем как вырастить, а значит, их надо как-то извлекать из их естественной среды обитания — земли, воды, из-под корней деревьев и т.д., где они живут большими группами.

Метагеномика и помогает в этих весьма запутанных исследованиях. А еще она помогает кормить, согревать, лечить людей и ловить преступников. Всему этому и биоинформатике в метагеномике и была посвящена эта лекция.

16. Проблема проверки множества статистических гипотез (Антон Коробейников, СПбГУ, СПбАУ РАН)
[Видео] [Слайды]

В лекции рассмотрена классическая проблема проверки множества гипотез одновременно. Подобного рода задачи встают сплошь и рядом, например, при полногеномном поиске ассоциаций или анализе данных микрочипов. Рассмотрены возможные варианты решения этой проблемы, начиная от классического подхода Бонферрони и заканчивая методами, позволяющими контролировать FDR (false discovery rate).

17. Как правильно и неправильно использовать статистику (Никита Алексеев, СПбГУ, George Washington University)
[Видео] [Слайды]

Лекция посвящена ошибкам в применении статистики и способам их предотвращения. В частности, дан ответ на вопрос: в каких ситуациях можно использовать стандартные критерии для сравнения типичных представителей выборки, и что делать, если стандартные критерии не подходят?

18. Математические модели регуляции экспрессии гена (Мария Самсонова, СПбГПУ)
[Видео] [Слайды]

Понимание тонких механизмов регуляции активности генов ‒ необходимое условие для расшифровки механизмов возникновения болезней у человека. К сожалению, на сегодняшний день такое понимание отсутствует: мы не можем удовлетворительно объяснить, ни каким образом группы транскрипционных факторов взаимодействуют друг с другом, с белками хроматина, другими адапторными белками и комплексом РНК‒полимеразы, ни как и почему тот или иной участок последовательности ДНК может контролировать сложную, ограниченную в пространстве и детерминированную во времени картину экспрессии гена.

Математическое моделирование помогает понять механизмы генной регуляции путем механистического и количественного описания этого процесса. В лекции рассмотрены два наиболее распространенных подхода к моделированию экспрессии генов ‒ основанные на нелинейных уравнениях реакции‒диффузии и термодинамическом равновесии. Последовательно рассмотрены этапы построения таких моделей и приведены примеры их использования для генерации новых знаний.

19. Полулокальное и локальное выравнивание последовательностей (Александр Тискин, University of Warwick)
[Видео] [Слайды]

Вычисление наибольшей общей подпоследовательности (longest common subsequence, LCS) двух строк — одна из классических алгоритмических задач, имеющая широкое применение как в информатике, так и в вычислительной биологии, где она известна как «глобальное выравнивание последовательностей». Во многих приложениях необходимо обобщение этой задачи, которое мы называем вычислением полулокальной LCS (semi-local LCS), или «полулокальным выравниванием». В этом случае требуется вычислить LCS между строкой и всеми подстроками другой строки, и/или между всеми префиксами одной строки и всеми суффиксами другой. Помимо важной роли этой обобщенной задачи в строковых алгоритмах у нее обнаруживаются неожиданные связи с алгеброй полугрупп и вычислительной геометрией, с сетями сравнений (comparison networks), а также практические приложения в вычислительной биологии. Кроме того, задача вычисления полулокальной LCS может использоваться в качестве гибкого и эффективного подхода к (полностью) локальному выравниванию биологических последовательностей.

В лекции представлено эффективное решение задачи вычисления полулокальной LCS и дан обзор основных сопутствующих результатов и приложений. В их числе динамическая поддержка LCS; быстрое вычисление клик в некоторых специальных графах; быстрое сравнение сжатых строк; параллельные вычисления на строках.

20. Анализ семейств молекулярных последовательностей (Сергей Нурк, СПбАУ РАН)
[Видео] [Слайды]

При решении самых разных задач, от поиска регуляторных мотивов до предсказания функций белков, биоинформатикам приходится работать с целыми «семействами» эволюционно связанных нуклеотидных или аминокислотных последовательностей. В лекции рассмотрены различные способы представления таких семейств, применяемые в популярных биоинформатических инструментах и базах данных. Рассказано, как расшифровать PROSITE pattern и проинтерпретировать sequence logo, в чем отличие profile HMM от PSSM, а также как избежать ошибок при их построении и анализе результатов.

21. Эпигеномика, РНК и все такое (Андрей Миронов, ИППИ РАН)
[Видео] [Слайды]

В лекции дан обзор понятия эпигенетики. Рассмотрены уровни структурной организации хроматина, рассказано о различных эпигеномных модификациях: модификациях гистонов, метилировании CpG-мотивов. Обсуждено их влияние на экспрессию генов.
Также рассмотрена роль эпигеномных модификаций в сплайсинге, импринтинге и т.п.

Рассказано о системе XIST (X-inactivation specific transcript), антисмысловых РНК, сплайсинге, РНК-зависимой регуляции.
Также рассмотрены модели для изучения эпигеномных модификаций.

22. Контроль качества данных NGS (Константин Оконечников, Max Planck Institute for Infection Biology)
[Видео] [Слайды]

В лекции описаны погрешности секвенирования, характерные для технологий NGS. Примерами таких ошибок являются ПЦР-амплификация, сиквенс-специфичные ошибки прочтения, неравномерное распределение GC-состава и прочие. Разобраны различные методы оценки этих погрешностей и учета их при анализе. Затронут вопрос практических методов решения и существующих программных инструментов.

 23. Контроль качества данных NGS, семинар (Константин Оконечников, Max Planck Institute for Infection Biology)
[Видео] [Слайды]

В ходе семинара участники научились применять навыки программирования для контроля качества данных NGS. Были рассмотрены форматы данных BAM/SAM, библиотеки pysam и pyplot, фундаментальные понятия. В частности, разобраны примеры подсчета GC-состава, оценки частоты дупликаций, распределения длины вставки, расчета покрытия в окнах.

24. Практическое секвенирование РНК (Константин Оконечников, Max Planck Institute for Infection Biology)
[Видео] [Слайды 1] [Слайды 2]

На семинаре разбиралась практическая задача анализа данных РНК-секвенирования.
В формате презентации и практики были обсуждены и продемонстрированы методы: выравнивания ридов, первоначального контроля качества, пайплайны для изучения экспрессии генов DESeq и Cufflinks, нахождение изоформ транскриптов, поиск гибридных генов.

 25. Биоинформатические подходы к изучению и лечению рака на примере рака легких (Мария Шутова, ИОГен РАН)
[Видео] [Слайды]

Рак — одно из самых распространенных и опасных заболеваний. Его называют «болезнью генома» за огромный вклад накопленных и новых мутаций в его появление и развитие. При этом известно, что не только состояние генома, но и транскрипционный и даже эпигенетический статус первичных раковых клеток, а также сложный гомеостаз растущей опухоли напрямую влияют на ее свойства и, главное, восприимчивость к терапии. Единственную возможность разобраться в этом клубке взаимозависимых факторов дает биоинформатика. В лекции разобраны основные вопросы, связанные с изучением опухолеобразования, и возможные способы ответить на них с использованием биоинформатических подходов.

26. Новые омики в биологии человека: метаболомика и липидомика (Филипп Хайтович, Сколтех)
[Видео] [Слайды]

Секвенирование человеческого генома, изучение человеческих генетических вариаций, секвенирование метагенома человека, транскриптомный анализ человеческих тканей — все эти биологические методы в приложении к «big data» дали ученым большой объем ценной информации о том, что отличает человека от других животных.

Эта лекция посвящена новым «омикам», позволяющим ответить на вопросы о человеческом организме при изучении мозга и других тканей — метаболомике и липидомике.

27. Геномная сборка: взгляд в завтрашний день (Андрей Пржибельский, СПбАУ РАН)
[Видео] [Слайды]

В последние годы технологии секвенирования нового поколения сделали заметный шаг вперед: появились IonTorrent и Pacific Biosciences, Ilumina создала ряд новых протоколов. Но, как оказывается, всего этого недостаточно для того, чтобы считать проблему сборки геномов решенной. Для того чтобы пройти путь от извлечения ДНК до полностью завершенного генома, как правило, требуются десятки различных специалистов, сотни тысяч долларов и годы работы. Поэтому сегодня эта задача остается актуальной как с точки зрения биотехнологий, так и с точки зрения биоинформатики. В лекции рассмотрены последние прорывы в методах сборки геномов, новейшие типы данных, которые, возможно, позволят вывести эту задачу на новый уровень, и перспективы геномики в ближайшем будущем.

Вместо заключения
Ещё 28 лекций с позапрошлой (самой первой) летней школы по биоинформатике можно посмотреть… почему-то на мегамозге. Там же оказался и отчётный пост от одного из участников школы. И недавно мы писали, как были организованы научные проекты.

Спасибо за внимание. Всем биоинформатики!

",vyahhi
